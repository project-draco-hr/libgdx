{
  super("Options",null);
  initializeComponents();
  attachedCheckBox.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event){
synchronized (editor.effect) {
        editor.getEmitter().setAttached(attachedCheckBox.isSelected());
      }
    }
  }
);
  continuousCheckbox.setSelected(editor.getEmitter().isContinuous());
  continuousCheckbox.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event){
synchronized (editor.effect) {
        editor.getEmitter().setContinuous(continuousCheckbox.isSelected());
      }
    }
  }
);
  alignedCheckbox.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent event){
synchronized (editor.effect) {
        editor.getEmitter().setAligned(alignedCheckbox.isSelected());
      }
    }
  }
);
  additiveCheckbox.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent event){
synchronized (editor.effect) {
        editor.getEmitter().setAdditive(additiveCheckbox.isSelected());
      }
    }
  }
);
  behindCheckbox.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent event){
synchronized (editor.effect) {
        editor.getEmitter().setBehind(behindCheckbox.isSelected());
      }
    }
  }
);
  ParticleEmitter particles=editor.getEmitter();
  attachedCheckBox.setSelected(particles.isAttached());
  continuousCheckbox.setSelected(particles.isContinuous());
  alignedCheckbox.setSelected(particles.isAligned());
  additiveCheckbox.setSelected(particles.isAdditive());
  behindCheckbox.setSelected(particles.isBehind());
}
