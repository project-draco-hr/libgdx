{
  int mapWidth=map.getProperties().get("width",Integer.class);
  int mapHeight=map.getProperties().get("height",Integer.class);
  int tileWidth=tileset.getProperties().get("tilewidth",Integer.class);
  int tileHeight=tileset.getProperties().get("tileheight",Integer.class);
  int margin=tileset.getProperties().get("margin",Integer.class);
  int spacing=tileset.getProperties().get("spacing",Integer.class);
  this.firstgid=firstgid;
  image=ImageIO.read(baseDir.child(tileset.getProperties().get("imagesource",String.class)).read());
  imageTilePositions=new IntMap<Vector2>();
  int x, y, tile=0;
  numRows=0;
  numCols=0;
  int stopWidth=image.getWidth() - tileWidth;
  int stopHeight=image.getHeight() - tileHeight;
  for (y=margin; y <= stopHeight; y+=tileHeight + spacing) {
    for (x=margin; x <= stopWidth; x+=tileWidth + spacing) {
      if (y == margin)       numCols++;
      imageTilePositions.put(tile,new Vector2(x,y));
      tile++;
    }
    numRows++;
  }
  numTiles=numRows * numCols;
}
