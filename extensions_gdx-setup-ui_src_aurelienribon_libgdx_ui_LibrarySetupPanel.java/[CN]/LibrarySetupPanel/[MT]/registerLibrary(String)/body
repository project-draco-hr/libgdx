{
  if (libraryName != null) {
    Ctx.cfg.libs.add(libraryName,dlManager.getLibraryDef(libraryName));
    Ctx.cfg.libs.setUsage(libraryName,libraryName.equals("libgdx"));
  }
  count+=1;
  int total=dlManager.getLibrariesNames().size();
  if (count < total) {
    librariesUpdateLabel.setText("Retrieving libraries: " + count + " / "+ total);
  }
 else {
    List<String> names=new ArrayList<String>(Ctx.cfg.libs.getNames());
    Collections.sort(names,new Comparator<String>(){
      @Override public int compare(      String o1,      String o2){
        String name1=Ctx.cfg.libs.getDef(o1).name;
        String name2=Ctx.cfg.libs.getDef(o2).name;
        return name1.compareToIgnoreCase(name2);
      }
    }
);
    librariesPanel.removeAll();
    librariesScrollPane.revalidate();
    for (    String name : names) {
      if (!name.equals("libgdx"))       buildLibraryPanel(name);
      preselectLibraryArchive(name);
    }
    Ctx.fireConfigChanged();
    if (Ctx.cfg.libs.getNames().size() < total) {
      String msg="<html>Could not retrieve the definitions for:<br/>";
      for (      String name : dlManager.getLibrariesNames()) {
        if (!Ctx.cfg.libs.getNames().contains(name))         msg+="'" + name + "', ";
      }
      sectionLabel2.setHorizontalTextPosition(SwingConstants.LEFT);
      sectionLabel2.setToolTipText(msg.substring(0,msg.length() - 2));
      sectionLabel2.setIcon(Res.getImage("gfx/ic_error.png"));
    }
  }
}
