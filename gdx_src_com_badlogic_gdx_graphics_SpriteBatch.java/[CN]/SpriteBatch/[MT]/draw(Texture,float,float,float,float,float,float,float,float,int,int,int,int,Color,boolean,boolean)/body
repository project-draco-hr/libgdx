{
  if (!drawing)   throw new IllegalStateException("you have to call SpriteBatch.begin() first");
  if (texture != lastTexture) {
    renderMesh();
    lastTexture=texture;
    invTexWidth=1.0f / texture.getWidth();
    invTexHeight=1.0f / texture.getHeight();
  }
  useTextBlend=false;
  float worldOriginX=x + originX;
  float worldOriginY=y + originY;
  float fx=x - worldOriginX;
  float fy=y - worldOriginY;
  float fx2=x + width - worldOriginX;
  float fy2=y - height - worldOriginY;
  fx*=scale;
  fy*=scale;
  fx2*=scale;
  fy2*=scale;
  float p1x=fx;
  float p1y=fy;
  float p2x=fx;
  float p2y=fy2;
  float p3x=fx2;
  float p3y=fy2;
  float p4x=fx2;
  float p4y=fy;
  float cos=(float)Math.cos(Math.toRadians(rotation));
  float sin=(float)Math.sin(Math.toRadians(rotation));
  float x1=cos * p1x - sin * p1y;
  float y1=sin * p1x + cos * p1y;
  float x2=cos * p2x - sin * p2y;
  float y2=sin * p2x + cos * p2y;
  float x3=cos * p3x - sin * p3y;
  float y3=sin * p3x + cos * p3y;
  float x4=cos * p4x - sin * p4y;
  float y4=sin * p4x + cos * p4y;
  float worldX=x + originX;
  float worldY=y + originY;
  x1+=worldX;
  y1+=worldY;
  x2+=worldX;
  y2+=worldY;
  x3+=worldX;
  y3+=worldY;
  x4+=worldX;
  y4+=worldY;
  float u=srcX * invTexWidth;
  float v=srcY * invTexHeight;
  float u2=(srcX + srcWidth) * invTexWidth;
  float v2=(srcY + srcHeight) * invTexHeight;
  if (flipX) {
    float tmp=u;
    u=u2;
    u2=tmp;
  }
  if (flipY) {
    float tmp=v;
    v=v2;
    v2=tmp;
  }
  vertices[idx++]=x1;
  vertices[idx++]=y1;
  vertices[idx++]=tint.r;
  vertices[idx++]=tint.g;
  vertices[idx++]=tint.b;
  vertices[idx++]=tint.a;
  vertices[idx++]=u;
  vertices[idx++]=v;
  vertices[idx++]=x2;
  vertices[idx++]=y2;
  vertices[idx++]=tint.r;
  vertices[idx++]=tint.g;
  vertices[idx++]=tint.b;
  vertices[idx++]=tint.a;
  vertices[idx++]=u;
  vertices[idx++]=v2;
  vertices[idx++]=x3;
  vertices[idx++]=y3;
  vertices[idx++]=tint.r;
  vertices[idx++]=tint.g;
  vertices[idx++]=tint.b;
  vertices[idx++]=tint.a;
  vertices[idx++]=u2;
  vertices[idx++]=v2;
  vertices[idx++]=x3;
  vertices[idx++]=y3;
  vertices[idx++]=tint.r;
  vertices[idx++]=tint.g;
  vertices[idx++]=tint.b;
  vertices[idx++]=tint.a;
  vertices[idx++]=u2;
  vertices[idx++]=v2;
  vertices[idx++]=x4;
  vertices[idx++]=y4;
  vertices[idx++]=tint.r;
  vertices[idx++]=tint.g;
  vertices[idx++]=tint.b;
  vertices[idx++]=tint.a;
  vertices[idx++]=u2;
  vertices[idx++]=v;
  vertices[idx++]=x1;
  vertices[idx++]=y1;
  vertices[idx++]=tint.r;
  vertices[idx++]=tint.g;
  vertices[idx++]=tint.b;
  vertices[idx++]=tint.a;
  vertices[idx++]=u;
  vertices[idx++]=v;
  if (idx == vertices.length)   renderMesh();
}
