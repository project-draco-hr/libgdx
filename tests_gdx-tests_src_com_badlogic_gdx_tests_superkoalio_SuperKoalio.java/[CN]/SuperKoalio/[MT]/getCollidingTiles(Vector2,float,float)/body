{
  int startX, startY, endX, endY;
  if (velocityX < 0)   startX=(int)(position.x + velocityX);
 else   startX=(int)position.x;
  if (velocityY < 0)   startY=(int)(position.y + velocityY);
 else   startY=(int)position.y;
  endX=(int)(startX + Koala.WIDTH + Math.abs(velocityX));
  endY=(int)(startY + Koala.HEIGHT + Math.abs(velocityY));
  TiledMapTileLayer layer=(TiledMapTileLayer)map.getLayers().getLayer(1);
  rectPool.freeAll(tiles);
  tiles.clear();
  for (int y=startY; y <= endY; y++) {
    for (int x=startX; x <= endX; x++) {
      Cell cell=layer.getCell(x,y);
      if (cell.getTile() != null) {
        Rectangle rect=rectPool.obtain();
        rect.set(x,y,1,1);
        tiles.add(rect);
      }
    }
  }
  return tiles;
}
