{
  koala.stateTime+=deltaTime;
  if (Gdx.input.isKeyPressed(Keys.SPACE) & koala.grounded) {
    koala.velocity.y+=Koala.JUMP_VELOCITY;
    koala.state=Koala.State.Jumping;
    koala.grounded=false;
  }
  if (Gdx.input.isKeyPressed(Keys.LEFT) || Gdx.input.isKeyPressed(Keys.A)) {
    koala.velocity.x-=Koala.WALK_VELOCITY;
    if (koala.state != Koala.State.Jumping)     koala.state=Koala.State.Walking;
    koala.facesRight=false;
  }
  if (Gdx.input.isKeyPressed(Keys.RIGHT) || Gdx.input.isKeyPressed(Keys.D)) {
    koala.velocity.x+=Koala.WALK_VELOCITY;
    if (koala.state != Koala.State.Jumping)     koala.state=Koala.State.Walking;
    koala.facesRight=true;
  }
  koala.velocity.add(0,GRAVITY);
  koala.velocity.mul(deltaTime);
  Rectangle koalaRect=rectPool.obtain();
  Rectangle intersect=rectPool.obtain();
  tmp.set(koala.position).add(koala.velocity);
  koalaRect.set(tmp.x,tmp.y,Koala.WIDTH,Koala.HEIGHT);
  getSurroundingTilesForPosition(tmp.set(koala.position).add(Koala.WIDTH / 2,Koala.HEIGHT / 2),(TiledMapTileLayer)map.getLayers().getLayer(1));
  TileData item=null;
  item=surroundingTiles[UP];
  if (item.tile != null) {
    if (intersect(koalaRect,item.rectangle,intersect)) {
      koalaRect.y-=intersect.height;
      koala.velocity.y=0;
    }
  }
  item=surroundingTiles[DOWN];
  if (item.tile != null) {
    if (intersect(koalaRect,item.rectangle,intersect)) {
      koalaRect.y+=intersect.height;
      koala.velocity.y=0;
      koala.grounded=true;
    }
  }
  item=surroundingTiles[LEFT];
  if (item.tile != null) {
    if (intersect(koalaRect,item.rectangle,intersect)) {
      koalaRect.x+=intersect.width;
    }
  }
  item=surroundingTiles[RIGHT];
  if (item.tile != null) {
    if (intersect(koalaRect,item.rectangle,intersect)) {
      koalaRect.x-=intersect.width;
    }
  }
  item=surroundingTiles[UP_LEFT];
  if (item.tile != null) {
    if (intersect(koalaRect,item.rectangle,intersect)) {
      if (intersect.width > intersect.height) {
        koalaRect.y-=intersect.height;
        koala.velocity.y=0;
      }
 else {
        koalaRect.x+=intersect.width;
      }
    }
  }
  item=surroundingTiles[UP_RIGHT];
  if (item.tile != null) {
    if (intersect(koalaRect,item.rectangle,intersect)) {
      if (intersect.width > intersect.height) {
        koalaRect.y-=intersect.height;
        koala.velocity.y=0;
      }
 else {
        koalaRect.x-=intersect.width;
      }
    }
  }
  item=surroundingTiles[DOWN_LEFT];
  if (item.tile != null) {
    if (intersect(koalaRect,item.rectangle,intersect)) {
      if (intersect.width > intersect.height) {
        koalaRect.y+=intersect.height;
      }
 else {
        koalaRect.x+=intersect.width;
      }
    }
  }
  item=surroundingTiles[DOWN_RIGHT];
  if (item.tile != null) {
    if (intersect(koalaRect,item.rectangle,intersect)) {
      if (intersect.width > intersect.height) {
        koalaRect.y+=intersect.height;
      }
 else {
        koalaRect.x-=intersect.width;
      }
    }
  }
  koala.position.set(koalaRect.x,koalaRect.y);
  koala.velocity.mul(1 / deltaTime);
  rectPool.free(koalaRect);
  rectPool.free(intersect);
  koala.velocity.x*=Koala.DAMPING;
}
