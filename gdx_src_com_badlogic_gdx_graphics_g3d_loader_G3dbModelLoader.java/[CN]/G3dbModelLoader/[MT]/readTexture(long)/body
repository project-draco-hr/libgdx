{
  final ModelTexture texture=new ModelTexture();
  long cnt=0;
  while ((din.available() > 0) && (cnt < length)) {
    final byte type=din.readByte();
    final long size=readSize(type);
    cnt+=1 + getSize(type) + size;
    if ((type & TYPE_MASK) == G3DB_TAG_ID)     texture.id=readString(size);
 else     if ((type & TYPE_MASK) == G3DB_TAG_FILENAME)     texture.fileName=file.parent().child(readString(size)).path();
 else     if ((type & TYPE_MASK) == G3DB_TAG_TRANSLATE)     texture.uvTranslation=readVector2(size);
 else     if ((type & TYPE_MASK) == G3DB_TAG_SCALE)     texture.uvScaling=readVector2(size);
 else     if ((type & TYPE_MASK) == G3DB_TAG_TYPE)     texture.usage=readByte(size);
 else {
      din.skipBytes((int)size);
      Gdx.app.log("G3dbModelLoader","Unknown material tag: " + type + "["+ size+ "], skipping");
    }
  }
  return texture;
}
