{
  final int inWidth=inImage.getWidth();
  final int inHeight=inImage.getHeight();
  final int outWidth=inWidth / downscale;
  final int outHeight=inHeight / downscale;
  final BufferedImage outImage=new BufferedImage(outWidth,outHeight,BufferedImage.TYPE_4BYTE_ABGR);
  final boolean[][] bitmap=new boolean[inHeight][inWidth];
  for (int y=0; y < inHeight; ++y) {
    for (int x=0; x < inWidth; ++x) {
      bitmap[y][x]=isInside(inImage.getRGB(x,y));
    }
  }
  for (int y=0; y < outHeight; ++y) {
    for (int x=0; x < outWidth; ++x) {
      int centerX=(x * downscale) + (downscale / 2);
      int centerY=(y * downscale) + (downscale / 2);
      float signedDistance=findSignedDistance(centerX,centerY,bitmap);
      outImage.setRGB(x,y,distanceToRGB(signedDistance));
    }
  }
  return outImage;
}
