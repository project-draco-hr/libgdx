{
  boolean querySkuDetails=true;
  helper.queryInventoryAsync(querySkuDetails,new IabHelper.QueryInventoryFinishedListener(){
    @Override public void onQueryInventoryFinished(    IabResult result,    Inventory inventory){
      PurchaseManagerAndroidOpenIAB.this.inventory=inventory;
      List<Purchase> purchases=inventory.getAllPurchases();
      List<Transaction> transactions=new ArrayList<Transaction>(purchases.size());
      for (int i=0; i < purchases.size(); i++) {
        transactions.add(transaction(purchases.get(i)));
      }
      observer.handleRestore(transactions.toArray(new Transaction[transactions.size()]));
      for (int i=0; i < purchases.size(); i++) {
        Purchase purchase=purchases.get(i);
        Offer offer=config.getOffer(purchase.getSku());
        if (offer == null) {
          Gdx.app.debug(TAG,"Offer not found for: " + purchase.getSku());
        }
 else         if (offer.getType() == OfferType.CONSUMABLE) {
          helper.consumeAsync(purchase,new IabHelper.OnConsumeFinishedListener(){
            @Override public void onConsumeFinished(            Purchase purchase,            IabResult result){
              if (!result.isSuccess()) {
                Gdx.app.error(TAG,"Error while consuming: " + result);
              }
            }
          }
);
        }
      }
    }
  }
);
}
