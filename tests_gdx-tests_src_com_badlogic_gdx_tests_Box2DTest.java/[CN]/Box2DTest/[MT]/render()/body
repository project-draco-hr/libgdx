{
  long start=TimeUtils.nanoTime();
  world.step(Gdx.graphics.getDeltaTime(),8,3);
  float updateTime=(TimeUtils.nanoTime() - start) / 1000000000.0f;
  GL10 gl=Gdx.graphics.getGL10();
  gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
  camera.update();
  camera.apply(gl);
  renderBox(gl,groundBody,50,1);
  batch.getProjectionMatrix().set(camera.combined);
  batch.begin();
  for (int i=0; i < boxes.size(); i++) {
    Body box=boxes.get(i);
    Vector2 position=box.getPosition();
    float angle=MathUtils.radiansToDegrees * box.getAngle();
    batch.draw(textureRegion,position.x - 1,position.y - 1,1f,1f,2,2,1,1,angle);
  }
  batch.end();
  camera.apply(Gdx.gl10);
  debugRenderer.render(world,camera.combined);
  gl.glPointSize(4);
  renderer.begin(GL10.GL_POINTS);
  for (int i=0; i < world.getContactCount(); i++) {
    Contact contact=world.getContactList().get(i);
    if (contact.isTouching()) {
      WorldManifold manifold=contact.getWorldManifold();
      int numContactPoints=manifold.getNumberOfContactPoints();
      for (int j=0; j < numContactPoints; j++) {
        Vector2 point=manifold.getPoints()[j];
        renderer.color(0,1,0,1);
        renderer.vertex(point.x,point.y,0);
      }
    }
  }
  renderer.end();
  gl.glPointSize(1);
  batch.getProjectionMatrix().setToOrtho2D(0,0,Gdx.graphics.getWidth(),Gdx.graphics.getHeight());
  batch.begin();
  font.draw(batch,"fps: " + Gdx.graphics.getFramesPerSecond() + " update time: "+ updateTime,0,20);
  batch.end();
}
