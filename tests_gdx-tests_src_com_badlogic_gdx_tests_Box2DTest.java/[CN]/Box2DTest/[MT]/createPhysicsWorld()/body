{
  world=new World(new Vector2(0,-10),true);
  float[] vertices={-0.07421887f,-0.16276085f,-0.12109375f,-0.22786504f,-0.157552f,-0.7122401f,0.04296875f,-0.7122401f,0.110677004f,-0.6419276f,0.13151026f,-0.49869835f,0.08984375f,-0.3190109f};
  PolygonShape shape=new PolygonShape();
  shape.set(vertices);
  PolygonShape groundPoly=new PolygonShape();
  groundPoly.setAsBox(50,1);
  BodyDef groundBodyDef=new BodyDef();
  groundBodyDef.type=BodyType.StaticBody;
  groundBody=world.createBody(groundBodyDef);
  FixtureDef fixtureDef=new FixtureDef();
  fixtureDef.shape=groundPoly;
  fixtureDef.filter.groupIndex=0;
  groundBody.createFixture(fixtureDef);
  groundPoly.dispose();
  ChainShape chainShape=new ChainShape();
  chainShape.createLoop(new Vector2[]{new Vector2(-10,10),new Vector2(-10,5),new Vector2(10,5),new Vector2(10,11)});
  BodyDef chainBodyDef=new BodyDef();
  chainBodyDef.type=BodyType.StaticBody;
  Body chainBody=world.createBody(chainBodyDef);
  chainBody.createFixture(chainShape,0);
  chainShape.dispose();
  createBoxes();
  world.setContactListener(new ContactListener(){
    @Override public void beginContact(    Contact contact){
    }
    @Override public void endContact(    Contact contact){
    }
    @Override public void preSolve(    Contact contact,    Manifold oldManifold){
    }
    @Override public void postSolve(    Contact contact,    ContactImpulse impulse){
    }
  }
);
}
