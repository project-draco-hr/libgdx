{
  float invTexWidth=1.0f / texture.getWidth();
  float invTexHeight=1.0f / texture.getHeight();
  float u=srcX * invTexWidth;
  float v=(srcY + srcHeight) * invTexHeight;
  float u2=(srcX + srcWidth) * invTexWidth;
  float v2=srcY * invTexHeight;
  final float fx2=x + width;
  final float fy2=y + height;
  if (flipX) {
    float tmp=u;
    u=u2;
    u2=tmp;
  }
  if (flipY) {
    float tmp=v;
    v=v2;
    v2=tmp;
  }
  tempVertices[0]=x;
  tempVertices[1]=y;
  tempVertices[2]=color;
  tempVertices[3]=u;
  tempVertices[4]=v;
  tempVertices[5]=x;
  tempVertices[6]=fy2;
  tempVertices[7]=color;
  tempVertices[8]=u;
  tempVertices[9]=v2;
  tempVertices[10]=fx2;
  tempVertices[11]=fy2;
  tempVertices[12]=color;
  tempVertices[13]=u2;
  tempVertices[14]=v2;
  if (mesh.getNumIndices() > 0) {
    tempVertices[15]=fx2;
    tempVertices[16]=y;
    tempVertices[17]=color;
    tempVertices[18]=u2;
    tempVertices[19]=v;
    add(texture,tempVertices,0,20);
  }
 else {
    tempVertices[15]=fx2;
    tempVertices[16]=fy2;
    tempVertices[17]=color;
    tempVertices[18]=u2;
    tempVertices[19]=v2;
    tempVertices[20]=fx2;
    tempVertices[21]=y;
    tempVertices[22]=color;
    tempVertices[23]=u2;
    tempVertices[24]=v;
    tempVertices[25]=x;
    tempVertices[26]=y;
    tempVertices[27]=color;
    tempVertices[28]=u;
    tempVertices[29]=v;
    add(texture,tempVertices,0,30);
  }
}
