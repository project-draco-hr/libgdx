{
  Future<?> processHttpRequestFuture=executorService.submit(new Runnable(){
    @Override public void run(){
      try {
        String url=httpRequest.getUrl();
        String method=httpRequest.getMethod();
        if (method.equalsIgnoreCase(HttpMethods.GET)) {
          String value=httpRequest.getContent();
          if (value != null && !"".equals(value))           url+="?" + value;
        }
        HttpWebRequest httpWebRequest=(HttpWebRequest)WebRequest.Create(url);
        int timeOut=httpRequest.getTimeOut();
        if (timeOut > 0)         httpWebRequest.set_Timeout(timeOut);
 else         httpWebRequest.set_Timeout(-1);
        httpWebRequest.set_Method(method);
        Map<String,String> headers=httpRequest.getHeaders();
        WebHeaderCollection webHeaderCollection=new WebHeaderCollection();
        for (        String key : headers.keySet())         webHeaderCollection.Add(key,headers.get(key));
        httpWebRequest.set_Headers(webHeaderCollection);
        if (method.equalsIgnoreCase(HttpMethods.POST) || method.equalsIgnoreCase(HttpMethods.PUT)) {
          InputStream contentAsStream=httpRequest.getContentStream();
          String contentAsString=httpRequest.getContent();
          if (contentAsStream != null) {
            httpWebRequest.set_ContentLength(contentAsStream.available());
            Stream stream=httpWebRequest.GetRequestStream();
            StreamUtils.copyStream(contentAsStream,new OutputStreamNetStreamImpl(stream));
            stream.Close();
          }
 else           if (contentAsString != null) {
            byte[] data=contentAsString.getBytes();
            httpWebRequest.set_ContentLength(data.length);
            Stream stream=httpWebRequest.GetRequestStream();
            stream.Write(data,0,data.length);
            stream.Close();
          }
        }
        final HttpWebResponse httpWebResponse=(HttpWebResponse)httpWebRequest.GetResponse();
        httpResultListener.handleHttpResponse(new IosHttpResponse(httpWebResponse));
      }
 catch (      final Exception e) {
        httpResultListener.failed(e);
      }
    }
  }
);
}
