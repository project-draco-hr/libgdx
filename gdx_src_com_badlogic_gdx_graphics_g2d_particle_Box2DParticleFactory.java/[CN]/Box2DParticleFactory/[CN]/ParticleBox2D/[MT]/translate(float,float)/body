{
  if ((velocityX * velocityX + velocityY * velocityY) < EPSILON) {
    return;
  }
  final float x=getX() + getWidth() / 2f;
  final float y=getY() + getHeight() / 2f;
  particleCollided=false;
  startPoint.set(x,y);
  endPoint.set(x + velocityX,y + velocityY);
  if (world != null) {
    world.rayCast(rayCallBack,startPoint,endPoint);
  }
  if (!particleCollided) {
    angle=2f * normalAngle - angle - 180f;
    angleCos=MathUtils.cosDeg(angle);
    angleSin=MathUtils.sinDeg(angle);
    velocityX=velocity * angleCos;
    velocityY=velocity * angleSin;
  }
  super.translate(velocityX,velocityY);
}
