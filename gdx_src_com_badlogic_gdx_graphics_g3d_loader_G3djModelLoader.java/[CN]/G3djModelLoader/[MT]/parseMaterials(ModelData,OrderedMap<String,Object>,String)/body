{
  Array<OrderedMap<String,Object>> materials=(Array<OrderedMap<String,Object>>)json.get("materials");
  if (materials == null) {
  }
 else {
    model.materials.ensureCapacity(materials.size);
    int i=0;
    for (    OrderedMap<String,Object> material : materials) {
      ModelMaterial jsonMaterial=new ModelMaterial();
      String id=(String)material.get("id");
      if (id == null)       throw new GdxRuntimeException("Material needs an id.");
      jsonMaterial.id=id;
      jsonMaterial.diffuse=parseColor((Array<Object>)material.get("diffuse"),Color.WHITE);
      jsonMaterial.ambient=parseColor((Array<Object>)material.get("ambient"),Color.BLACK);
      jsonMaterial.emissive=parseColor((Array<Object>)material.get("emissive"),Color.BLACK);
      jsonMaterial.specular=parseColor((Array<Object>)material.get("specular"),Color.BLACK);
      float shininess=(Float)material.get("shininess",0.0f);
      Array<OrderedMap<String,Object>> textures=(Array<OrderedMap<String,Object>>)material.get("textures");
      if (textures != null) {
        for (        OrderedMap<String,Object> texture : textures) {
          ModelTexture jsonTexture=new ModelTexture();
          String textureId=(String)texture.get("id");
          if (textureId == null)           throw new GdxRuntimeException("Texture has no id.");
          jsonTexture.id=textureId;
          String fileName=(String)texture.get("filename");
          if (fileName == null)           throw new GdxRuntimeException("Texture needs filename.");
          jsonTexture.fileName=materialDir + "/" + fileName;
          jsonTexture.uvTranslation=readVector2((Array<Object>)texture.get("uvTranslation"),0f,0f);
          jsonTexture.uvScaling=readVector2((Array<Object>)texture.get("uvScaling"),1f,1f);
          String textureType=(String)texture.get("type");
          if (textureType == null)           throw new GdxRuntimeException("Texture needs type.");
          if (textureType.equals("STANDARD")) {
            if (jsonMaterial.diffuseTextures == null)             jsonMaterial.diffuseTextures=new Array<ModelTexture>();
            jsonMaterial.diffuseTextures.add(jsonTexture);
          }
        }
      }
      model.materials.add(jsonMaterial);
    }
  }
}
