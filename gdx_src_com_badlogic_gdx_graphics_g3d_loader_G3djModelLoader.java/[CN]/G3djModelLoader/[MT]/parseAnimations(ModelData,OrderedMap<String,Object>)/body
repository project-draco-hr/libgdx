{
  Array<OrderedMap<String,Object>> animations=(Array<OrderedMap<String,Object>>)json.get("animations");
  if (animations == null)   return;
  model.animations.ensureCapacity(animations.size);
  int i=0;
  for (  OrderedMap<String,Object> anim : animations) {
    Array<OrderedMap<String,Object>> nodes=(Array<OrderedMap<String,Object>>)anim.get("bones");
    if (nodes == null)     continue;
    ModelAnimation animation=new ModelAnimation();
    model.animations.add(animation);
    animation.boneAnimations.ensureCapacity(nodes.size);
    animation.id=(String)anim.get("id");
    for (    OrderedMap<String,Object> node : nodes) {
      ModelBoneAnimation nodeAnim=new ModelBoneAnimation();
      animation.boneAnimations.add(nodeAnim);
      nodeAnim.boneId=(String)node.get("boneId");
      Array<OrderedMap<String,Object>> keyframes=(Array<OrderedMap<String,Object>>)node.get("keyframe");
      nodeAnim.keyframes.ensureCapacity(keyframes.size);
      for (      OrderedMap<String,Object> keyframe : keyframes) {
        ModelBoneKeyframe kf=new ModelBoneKeyframe();
        nodeAnim.keyframes.add(kf);
        kf.keytime=(Float)keyframe.get("keytime") / 1000.f;
        Array<Object> translation=(Array<Object>)keyframe.get("translation");
        if (translation != null && translation.size == 3)         kf.translation=new Vector3((Float)translation.get(0),(Float)translation.get(1),(Float)translation.get(2));
        Array<Object> rotation=(Array<Object>)keyframe.get("rotation");
        if (rotation != null && rotation.size == 4)         kf.rotation=new Quaternion((Float)rotation.get(0),(Float)rotation.get(1),(Float)rotation.get(2),(Float)rotation.get(3));
        Array<Object> scale=(Array<Object>)keyframe.get("scale");
        if (scale != null && scale.size == 3)         kf.scale=new Vector3((Float)scale.get(0),(Float)scale.get(1),(Float)scale.get(2));
      }
    }
  }
}
