{
  JsonValue animations=json.get("animations");
  if (animations == null)   return;
  model.animations.ensureCapacity(animations.size());
  for (int i=0; i < animations.size(); i++) {
    JsonValue anim=animations.get(i);
    JsonValue nodes=anim.get("bones");
    if (nodes == null)     continue;
    ModelAnimation animation=new ModelAnimation();
    model.animations.add(animation);
    animation.nodeAnimations.ensureCapacity(nodes.size());
    animation.id=anim.getString("id");
    for (int j=0; j < nodes.size(); j++) {
      JsonValue node=nodes.get(j);
      JsonValue keyframes=node.get("keyframes");
      ModelNodeAnimation nodeAnim=new ModelNodeAnimation();
      animation.nodeAnimations.add(nodeAnim);
      nodeAnim.nodeId=node.getString("boneId");
      nodeAnim.keyframes.ensureCapacity(keyframes.size());
      for (int k=0; k < keyframes.size(); k++) {
        JsonValue keyframe=keyframes.get(k);
        ModelNodeKeyframe kf=new ModelNodeKeyframe();
        nodeAnim.keyframes.add(kf);
        kf.keytime=keyframe.getFloat("keytime") / 1000.f;
        JsonValue translation=keyframe.get("translation");
        if (translation != null && translation.size() == 3)         kf.translation=new Vector3(translation.getFloat(0),translation.getFloat(1),translation.getFloat(2));
        JsonValue rotation=keyframe.get("rotation");
        if (rotation != null && rotation.size() == 4)         kf.rotation=new Quaternion(rotation.getFloat(0),rotation.getFloat(1),rotation.getFloat(2),rotation.getFloat(3));
        JsonValue scale=keyframe.get("scale");
        if (scale != null && scale.size() == 3)         kf.scale=new Vector3(scale.getFloat(0),scale.getFloat(1),scale.getFloat(2));
      }
    }
  }
}
