{
  float start, diff;
  for (int i=startIndex * strengthChannel.strideSize, c=i + count * strengthChannel.strideSize; i < c; i+=strengthChannel.strideSize) {
    start=strengthValue.newLowValue();
    diff=strengthValue.newHighValue();
    if (!strengthValue.isRelative())     diff-=start;
    strengthChannel.data[i + ParticleChannels.VelocityStrengthStartOffset]=start;
    strengthChannel.data[i + ParticleChannels.VelocityStrengthDiffOffset]=diff;
  }
}
