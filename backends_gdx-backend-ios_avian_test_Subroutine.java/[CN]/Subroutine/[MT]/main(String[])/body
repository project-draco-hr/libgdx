{
  test(false,false);
  test(false,true);
  test(true,false);
  String.valueOf(test2(1));
  String.valueOf(test2(2));
  String.valueOf(test2(3));
  String.valueOf(test3(1,1,1));
  String.valueOf(test3(2,1,1));
  String.valueOf(test3(3,1,1));
  String.valueOf(test3(1,2,1));
  String.valueOf(test3(2,2,1));
  String.valueOf(test3(3,2,1));
  String.valueOf(test3(1,3,1));
  String.valueOf(test3(2,3,1));
  String.valueOf(test3(3,3,1));
  String.valueOf(test3(1,1,2));
  String.valueOf(test3(2,1,2));
  String.valueOf(test3(3,1,2));
  String.valueOf(test3(1,2,2));
  String.valueOf(test3(2,2,2));
  String.valueOf(test3(3,2,2));
  String.valueOf(test3(1,3,2));
  String.valueOf(test3(2,3,2));
  String.valueOf(test3(3,3,2));
  String.valueOf(test3(1,1,3));
  String.valueOf(test3(2,1,3));
  String.valueOf(test3(3,1,3));
  String.valueOf(test3(1,2,3));
  String.valueOf(test3(2,2,3));
  String.valueOf(test3(3,2,3));
  String.valueOf(test3(1,3,3));
  String.valueOf(test3(2,3,3));
  String.valueOf(test3(3,3,3));
  String.valueOf(test4(1));
  String.valueOf(test4(2));
  String.valueOf(test4(3));
  expect(test4(1) == 0xFABFABFABFL);
  new Subroutine().test5(true);
  new Subroutine().test5(false);
  makeTestClass().getMethod("test",new Class[0]).invoke(null,new Object[0]);
}
