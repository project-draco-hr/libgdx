{
  view.setOnKeyListener(this);
  view.setOnTouchListener(this);
  view.setFocusable(true);
  view.setFocusableInTouchMode(true);
  view.requestFocus();
  view.requestFocusFromTouch();
  manager=(SensorManager)activity.getSystemService(Context.SENSOR_SERVICE);
  if (manager.getSensorList(Sensor.TYPE_ACCELEROMETER).size() == 0)   accelerometerAvailable=false;
 else {
    Sensor accelerometer=manager.getSensorList(Sensor.TYPE_ACCELEROMETER).get(0);
    if (!manager.registerListener(this,accelerometer,SensorManager.SENSOR_DELAY_GAME))     accelerometerAvailable=false;
 else     accelerometerAvailable=true;
  }
  for (int i=0; i < 1000; i++)   freeEvents.add(new Event());
  handle=new Handler();
  this.app=activity;
  this.sleepTime=sleepTime;
  Field sdkIntField=null;
  try {
    sdkIntField=android.os.Build.VERSION.class.getField("SDK_INT");
  }
 catch (  Throwable e) {
  }
  if (sdkIntField == null) {
    touchHandler=new AndroidSingleTouchHandler();
  }
 else {
    int sdkVersion=-1;
    try {
      sdkVersion=sdkIntField.getInt(null);
    }
 catch (    Throwable e) {
    }
    if (sdkVersion >= 5)     touchHandler=new AndroidMultiTouchHandler();
 else     touchHandler=new AndroidSingleTouchHandler();
  }
  hasMultitouch=touchHandler instanceof AndroidMultiTouchHandler && ((AndroidMultiTouchHandler)touchHandler).supportsMultitouch(activity);
}
