{
  ByteBuffer byteBuffer=ByteBuffer.allocateDirect(1024 * 1024 * Float.SIZE / 8);
  byteBuffer.order(ByteOrder.nativeOrder());
  FloatBuffer buffer=byteBuffer.asFloatBuffer();
  float[] array=new float[1024 * 1024];
  tic();
  for (int tries=0; tries < 1000; tries++) {
    for (int i=0; i < array.length; i++)     buffer.put(array[i]);
    buffer.clear();
  }
  toc("single put");
  tic();
  for (int tries=0; tries < 1000; tries++) {
    for (int i=0; i < array.length; i++)     buffer.put(i,array[i]);
    buffer.clear();
  }
  toc("single indexed put");
  tic();
  for (int tries=0; tries < 1000; tries++) {
    buffer.put(array);
    buffer.clear();
  }
  toc("vector put");
  tic();
  for (int tries=0; tries < 1000; tries++)   BufferUtils.copy(array,buffer,array.length,0);
  toc("jni put");
  byteBuffer=ByteBuffer.allocateDirect(4 * Float.SIZE / 8);
  byteBuffer.order(ByteOrder.nativeOrder());
  buffer=byteBuffer.asFloatBuffer();
  array=new float[]{0,1,2,3};
  BufferUtils.copy(array,buffer,4,0);
  System.out.println(buffer.get());
  System.out.println(buffer.get());
  System.out.println(buffer.get());
  System.out.println(buffer.get());
}
