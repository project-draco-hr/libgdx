{
  logger.log();
  final float delta=Gdx.graphics.getDeltaTime();
  camController.update(delta);
  timer+=delta;
  for (int i=0; i < 1 && i < lightManager.pointLights.size; i++) {
    final Vector3 v=lightManager.pointLights.get(i).position;
    v.set(animInstance.getSortCenter());
    v.x+=MathUtils.sin(timer);
    v.z+=MathUtils.cos(timer);
  }
  animInstance.time+=delta;
  if (Gdx.input.justTouched()) {
    currAnimIdx++;
    if (currAnimIdx == model3.getAnimations().length)     currAnimIdx=0;
    animInstance.animation=model3.getAnimations()[currAnimIdx].name;
    animInstance.time=0;
  }
  if (animInstance.time > model3.getAnimations()[currAnimIdx].totalDuration) {
    animInstance.time=0;
  }
  Gdx.gl.glEnable(GL10.GL_CULL_FACE);
  Gdx.gl.glFrontFace(GL10.GL_CCW);
  Gdx.gl.glCullFace(GL10.GL_FRONT);
  Gdx.gl.glEnable(GL10.GL_DEPTH_TEST);
  Gdx.gl.glDepthMask(true);
  Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT | (Gdx.graphics.getBufferFormat().coverageSampling ? GL20.GL_COVERAGE_BUFFER_BIT_NV : 0));
  protoRenderer.begin();
  float tim=animInstance.time;
  for (int i=1; i < 7; i++) {
    for (int j=1; j < 7; j++) {
      animInstance.matrix.val[12]=-i * 2 + 8;
      animInstance.matrix.val[14]=-j * 2 - 4;
      protoRenderer.draw(model3,animInstance);
    }
  }
  protoRenderer.end();
  Gdx.gl.glCullFace(GL10.GL_BACK);
  protoRenderer.begin();
  protoRenderer.draw(model2,instance2);
  protoRenderer.draw(model,instance2);
  protoRenderer.draw(model,instance);
  protoRenderer.end();
}
