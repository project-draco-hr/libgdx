{
  float width=spawnWidth + (spawnWidthDiff * spawnWidthValue.getScale(percent));
  float height=spawnHeight + (spawnHeightDiff * spawnHeightValue.getScale(percent));
  float depth=spawnDepth + (spawnDepthDiff * spawnDepthValue.getScale(percent));
  float radiusX, radiusZ;
  float hf=height / 2;
  float ty=MathUtils.random(height) - hf;
  if (edges) {
    radiusX=width / 2;
    radiusZ=depth / 2;
  }
 else {
    radiusX=MathUtils.random(width) / 2;
    radiusZ=MathUtils.random(depth) / 2;
  }
  float spawnTheta=0;
  boolean isRadiusXZero=radiusX == 0, isRadiusZZero=radiusZ == 0;
  if (!isRadiusXZero && !isRadiusZZero)   spawnTheta=MathUtils.random(360f);
 else {
    if (isRadiusXZero)     spawnTheta=MathUtils.random(1) == 0 ? -90 : 90;
 else     if (isRadiusZZero)     spawnTheta=MathUtils.random(1) == 0 ? 0 : 180;
  }
  vector.set(radiusX * MathUtils.cosDeg(spawnTheta),ty,radiusZ * MathUtils.sinDeg(spawnTheta));
}
