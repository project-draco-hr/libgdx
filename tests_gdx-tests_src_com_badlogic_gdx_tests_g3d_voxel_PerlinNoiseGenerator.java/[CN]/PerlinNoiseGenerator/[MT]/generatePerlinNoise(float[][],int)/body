{
  int width=baseNoise.length;
  int height=baseNoise[0].length;
  float[][][] smoothNoise=new float[octaveCount][][];
  float persistance=0.7f;
  for (int i=0; i < octaveCount; i++) {
    smoothNoise[i]=generateSmoothNoise(baseNoise,i);
  }
  float[][] perlinNoise=new float[width][height];
  float amplitude=1.0f;
  float totalAmplitude=0.0f;
  for (int octave=octaveCount - 1; octave >= 0; octave--) {
    amplitude*=persistance;
    totalAmplitude+=amplitude;
    for (int i=0; i < width; i++) {
      for (int j=0; j < height; j++) {
        perlinNoise[i][j]+=smoothNoise[octave][i][j] * amplitude;
      }
    }
  }
  for (int i=0; i < width; i++) {
    for (int j=0; j < height; j++) {
      perlinNoise[i][j]/=totalAmplitude;
    }
  }
  return perlinNoise;
}
