{
  stage=new Stage();
  Gdx.input.setInputProcessor(stage);
  final TextureRegion region=new TextureRegion(new Texture("data/badlogic.jpg"));
  Actor actor=new Actor(){
    public void draw(    SpriteBatch batch,    float parentAlpha){
      Color color=getColor();
      batch.setColor(color.r,color.g,color.b,parentAlpha);
      batch.draw(region,getX(),getY(),getOriginX(),getOriginY(),getWidth(),getHeight(),getScaleX(),getScaleY(),getRotation());
    }
  }
;
  actor.setBounds(15,15,100,100);
  actor.setOrigin(50,50);
  stage.addActor(actor);
  actor.addListener(new ActorListener(){
    public boolean touchDown(    ActorEvent event,    float x,    float y,    int pointer,    int button){
      System.out.println("down");
      return true;
    }
    public void touchUp(    ActorEvent event,    float x,    float y,    int pointer,    int button){
      System.out.println("up");
    }
  }
);
  Skin skin=new Skin(Gdx.files.internal("data/uiskin.json"));
  TextButtonStyle style=skin.getStyle(TextButtonStyle.class);
  style.up=new EmptyDrawable(){
    ShapeRenderer renderer=new ShapeRenderer();
    public void draw(    SpriteBatch batch,    float x,    float y,    float width,    float height){
      batch.end();
      renderer.setProjectionMatrix(batch.getProjectionMatrix());
      renderer.setTransformMatrix(batch.getTransformMatrix());
      renderer.begin(ShapeType.Line);
      for (int i=0; i < 25; i++) {
        renderer.setColor(MathUtils.random(0.3f,1),MathUtils.random(0.3f,1),MathUtils.random(0.3f,1),1);
        renderer.line(MathUtils.random(x,x + width),MathUtils.random(y,y + height),MathUtils.random(x,x + width),MathUtils.random(y,y + height));
      }
      renderer.end();
      batch.begin();
    }
  }
;
  final TextButton button=new TextButton("Fancy Background",style);
  button.addListener(new ActorGestureListener(){
    public void tap(    ActorEvent event,    float x,    float y,    int count){
      System.out.println("tap");
    }
    public boolean longPress(    ActorEvent event,    float x,    float y){
      System.out.println("long press");
      return false;
    }
    public void pan(    ActorEvent event,    float x,    float y,    float deltaX,    float deltaY){
      event.getTargetActor().translate(deltaX,deltaY);
      System.out.println("panning " + x + ", "+ y+ " "+ event.getTargetActor());
    }
  }
);
  button.addListener(new ChangeListener(){
    public void changed(    ChangeEvent event,    Actor actor){
    }
  }
);
  button.addListener(new ActorListener(){
    public boolean touchDown(    ActorEvent event,    float x,    float y,    int pointer,    int b){
      System.out.println("down " + x + ", "+ y+ " "+ pointer+ ", "+ b);
      return true;
    }
    public void touchUp(    ActorEvent event,    float x,    float y,    int pointer,    int b){
      System.out.println("up " + x + ", "+ y+ " "+ pointer+ ", "+ b);
    }
  }
);
  button.setPosition(50,50);
  stage.addActor(button);
  stage.addListener(new ChangeListener(){
    public void changed(    ChangeEvent event,    Actor actor){
      System.out.println(actor);
    }
  }
);
  meow.setDuration(2);
  patch=skin.getPatch("default-round");
}
