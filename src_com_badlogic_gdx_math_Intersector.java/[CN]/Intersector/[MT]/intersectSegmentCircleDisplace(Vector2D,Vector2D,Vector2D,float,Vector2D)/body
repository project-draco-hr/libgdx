{
  float u=(point.getX() - start.getX()) * (end.getX() - start.getX()) + (point.getY() - start.getY()) * (end.getY() - start.getY());
  float d=start.dst(end);
  u/=(d * d);
  if (u < 0 || u > 1)   return Float.POSITIVE_INFINITY;
  tmp.set(end.x,end.y,0).sub(start.x,start.y,0);
  tmp2.set(start.x,start.y,0).add(tmp.mul(u));
  d=tmp2.dst(point.x,point.y,0);
  if (d < radius) {
    displacement.set(point).sub(tmp2.getX(),tmp2.getY()).nor();
    return d;
  }
 else   return Float.POSITIVE_INFINITY;
}
