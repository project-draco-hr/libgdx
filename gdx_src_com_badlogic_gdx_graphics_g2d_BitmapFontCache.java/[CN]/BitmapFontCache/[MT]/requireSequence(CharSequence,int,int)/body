{
  if (vertexData.length == 1) {
    int newGlyphCount=countGlyphs(seq,start,end);
    require(0,newGlyphCount);
  }
 else {
    for (int i=0, n=tmpGlyphCount.length; i < n; i++)     tmpGlyphCount[i]=0;
    while (start < end) {
      char ch=seq.charAt(start++);
      if (ch == '[' && font.markupEnabled) {
        if (!(start < end && seq.charAt(start) == '[')) {
          int colorTagLen=markup.parseColorTag(seq,-1,start,end);
          if (colorTagLen >= 0) {
            start+=colorTagLen + 1;
            continue;
          }
        }
        start++;
      }
      Glyph g=font.data.getGlyph(ch);
      if (g == null)       continue;
      tmpGlyphCount[g.page]++;
    }
    for (int i=0, n=tmpGlyphCount.length; i < n; i++)     require(i,tmpGlyphCount[i]);
  }
}
