{
  Gdx.gl20.glViewport(0,0,Gdx.graphics.getBackBufferWidth(),Gdx.graphics.getBackBufferHeight());
  Gdx.gl20.glClearColor(0.2f,0.2f,0.2f,1);
  Gdx.gl20.glClear(GL20.GL_COLOR_BUFFER_BIT);
  Gdx.gl20.glEnable(GL20.GL_TEXTURE_2D);
  Gdx.gl20.glEnable(GL20.GL_BLEND);
  Gdx.gl20.glBlendFunc(GL20.GL_SRC_ALPHA,GL20.GL_ONE_MINUS_SRC_ALPHA);
  texture.bind();
  shader.begin();
  shader.setUniformMatrix("u_worldView",matrix);
  shader.setUniformi("u_texture",0);
  long beforeOld=System.nanoTime();
  oldVBOWithVAOMesh.render(shader,GL20.GL_TRIANGLES);
  Gdx.gl.glFlush();
  oldCounter.addValue((System.nanoTime() - beforeOld));
  shader.end();
  Gdx.gl20.glClear(GL20.GL_COLOR_BUFFER_BIT);
  texture.bind();
  shader.begin();
  shader.setUniformMatrix("u_worldView",matrix);
  shader.setUniformi("u_texture",0);
  long beforeNew=System.nanoTime();
  newVBOWithVAOMesh.render(shader,GL20.GL_TRIANGLES);
  Gdx.gl.glFlush();
  newCounter.addValue((System.nanoTime() - beforeNew));
  shader.end();
  Gdx.gl20.glClear(GL20.GL_COLOR_BUFFER_BIT);
  texture.bind();
  shader.begin();
  shader.setUniformMatrix("u_worldView",matrix);
  shader.setUniformi("u_texture",0);
  long beforeOldStress=System.nanoTime();
  for (int i=0; i < 100; i++)   oldVBOWithVAOMesh.render(shader,GL20.GL_TRIANGLES);
  Gdx.gl.glFlush();
  oldCounterStress.addValue((System.nanoTime() - beforeOldStress));
  shader.end();
  Gdx.gl20.glClear(GL20.GL_COLOR_BUFFER_BIT);
  texture.bind();
  shader.begin();
  shader.setUniformMatrix("u_worldView",matrix);
  shader.setUniformi("u_texture",0);
  long beforeNewStress=System.nanoTime();
  for (int i=0; i < 100; i++)   newVBOWithVAOMesh.render(shader,GL20.GL_TRIANGLES);
  Gdx.gl.glFlush();
  newCounterStress.addValue((System.nanoTime() - beforeNewStress));
  shader.end();
  batch.begin();
  stringBuilder.setLength(0);
  stringBuilder.append("O Mean Time: ");
  stringBuilder.append(oldCounter.getMean());
  bitmapFont.draw(batch,stringBuilder,0,200);
  stringBuilder.setLength(0);
  stringBuilder.append("N Mean Time: ");
  stringBuilder.append(newCounter.getMean());
  bitmapFont.draw(batch,stringBuilder,0,200 - 20);
  float oldMean=oldCounter.getMean();
  float newMean=newCounter.getMean();
  float meanedAverage=newMean / oldMean;
  stringBuilder.setLength(0);
  stringBuilder.append("New VBO time as a percentage of Old Time: ");
  stringBuilder.append(meanedAverage);
  bitmapFont.draw(batch,stringBuilder,0,200 - 40);
  stringBuilder.setLength(0);
  stringBuilder.append("Stress: O Mean Time: ");
  stringBuilder.append(oldCounterStress.getMean());
  bitmapFont.draw(batch,stringBuilder,0,200 - 80);
  stringBuilder.setLength(0);
  stringBuilder.append("Stress: N Mean Time: ");
  stringBuilder.append(newCounterStress.getMean());
  bitmapFont.draw(batch,stringBuilder,0,200 - 100);
  float oldMeanStress=oldCounterStress.getMean();
  float newMeanStress=newCounterStress.getMean();
  float meanedStressAverage=newMeanStress / oldMeanStress;
  stringBuilder.setLength(0);
  stringBuilder.append("Stress: New VBO time as a percentage of Old Time: ");
  stringBuilder.append(meanedStressAverage);
  bitmapFont.draw(batch,stringBuilder,0,200 - 120);
  batch.end();
}
