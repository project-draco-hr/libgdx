{
  width=(int)bounds.width();
  height=(int)bounds.height();
  app.debug(tag,bounds.width() + "x" + bounds.height()+ ", "+ UIScreen.getMainScreen().getScale());
  this.gl20=gl20;
  context=new EAGLContext(EAGLRenderingAPI.OpenGLES2);
  view=new GLKView(new CGRect(new CGPoint(0,0),bounds),context){
    @Override public void touchesBegan(    NSSet touches,    UIEvent event){
      super.touchesBegan(touches,event);
      IOSGraphics.this.input.touchDown(touches,event);
    }
    @Override public void touchesCancelled(    NSSet touches,    UIEvent event){
      super.touchesCancelled(touches,event);
      IOSGraphics.this.input.touchUp(touches,event);
    }
    @Override public void touchesEnded(    NSSet touches,    UIEvent event){
      super.touchesEnded(touches,event);
      IOSGraphics.this.input.touchUp(touches,event);
    }
    @Override public void touchesMoved(    NSSet touches,    UIEvent event){
      super.touchesMoved(touches,event);
      IOSGraphics.this.input.touchMoved(touches,event);
    }
    @Override public void draw(    CGRect rect){
      IOSGraphics.this.draw(this,rect);
    }
  }
;
  view.setDelegate(this);
  view.setDrawableColorFormat(GLKViewDrawableColorFormat.RGB565);
  viewController=new IOSUIViewController(app,this);
  viewController.setView(view);
  viewController.setDelegate(this);
  viewController.setPreferredFramesPerSecond(60);
  this.app=app;
  this.input=input;
  bufferFormat=new BufferFormat(5,6,5,0,16,0,0,false);
  this.gl20=gl20;
  density=1f;
  float scale=UIScreen.getMainScreen().getScale();
  app.debug(tag,"Calculating density, UIScreen.mainScreen.scale: " + scale);
  if (scale == 2f)   density=2f;
  int ppi;
  if (UIDevice.getCurrentDevice().getUserInterfaceIdiom() == UIUserInterfaceIdiom.Pad) {
    ppi=Math.round(density * 132);
  }
 else {
    ppi=Math.round(density * 163);
  }
  ppiX=ppi;
  ppiY=ppi;
  ppcX=ppiX / 2.54f;
  ppcY=ppcY / 2.54f;
  app.debug(tag,"Display: ppi=" + ppi + ", density="+ density);
  lastFrameTime=System.nanoTime();
  framesStart=lastFrameTime;
  paused=false;
  wasPaused=true;
}
