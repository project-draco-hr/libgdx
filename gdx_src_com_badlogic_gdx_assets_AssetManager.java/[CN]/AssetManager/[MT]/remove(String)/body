{
  Class type=assetTypes.get(fileName);
  if (type == null) {
    AssetLoadingTask currAsset=tasks.firstElement();
    if (currAsset.assetDesc.fileName.equals(fileName)) {
      currAsset.cancel=true;
      return;
    }
    int foundIndex=-1;
    for (int i=0; i < preloadQueue.size; i++) {
      if (preloadQueue.get(i).fileName.equals(fileName)) {
        foundIndex=i;
        break;
      }
    }
    if (foundIndex != -1) {
      throw new GdxRuntimeException("Asset '" + fileName + "' not loaded");
    }
 else {
      preloadQueue.removeIndex(foundIndex);
      return;
    }
  }
  Object asset=assets.get(type).get(fileName);
  if (asset instanceof Disposable)   ((Disposable)asset).dispose();
  if (asset instanceof ReferenceCountedAsset) {
    if (((ReferenceCountedAsset)asset).getRefCount() > 0)     return;
  }
  assetTypes.remove(fileName);
  assets.get(type).remove(fileName);
  Array<String> dependencies=assetDependencies.remove(fileName);
  if (dependencies != null) {
    for (    String dependency : dependencies) {
      remove(dependency);
    }
  }
}
