{
  float length2=start.dst2(end);
  if (length2 == 0)   return nearest.set(start);
  float t=((point.x - start.x) * (end.x - start.x) + (point.y - start.y) * (end.y - start.y)) / length2;
  if (t < 0)   return nearest.set(start);
  if (t > 1)   return nearest.set(end);
  return nearest.set(start.x + t * (end.x - start.x),start.y + t * (end.y - start.y));
}
