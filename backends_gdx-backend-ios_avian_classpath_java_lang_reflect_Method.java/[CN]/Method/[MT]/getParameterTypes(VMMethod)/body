{
  int count=vmMethod.parameterCount;
  Class[] types=new Class[count];
  int index=0;
  String spec=new String(vmMethod.spec,1,vmMethod.spec.length - 1,false);
  try {
    for (int i=0; i < spec.length(); ++i) {
      char c=spec.charAt(i);
      if (c == ')') {
        break;
      }
 else       if (c == 'L') {
        int start=i + 1;
        i=next(';',spec,start);
        String name=spec.substring(start,i).replace('/','.');
        types[index++]=Class.forName(name,true,vmMethod.class_.loader);
      }
 else       if (c == '[') {
        int start=i;
        while (spec.charAt(i) == '[')         ++i;
        if (spec.charAt(i) == 'L') {
          i=next(';',spec,i + 1);
          String name=spec.substring(start,i).replace('/','.');
          types[index++]=Class.forName(name,true,vmMethod.class_.loader);
        }
 else {
          String name=spec.substring(start,i + 1);
          types[index++]=Class.forCanonicalName(vmMethod.class_.loader,name);
        }
      }
 else {
        String name=spec.substring(i,i + 1);
        types[index++]=Class.forCanonicalName(vmMethod.class_.loader,name);
      }
    }
  }
 catch (  ClassNotFoundException e) {
    throw new RuntimeException(e);
  }
  return types;
}
