{
  boolean stillValid=this.cachedLocations.size != 0;
  final int numAttributes=attributes.size();
  if (stillValid) {
    if (locations == null) {
      for (int i=0; stillValid && i < numAttributes; i++) {
        VertexAttribute attribute=attributes.get(i);
        int location=shader.getAttributeLocation(attribute.alias);
        stillValid=location == this.cachedLocations.get(i);
      }
    }
 else {
      stillValid=locations.length == this.cachedLocations.size;
      for (int i=0; stillValid && i < numAttributes; i++) {
        stillValid=locations[i] == this.cachedLocations.get(i);
      }
    }
  }
  if (!stillValid) {
    Gdx.gl.glBindBuffer(GL20.GL_ARRAY_BUFFER,bufferHandle);
    unbindAttributes(shader);
    this.cachedLocations.clear();
    for (int i=0; i < numAttributes; i++) {
      VertexAttribute attribute=attributes.get(i);
      if (locations == null) {
        this.cachedLocations.add(shader.getAttributeLocation(attribute.alias));
      }
 else {
        this.cachedLocations.add(locations[i]);
      }
      int location=this.cachedLocations.get(i);
      if (location < 0) {
        continue;
      }
      shader.enableVertexAttribute(location);
      shader.setVertexAttribute(location,attribute.numComponents,attribute.type,attribute.normalized,attributes.vertexSize,attribute.offset);
    }
  }
}
