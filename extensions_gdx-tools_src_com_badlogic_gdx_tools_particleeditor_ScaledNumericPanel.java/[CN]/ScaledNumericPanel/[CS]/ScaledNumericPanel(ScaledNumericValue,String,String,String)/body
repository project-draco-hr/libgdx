{
  super(value,name,description);
  this.value=value;
  initializeComponents(chartTitle);
  lowMinSlider.setValue(value.getLowMin());
  lowMaxSlider.setValue(value.getLowMax());
  highMinSlider.setValue(value.getHighMin());
  highMaxSlider.setValue(value.getHighMax());
  chart.setValues(value.getTimeline(),value.getScaling());
  relativeCheckBox.setSelected(value.isRelative());
  lowMinSlider.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent event){
      value.setLowMin((Float)lowMinSlider.getValue());
      if (!lowMaxSlider.isVisible())       value.setLowMax((Float)lowMinSlider.getValue());
    }
  }
);
  lowMaxSlider.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent event){
      value.setLowMax((Float)lowMaxSlider.getValue());
    }
  }
);
  highMinSlider.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent event){
      value.setHighMin((Float)highMinSlider.getValue());
      if (!highMaxSlider.isVisible())       value.setHighMax((Float)highMinSlider.getValue());
    }
  }
);
  highMaxSlider.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent event){
      value.setHighMax((Float)highMaxSlider.getValue());
    }
  }
);
  relativeCheckBox.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event){
      value.setRelative(relativeCheckBox.isSelected());
    }
  }
);
  lowRangeButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event){
      boolean visible=!lowMaxSlider.isVisible();
      lowMaxSlider.setVisible(visible);
      lowRangeButton.setText(visible ? "<" : ">");
      GridBagLayout layout=(GridBagLayout)formPanel.getLayout();
      GridBagConstraints constraints=layout.getConstraints(lowRangeButton);
      constraints.gridx=visible ? 5 : 4;
      layout.setConstraints(lowRangeButton,constraints);
      Slider slider=visible ? lowMaxSlider : lowMinSlider;
      value.setLowMax((Float)slider.getValue());
    }
  }
);
  highRangeButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event){
      boolean visible=!highMaxSlider.isVisible();
      highMaxSlider.setVisible(visible);
      highRangeButton.setText(visible ? "<" : ">");
      GridBagLayout layout=(GridBagLayout)formPanel.getLayout();
      GridBagConstraints constraints=layout.getConstraints(highRangeButton);
      constraints.gridx=visible ? 5 : 4;
      layout.setConstraints(highRangeButton,constraints);
      Slider slider=visible ? highMaxSlider : highMinSlider;
      value.setHighMax((Float)slider.getValue());
    }
  }
);
  expandButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event){
      chart.setExpanded(!chart.isExpanded());
      boolean expanded=chart.isExpanded();
      GridBagLayout layout=(GridBagLayout)getContentPanel().getLayout();
      GridBagConstraints chartConstraints=layout.getConstraints(chart);
      GridBagConstraints expandButtonConstraints=layout.getConstraints(expandButton);
      if (expanded) {
        chart.setPreferredSize(new Dimension(150,200));
        expandButton.setText("-");
        chartConstraints.weightx=1;
        expandButtonConstraints.weightx=0;
      }
 else {
        chart.setPreferredSize(new Dimension(150,30));
        expandButton.setText("+");
        chartConstraints.weightx=0;
        expandButtonConstraints.weightx=1;
      }
      layout.setConstraints(chart,chartConstraints);
      layout.setConstraints(expandButton,expandButtonConstraints);
      relativeCheckBox.setVisible(!expanded);
      formPanel.setVisible(!expanded);
      chart.revalidate();
    }
  }
);
  if (value.getLowMin() == value.getLowMax())   lowRangeButton.doClick(0);
  if (value.getHighMin() == value.getHighMax())   highRangeButton.doClick(0);
}
