{
  cam=new PerspectiveCamera();
  cam.setFov(67);
  cam.setNear(0.1f);
  cam.setFar(100);
  cam.setViewport(Gdx.graphics.getWidth(),Gdx.graphics.getHeight());
  cam.getPosition().z=2;
  mesh=new Mesh(true,4,6,new VertexAttribute(Usage.Position,2,"a_pos"),new VertexAttribute(Usage.TextureCoordinates,2,"a_texCoords"));
  mesh.setVertices(new float[]{-1,-1,0,1,1,-1,1,1,1,1,1,0,-1,1,0,0});
  mesh.setIndices(new short[]{0,1,2,2,3,0});
  texture=new Texture(512,512,Format.RGBA8888);
  texture.setFilter(TextureFilter.Linear,TextureFilter.Linear);
  webCore=new WebCore(".");
  webView=webCore.createWebView(512,512);
  webView.focus();
  webView.loadURL("http://www.google.at","","","");
  Gdx.input.setInputProcessor(new InputAdapter(){
    Vector3 point=new Vector3();
    Vector3 tmp=new Vector3();
    public void calculatePoint(    int x,    int y){
      Ray ray=cam.getPickRay(x,y);
      ray.mul(inv);
      if (!Intersector.intersectRayTriangles(ray,triangles,tmp))       return;
      point.set(tmp);
      point.x=(point.x + 1) / 2 * 512;
      point.y=512 - (point.y + 1) / 2 * 512;
      if (point.x < 0)       point.x=0;
      if (point.x > 511)       point.x=511;
      if (point.y < 0)       point.y=0;
      if (point.y > 511)       point.y=511;
    }
    @Override public boolean touchDown(    int x,    int y,    int pointer,    int newParam){
      calculatePoint(x,y);
      webView.injectMouseMove((int)point.x,(int)point.y);
      webView.injectMouseDown(MouseButton.Left);
      return false;
    }
    @Override public boolean touchUp(    int x,    int y,    int pointer,    int button){
      calculatePoint(x,y);
      webView.injectMouseMove((int)point.x,(int)point.y);
      webView.injectMouseUp(MouseButton.Left);
      return false;
    }
    @Override public boolean touchDragged(    int x,    int y,    int pointer){
      calculatePoint(x,y);
      webView.injectMouseMove((int)point.x,(int)point.y);
      return false;
    }
    @Override public boolean keyTyped(    char key){
      webView.injectKeyTyped(key);
      return false;
    }
    public int translateKeycode(    int keycode){
      int virtualKeycode=0;
      if (keycode == Keys.KEYCODE_DPAD_LEFT)       virtualKeycode=Awesomium.AWE_AK_LEFT;
      if (keycode == Keys.KEYCODE_DPAD_RIGHT)       virtualKeycode=Awesomium.AWE_AK_RIGHT;
      if (keycode == Keys.KEYCODE_DPAD_UP)       virtualKeycode=Awesomium.AWE_AK_UP;
      if (keycode == Keys.KEYCODE_DPAD_DOWN)       virtualKeycode=Awesomium.AWE_AK_DOWN;
      if (keycode == Keys.KEYCODE_ENTER)       virtualKeycode=Awesomium.AWE_AK_RETURN;
      if (keycode == Keys.KEYCODE_DEL)       virtualKeycode=Awesomium.AWE_AK_BACK;
      if (keycode == Keys.KEYCODE_SHIFT_LEFT || keycode == Keys.KEYCODE_SHIFT_RIGHT)       virtualKeycode=Awesomium.AWE_AK_SHIFT;
      return virtualKeycode;
    }
    private int getModifiers(){
      int modifiers=0;
      if (Gdx.input.isKeyPressed(Keys.KEYCODE_SHIFT_LEFT) || Gdx.input.isKeyPressed(Keys.KEYCODE_SHIFT_RIGHT))       modifiers|=Awesomium.AWE_MOD_SHIFT_KEY;
      return modifiers;
    }
    @Override public boolean keyDown(    int keycode){
      int vkey=translateKeycode(keycode);
      int modifiers=getModifiers();
      if (vkey != 0) {
        webView.injectKeyDown(vkey,modifiers,false);
      }
      return false;
    }
    @Override public boolean keyUp(    int keycode){
      int vkey=translateKeycode(keycode);
      int modifiers=getModifiers();
      if (vkey != 0)       webView.injectKeyUp(vkey,modifiers,false);
      return false;
    }
  }
);
}
