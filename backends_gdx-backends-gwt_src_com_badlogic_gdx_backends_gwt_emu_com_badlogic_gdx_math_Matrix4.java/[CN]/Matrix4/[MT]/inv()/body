{
  float l_det=val[M30] * val[M21] * val[M12]* val[M03] - val[M20] * val[M31] * val[M12]* val[M03] - val[M30] * val[M11] * val[M22]* val[M03] + val[M10] * val[M31] * val[M22]* val[M03] + val[M20] * val[M11] * val[M32]* val[M03] - val[M10] * val[M21] * val[M32]* val[M03] - val[M30] * val[M21] * val[M02]* val[M13] + val[M20] * val[M31] * val[M02]* val[M13] + val[M30] * val[M01] * val[M22]* val[M13] - val[M00] * val[M31] * val[M22]* val[M13] - val[M20] * val[M01] * val[M32]* val[M13] + val[M00] * val[M21] * val[M32]* val[M13] + val[M30] * val[M11] * val[M02]* val[M23] - val[M10] * val[M31] * val[M02]* val[M23] - val[M30] * val[M01] * val[M12]* val[M23] + val[M00] * val[M31] * val[M12]* val[M23] + val[M10] * val[M01] * val[M32]* val[M23] - val[M00] * val[M11] * val[M32]* val[M23] - val[M20] * val[M11] * val[M02]* val[M33] + val[M10] * val[M21] * val[M02]* val[M33] + val[M20] * val[M01] * val[M12]* val[M33] - val[M00] * val[M21] * val[M12]* val[M33] - val[M10] * val[M01] * val[M22]* val[M33] + val[M00] * val[M11] * val[M22]* val[M33];
  if (l_det == 0f)   throw new RuntimeException("non-invertible matrix");
  float inv_det=1.0f / l_det;
  tmp[M00]=val[M12] * val[M23] * val[M31] - val[M13] * val[M22] * val[M31] + val[M13] * val[M21] * val[M32] - val[M11] * val[M23] * val[M32] - val[M12] * val[M21] * val[M33] + val[M11] * val[M22] * val[M33];
  tmp[M01]=val[M03] * val[M22] * val[M31] - val[M02] * val[M23] * val[M31] - val[M03] * val[M21] * val[M32] + val[M01] * val[M23] * val[M32] + val[M02] * val[M21] * val[M33] - val[M01] * val[M22] * val[M33];
  tmp[M02]=val[M02] * val[M13] * val[M31] - val[M03] * val[M12] * val[M31] + val[M03] * val[M11] * val[M32] - val[M01] * val[M13] * val[M32] - val[M02] * val[M11] * val[M33] + val[M01] * val[M12] * val[M33];
  tmp[M03]=val[M03] * val[M12] * val[M21] - val[M02] * val[M13] * val[M21] - val[M03] * val[M11] * val[M22] + val[M01] * val[M13] * val[M22] + val[M02] * val[M11] * val[M23] - val[M01] * val[M12] * val[M23];
  tmp[M10]=val[M13] * val[M22] * val[M30] - val[M12] * val[M23] * val[M30] - val[M13] * val[M20] * val[M32] + val[M10] * val[M23] * val[M32] + val[M12] * val[M20] * val[M33] - val[M10] * val[M22] * val[M33];
  tmp[M11]=val[M02] * val[M23] * val[M30] - val[M03] * val[M22] * val[M30] + val[M03] * val[M20] * val[M32] - val[M00] * val[M23] * val[M32] - val[M02] * val[M20] * val[M33] + val[M00] * val[M22] * val[M33];
  tmp[M12]=val[M03] * val[M12] * val[M30] - val[M02] * val[M13] * val[M30] - val[M03] * val[M10] * val[M32] + val[M00] * val[M13] * val[M32] + val[M02] * val[M10] * val[M33] - val[M00] * val[M12] * val[M33];
  tmp[M13]=val[M02] * val[M13] * val[M20] - val[M03] * val[M12] * val[M20] + val[M03] * val[M10] * val[M22] - val[M00] * val[M13] * val[M22] - val[M02] * val[M10] * val[M23] + val[M00] * val[M12] * val[M23];
  tmp[M20]=val[M11] * val[M23] * val[M30] - val[M13] * val[M21] * val[M30] + val[M13] * val[M20] * val[M31] - val[M10] * val[M23] * val[M31] - val[M11] * val[M20] * val[M33] + val[M10] * val[M21] * val[M33];
  tmp[M21]=val[M03] * val[M21] * val[M30] - val[M01] * val[M23] * val[M30] - val[M03] * val[M20] * val[M31] + val[M00] * val[M23] * val[M31] + val[M01] * val[M20] * val[M33] - val[M00] * val[M21] * val[M33];
  tmp[M22]=val[M01] * val[M13] * val[M30] - val[M03] * val[M11] * val[M30] + val[M03] * val[M10] * val[M31] - val[M00] * val[M13] * val[M31] - val[M01] * val[M10] * val[M33] + val[M00] * val[M11] * val[M33];
  tmp[M23]=val[M03] * val[M11] * val[M20] - val[M01] * val[M13] * val[M20] - val[M03] * val[M10] * val[M21] + val[M00] * val[M13] * val[M21] + val[M01] * val[M10] * val[M23] - val[M00] * val[M11] * val[M23];
  tmp[M30]=val[M12] * val[M21] * val[M30] - val[M11] * val[M22] * val[M30] - val[M12] * val[M20] * val[M31] + val[M10] * val[M22] * val[M31] + val[M11] * val[M20] * val[M32] - val[M10] * val[M21] * val[M32];
  tmp[M31]=val[M01] * val[M22] * val[M30] - val[M02] * val[M21] * val[M30] + val[M02] * val[M20] * val[M31] - val[M00] * val[M22] * val[M31] - val[M01] * val[M20] * val[M32] + val[M00] * val[M21] * val[M32];
  tmp[M32]=val[M02] * val[M11] * val[M30] - val[M01] * val[M12] * val[M30] - val[M02] * val[M10] * val[M31] + val[M00] * val[M12] * val[M31] + val[M01] * val[M10] * val[M32] - val[M00] * val[M11] * val[M32];
  tmp[M33]=val[M01] * val[M12] * val[M20] - val[M02] * val[M11] * val[M20] + val[M02] * val[M10] * val[M21] - val[M00] * val[M12] * val[M21] - val[M01] * val[M10] * val[M22] + val[M00] * val[M11] * val[M22];
  val[M00]=tmp[M00] * inv_det;
  val[M01]=tmp[M01] * inv_det;
  val[M02]=tmp[M02] * inv_det;
  val[M03]=tmp[M03] * inv_det;
  val[M10]=tmp[M10] * inv_det;
  val[M11]=tmp[M11] * inv_det;
  val[M12]=tmp[M12] * inv_det;
  val[M13]=tmp[M13] * inv_det;
  val[M20]=tmp[M20] * inv_det;
  val[M21]=tmp[M21] * inv_det;
  val[M22]=tmp[M22] * inv_det;
  val[M23]=tmp[M23] * inv_det;
  val[M30]=tmp[M30] * inv_det;
  val[M31]=tmp[M31] * inv_det;
  val[M32]=tmp[M32] * inv_det;
  val[M33]=tmp[M33] * inv_det;
  return this;
}
