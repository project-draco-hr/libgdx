{
  final Vec2 p1=pool0.set(input.p1).subLocal(xf.p);
  Rot.mulTrans(xf.q,p1,p1);
  final Vec2 p2=pool1.set(input.p2).subLocal(xf.p);
  Rot.mulTrans(xf.q,p1,p1);
  final Vec2 d=p2.subLocal(p1);
  final Vec2 v1=m_vertex1;
  final Vec2 v2=m_vertex2;
  final Vec2 normal=pool2.set(v2).subLocal(v1);
  normal.set(normal.y,-normal.x);
  normal.normalize();
  pool3.set(v1).subLocal(p1);
  float numerator=Vec2.dot(normal,pool3);
  float denominator=Vec2.dot(normal,d);
  if (denominator == 0.0f) {
    return false;
  }
  float t=numerator / denominator;
  if (t < 0.0f || 1.0f < t) {
    return false;
  }
  final Vec2 q=pool3;
  final Vec2 r=pool4;
  q.set(d).mulLocal(t).addLocal(p1);
  r.set(v2).subLocal(v1);
  float rr=Vec2.dot(r,r);
  if (rr == 0.0f) {
    return false;
  }
  pool5.set(q).subLocal(v1);
  float s=Vec2.dot(pool5,r) / rr;
  if (s < 0.0f || 1.0f < s) {
    return false;
  }
  output.fraction=t;
  if (numerator > 0.0f) {
    output.normal.set(normal).negateLocal();
  }
 else {
    output.normal.set(normal);
  }
  return true;
}
