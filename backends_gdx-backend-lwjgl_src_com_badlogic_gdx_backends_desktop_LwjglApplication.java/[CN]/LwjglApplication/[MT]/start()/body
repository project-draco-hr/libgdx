{
  gameThread=Thread.currentThread();
  setupDisplay();
  for (  RenderListener listener : listeners)   listener.surfaceCreated();
  setSize(width,height);
  for (  RenderListener listener : listeners)   listener.render();
  while (running && !Display.isCloseRequested()) {
    if (Keyboard.isCreated()) {
      while (Keyboard.next()) {
        if (Keyboard.getEventKeyState())         input.fireKeyDown(LwjglInput.getKeyCode(Keyboard.getEventKey()));
 else {
          input.fireKeyUp(LwjglInput.getKeyCode(Keyboard.getEventKey()));
          input.fireKeyTyped(Keyboard.getEventCharacter());
        }
      }
    }
    if (Mouse.isCreated()) {
      int x=Mouse.getX();
      int y=height - Mouse.getY();
      while (Mouse.next()) {
        if (isButtonPressed()) {
          if (mousePressed == false) {
            mousePressed=true;
            mouseX=x;
            mouseY=y;
            input.fireTouchDown(x,y,0);
          }
 else {
            if (mouseX != x || mouseY != y) {
              input.fireTouchDragged(x,y,0);
              mouseX=x;
              mouseY=y;
            }
          }
        }
 else {
          if (mousePressed == true) {
            mousePressed=false;
            input.fireTouchUp(x,y,0);
          }
        }
      }
    }
    for (int i=0, n=listeners.size(); i < n; i++)     listeners.get(i).render();
    Display.update();
    Display.sync(60);
  }
  if (appListener != null)   appListener.pause();
  try {
    for (int i=0, n=listeners.size(); i < n; i++)     listeners.get(i).dispose();
  }
  finally {
    Display.destroy();
  }
  if (appListener != null)   appListener.destroy();
}
