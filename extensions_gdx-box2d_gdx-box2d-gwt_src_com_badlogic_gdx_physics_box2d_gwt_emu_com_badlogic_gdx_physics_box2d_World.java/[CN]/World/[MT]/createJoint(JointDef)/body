{
  org.jbox2d.dynamics.joints.JointDef jd=def.toJBox2d();
  org.jbox2d.dynamics.joints.Joint j=world.createJoint(jd);
  Joint joint=null;
  if (def.type == JointType.DistanceJoint)   joint=new DistanceJoint(this,(org.jbox2d.dynamics.joints.DistanceJoint)j);
  if (def.type == JointType.FrictionJoint)   joint=new FrictionJoint(this,(org.jbox2d.dynamics.joints.FrictionJoint)j);
  if (def.type == JointType.GearJoint)   joint=new GearJoint(this,(org.jbox2d.dynamics.joints.GearJoint)j,((GearJointDef)def).joint1,((GearJointDef)def).joint2);
  if (def.type == JointType.MouseJoint)   joint=new MouseJoint(this,(org.jbox2d.dynamics.joints.MouseJoint)j);
  if (def.type == JointType.PrismaticJoint)   joint=new PrismaticJoint(this,(org.jbox2d.dynamics.joints.PrismaticJoint)j);
  if (def.type == JointType.PulleyJoint)   joint=new PulleyJoint(this,(org.jbox2d.dynamics.joints.PulleyJoint)j);
  if (def.type == JointType.RevoluteJoint)   joint=new RevoluteJoint(this,(org.jbox2d.dynamics.joints.RevoluteJoint)j);
  if (def.type == JointType.RopeJoint)   joint=new RopeJoint(this,(org.jbox2d.dynamics.joints.RopeJoint)j);
  if (def.type == JointType.WeldJoint)   joint=new WeldJoint(this,(org.jbox2d.dynamics.joints.WeldJoint)j);
  if (def.type == JointType.WheelJoint)   joint=new WheelJoint(this,(org.jbox2d.dynamics.joints.WheelJoint)j);
  if (joint == null)   throw new GdxRuntimeException("Joint type '" + def.type + "' not yet supported by GWT backend");
  joints.put(j,joint);
  return joint;
}
