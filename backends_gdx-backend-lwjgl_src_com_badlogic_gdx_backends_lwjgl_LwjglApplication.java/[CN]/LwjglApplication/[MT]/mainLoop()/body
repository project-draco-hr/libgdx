{
  try {
    graphics.setupDisplay();
  }
 catch (  LWJGLException e) {
    throw new GdxRuntimeException(e);
  }
  listener.create();
  listener.resize(graphics.getWidth(),graphics.getHeight());
  graphics.resize=false;
  int lastWidth=graphics.getWidth();
  int lastHeight=graphics.getHeight();
  graphics.lastTime=System.nanoTime();
  while (running) {
    if (Display.isCloseRequested()) {
      exit();
    }
    graphics.updateTime();
    if (graphics.resize) {
      graphics.resize=false;
      listener.resize(graphics.getWidth(),graphics.getHeight());
    }
synchronized (runnables) {
      for (int i=0; i < runnables.size(); i++) {
        try {
          runnables.get(i).run();
        }
 catch (        Throwable t) {
          t.printStackTrace();
        }
      }
      runnables.clear();
    }
    input.update();
    if (graphics.canvas != null) {
      int width=graphics.canvas.getWidth();
      int height=graphics.canvas.getHeight();
      if (lastWidth != width || lastHeight != height) {
        lastWidth=width;
        lastHeight=height;
        Gdx.gl.glViewport(0,0,lastWidth,lastHeight);
        listener.resize(lastWidth,lastHeight);
      }
    }
    input.processEvents();
    listener.render();
    audio.update();
    Display.update();
    if (Display.wasResized()) {
      Gdx.gl.glViewport(0,0,Display.getWidth(),Display.getHeight());
      graphics.config.width=Display.getWidth();
      graphics.config.height=Display.getHeight();
      if (listener != null)       listener.resize(Display.getWidth(),Display.getHeight());
    }
    if (graphics.vsync && graphics.config.useCPUSynch) {
      Display.sync(60);
    }
  }
  listener.pause();
  listener.dispose();
  Display.destroy();
  audio.dispose();
  if (graphics.config.forceExit)   System.exit(-1);
}
