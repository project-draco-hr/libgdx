{
  Array<LifecycleListener> lifecycleListeners=this.lifecycleListeners;
  try {
    graphics.setupDisplay();
  }
 catch (  LWJGLException e) {
    throw new GdxRuntimeException(e);
  }
  listener.create();
  graphics.resize=true;
  int lastWidth=graphics.getWidth();
  int lastHeight=graphics.getHeight();
  graphics.lastTime=System.nanoTime();
  boolean wasActive=true;
  while (running) {
    Display.processMessages();
    if (Display.isCloseRequested())     exit();
    boolean isActive=Display.isActive();
    if (wasActive && !isActive) {
      wasActive=false;
synchronized (lifecycleListeners) {
        for (        LifecycleListener listener : lifecycleListeners)         listener.pause();
      }
      listener.pause();
    }
    if (!wasActive && isActive) {
      wasActive=true;
      listener.resume();
synchronized (lifecycleListeners) {
        for (        LifecycleListener listener : lifecycleListeners)         listener.resume();
      }
    }
    boolean shouldRender=false;
    if (graphics.canvas != null) {
      int width=graphics.canvas.getWidth();
      int height=graphics.canvas.getHeight();
      if (lastWidth != width || lastHeight != height) {
        lastWidth=width;
        lastHeight=height;
        Gdx.gl.glViewport(0,0,lastWidth,lastHeight);
        listener.resize(lastWidth,lastHeight);
        shouldRender=true;
      }
    }
 else {
      graphics.config.x=Display.getX();
      graphics.config.y=Display.getY();
      if (graphics.resize || Display.wasResized() || Display.getWidth() != graphics.config.width || Display.getHeight() != graphics.config.height) {
        graphics.resize=false;
        Gdx.gl.glViewport(0,0,Display.getWidth(),Display.getHeight());
        graphics.config.width=Display.getWidth();
        graphics.config.height=Display.getHeight();
        if (listener != null)         listener.resize(Display.getWidth(),Display.getHeight());
        graphics.requestRendering();
      }
    }
    if (executeRunnables())     shouldRender=true;
    if (!running)     break;
    input.update();
    shouldRender|=graphics.shouldRender();
    input.processEvents();
    if (audio != null)     audio.update();
    if (!isActive && graphics.config.backgroundFPS == -1)     shouldRender=false;
    int frameRate=isActive ? graphics.config.foregroundFPS : graphics.config.backgroundFPS;
    if (shouldRender) {
      graphics.updateTime();
      listener.render();
      Display.update(false);
    }
 else {
      if (frameRate == -1)       frameRate=10;
      if (frameRate == 0)       frameRate=graphics.config.backgroundFPS;
      if (frameRate == 0)       frameRate=30;
    }
    if (frameRate > 0)     Display.sync(frameRate);
  }
synchronized (lifecycleListeners) {
    for (    LifecycleListener listener : lifecycleListeners) {
      listener.pause();
      listener.dispose();
    }
  }
  listener.pause();
  listener.dispose();
  Display.destroy();
  if (audio != null)   audio.dispose();
  if (graphics.config.forceExit)   System.exit(-1);
}
