{
  if (character != null) {
    animation.update(Gdx.graphics.getDeltaTime());
    if (Gdx.input.isKeyPressed(Keys.UP)) {
      if (!animation.inAction) {
        trTmp.idt().lerp(trForward,Gdx.graphics.getDeltaTime() / animation.current.animation.duration);
        character.transform.mul(trTmp.toMatrix4(tmpMatrix));
      }
      if (status != walk) {
        animation.animate("Walk",-1,1f,null,0.2f);
        status=walk;
      }
    }
 else     if (Gdx.input.isKeyPressed(Keys.DOWN)) {
      if (!animation.inAction) {
        trTmp.idt().lerp(trBackward,Gdx.graphics.getDeltaTime() / animation.current.animation.duration);
        character.transform.mul(trTmp.toMatrix4(tmpMatrix));
      }
      if (status != back) {
        animation.animate("Walk",-1,-1f,null,0.2f);
        status=back;
      }
    }
 else     if (status != idle) {
      animation.animate("Idle",-1,1f,null,0.2f);
      status=idle;
    }
    if (Gdx.input.isKeyPressed(Keys.RIGHT) && (status == walk || status == back) && !animation.inAction) {
      trTmp.idt().lerp(trRight,Gdx.graphics.getDeltaTime() / animation.current.animation.duration);
      character.transform.mul(trTmp.toMatrix4(tmpMatrix));
    }
 else     if (Gdx.input.isKeyPressed(Keys.LEFT) && (status == walk || status == back) && !animation.inAction) {
      trTmp.idt().lerp(trLeft,Gdx.graphics.getDeltaTime() / animation.current.animation.duration);
      character.transform.mul(trTmp.toMatrix4(tmpMatrix));
    }
    if (Gdx.input.isKeyPressed(Keys.SPACE) && !animation.inAction) {
      animation.action("Attack",1,1f,null,0.2f);
    }
    if (Gdx.input.isKeyJustPressed(Keys.Z))     ship.parts.get(0).enabled=!ship.parts.get(0).enabled;
  }
  if (character != null) {
    shadowLight.begin(character.transform.getTranslation(tmpVector),cam.direction);
    shadowBatch.begin(shadowLight.getCamera());
    if (character != null)     shadowBatch.render(character);
    if (tree != null)     shadowBatch.render(tree);
    shadowBatch.end();
    shadowLight.end();
  }
  super.render();
}
