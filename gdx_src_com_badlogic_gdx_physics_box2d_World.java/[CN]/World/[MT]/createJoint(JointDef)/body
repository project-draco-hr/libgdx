{
  long jointAddr=jniCreateJoint(addr,def.type.getValue(),def.bodyA.addr,def.bodyB.addr,def.collideConnected);
  Joint joint=null;
  if (def.type == JointType.DistanceJoint)   joint=new DistanceJoint(this,jointAddr);
  if (def.type == JointType.FrictionJoint)   joint=new FrictionJoint(this,jointAddr);
  if (def.type == JointType.GearJoint)   joint=new GearJoint(this,jointAddr);
  if (def.type == JointType.LineJoint)   joint=new LineJoint(this,jointAddr);
  if (def.type == JointType.MouseJoint)   joint=new MouseJoint(this,jointAddr);
  if (def.type == JointType.PrismaticJoint)   joint=new PrismaticJoint(this,jointAddr);
  if (def.type == JointType.PulleyJoint)   joint=new PulleyJoint(this,jointAddr);
  if (def.type == JointType.RevoluteJoint)   joint=new RevoluteJoint(this,jointAddr);
  if (def.type == JointType.WeldJoint)   joint=new WeldJoint(this,jointAddr);
  if (joint != null)   joints.put(joint.addr,joint);
  JointEdge jointEdgeA=new JointEdge(def.bodyB,joint);
  JointEdge jointEdgeB=new JointEdge(def.bodyA,joint);
  joint.jointEdgeA=jointEdgeA;
  joint.jointEdgeB=jointEdgeB;
  def.bodyA.joints.add(jointEdgeA);
  def.bodyB.joints.add(jointEdgeB);
  return joint;
}
