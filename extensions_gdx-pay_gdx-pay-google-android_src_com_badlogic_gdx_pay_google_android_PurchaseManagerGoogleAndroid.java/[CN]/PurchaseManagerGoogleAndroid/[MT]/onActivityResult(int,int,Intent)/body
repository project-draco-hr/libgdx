{
  if (requestCode == GDX_PAY_GOOGLE_ANDROID_REQUEST_CODE) {
    if (resultCode == Activity.RESULT_OK) {
      int responseCode=data.getIntExtra("RESPONSE_CODE",0);
      String purchaseData=data.getStringExtra("INAPP_PURCHASE_DATA");
      String dataSignature=data.getStringExtra("INAPP_DATA_SIGNATURE");
      try {
        JSONObject jo=new JSONObject(purchaseData);
        String identifier=jo.getString("productId");
        boolean valid=Integer.parseInt(jo.getString("purchaseState")) == 0;
        final String transactionId=jo.getString("purchaseToken");
        Date transactionDate=new Date(Long.parseLong(jo.getString("purchaseTime")));
        String transactionReceipt=null;
        if (identifier.equals("android.test.purchased")) {
          final Activity activity=this.activity;
          new Thread(new Runnable(){
            public void run(){
              try {
                int consumeResult=mService.consumePurchase(API_VERSION,activity.getPackageName(),transactionId);
                if (consumeResult != 0) {
                  throw new RuntimeException("Bad response code for consumePurchase(...):" + consumeResult);
                }
              }
 catch (              RemoteException e) {
                throw new RuntimeException(e);
              }
            }
          }
).start();
        }
        if (identifier.equals("android.test.purchased")) {
          identifier=Transaction.IDENTIFIER_TEST_SUCCESS;
        }
 else         if (identifier.equals("android.test.canceled")) {
          identifier=Transaction.IDENTIFIER_TEST_FAILURE_CANCELED;
        }
 else         if (identifier.equals("android.test.refunded")) {
          identifier=Transaction.IDENTIFIER_TEST_FAILURE_REFUNDED;
        }
 else         if (identifier.equals("android.test.item_unavailable")) {
          identifier=Transaction.IDENTIFIER_TEST_FAILURE_INVALIDIDENTIFIER;
        }
        String developerPayload=jo.getString("developerPayload");
        final PurchaseListener listener=listeners.remove(developerPayload);
        if (listener == null) {
          Gdx.app.error("","Wrong developerPayload string (cannot find listener).");
        }
 else {
          Transaction purchase=new Transaction(identifier,valid,transactionId,transactionDate,transactionReceipt);
          listener.handlePurchase(purchase);
        }
      }
 catch (      JSONException e) {
        Gdx.app.error("","Error parsing IAP JSON data.",e);
      }
    }
  }
}
