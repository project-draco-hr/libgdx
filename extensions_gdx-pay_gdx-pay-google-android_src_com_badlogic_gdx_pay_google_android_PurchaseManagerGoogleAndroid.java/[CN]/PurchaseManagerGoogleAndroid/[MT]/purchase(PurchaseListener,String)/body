{
  String developerPayload="gdx-pay-google-android-listener-" + listenerIndex++;
  listeners.put(developerPayload,listener);
  Bundle buyIntentBundle;
  try {
    buyIntentBundle=mService.getBuyIntent(API_VERSION,activity.getPackageName(),identifier,"inapp",developerPayload);
  }
 catch (  RemoteException e) {
    listener.handleError(e);
    return;
  }
  int buyIntentBundleResponseCode=buyIntentBundle.getInt("RESPONSE_CODE");
  if (buyIntentBundleResponseCode != 0) {
    if ((buyIntentBundleResponseCode == 7) && (identifier.equals("android.test.purchased"))) {
      final Activity activity=this.activity;
      new Thread(new Runnable(){
        public void run(){
          try {
            Bundle ownedItems=mService.getPurchases(API_VERSION,activity.getPackageName(),"inapp",null);
            ArrayList<String> purchaseDataList=ownedItems.getStringArrayList("INAPP_PURCHASE_DATA_LIST");
            for (            String purchaseData : purchaseDataList) {
              JSONObject jo=null;
              String ownedIdentifier=null;
              try {
                jo=new JSONObject(purchaseData);
                ownedIdentifier=jo.getString("productId");
              }
 catch (              JSONException e) {
                throw new RuntimeException(e);
              }
              if (ownedIdentifier.equals("android.test.purchased")) {
                String purchaseToken=jo.optString("token",jo.optString("purchaseToken"));
                int consumeResult=mService.consumePurchase(API_VERSION,activity.getPackageName(),purchaseToken);
                if (consumeResult != 0) {
                  throw new RuntimeException("Bad response code for consumePurchase(...):" + consumeResult);
                }
              }
            }
          }
 catch (          RemoteException e) {
            throw new RuntimeException(e);
          }
        }
      }
).start();
      try {
        buyIntentBundle=mService.getBuyIntent(API_VERSION,activity.getPackageName(),identifier,"inapp",developerPayload);
      }
 catch (      RemoteException e) {
        listener.handleError(e);
        return;
      }
    }
 else {
      listener.handleError(new RuntimeException("Bad response code for getBuyIntent(...):" + buyIntentBundleResponseCode));
      return;
    }
  }
  PendingIntent pendingIntent=buyIntentBundle.getParcelable("BUY_INTENT");
  try {
    activity.startIntentSenderForResult(pendingIntent.getIntentSender(),GDX_PAY_GOOGLE_ANDROID_REQUEST_CODE,new Intent(),Integer.valueOf(0),Integer.valueOf(0),Integer.valueOf(0));
  }
 catch (  SendIntentException e) {
    listener.handleError(e);
    return;
  }
}
