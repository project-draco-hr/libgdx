{
  if (start < end) {
    final Color hexColor=tempColor;
    if (str.charAt(start) == '#') {
      int colorInt=0;
      for (int i=start + 1; i < end; i++) {
        char ch=str.charAt(i);
        if (ch == ']') {
          if (i < start + 2 || i > start + 9)           return -1;
          if (i <= start + 7) {
            Color.rgb888ToColor(hexColor,colorInt);
            hexColor.a=1f;
          }
 else {
            Color.rgba8888ToColor(hexColor,colorInt);
          }
          if (nomarkupStart >= 0)           beginChunk(hexColor,nomarkupStart);
          return i - start;
        }
        if (ch >= '0' && ch <= '9')         colorInt=colorInt * 16 + (ch - '0');
 else         if (ch >= 'a' && ch <= 'f')         colorInt=colorInt * 16 + (ch - ('a' - 10));
 else         if (ch >= 'A' && ch <= 'F')         colorInt=colorInt * 16 + (ch - ('A' - 10));
 else         return -1;
      }
    }
 else {
      tempColorBuffer.setLength(0);
      for (int i=start; i < end; i++) {
        char ch=str.charAt(i);
        if (ch == ']') {
          if (i == start) {
            if (nomarkupStart >= 0)             endChunk(nomarkupStart);
          }
 else {
            String colorString=tempColorBuffer.toString();
            Color newColor=Colors.get(colorString);
            if (newColor == null)             return -1;
            if (nomarkupStart >= 0)             beginChunk(newColor,nomarkupStart);
          }
          return i - start;
        }
 else {
          tempColorBuffer.append(ch);
        }
      }
    }
  }
  return -1;
}
