{
  try {
    graphics.setupDisplay();
  }
 catch (  LWJGLException e) {
    throw new GdxRuntimeException(e);
  }
  Keyboard.enableRepeatEvents(true);
  listener.create();
  listener.resize(graphics.getWidth(),graphics.getHeight());
  final Runnable runnable=new Runnable(){
    int lastWidth=Math.max(1,graphics.getWidth());
    int lastHeight=Math.max(1,graphics.getHeight());
    public void run(){
      if (!running)       return;
      graphics.updateTime();
synchronized (runnables) {
        for (int i=0; i < runnables.size(); i++) {
          runnables.get(i).run();
        }
        runnables.clear();
      }
      input.update();
      int width=Math.max(1,graphics.getWidth());
      int height=Math.max(1,graphics.getHeight());
      if (lastWidth != width || lastHeight != height) {
        lastWidth=width;
        lastHeight=height;
        listener.resize(width,height);
      }
      ((LwjglInput)Gdx.input).processEvents();
      listener.render();
      audio.update();
      Display.update();
      Display.sync(60);
    }
  }
;
  new Thread("LWJGL Canvas"){
    public void run(){
      while (running && !Display.isCloseRequested()) {
        try {
          EventQueue.invokeAndWait(runnable);
        }
 catch (        Exception ex) {
          throw new GdxRuntimeException(ex);
        }
      }
    }
  }
.start();
}
