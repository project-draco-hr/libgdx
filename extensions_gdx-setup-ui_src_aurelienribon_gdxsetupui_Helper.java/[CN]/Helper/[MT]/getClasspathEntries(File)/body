{
  List<ClasspathEntry> classpath=new ArrayList<ClasspathEntry>();
  if (!classpathFile.isFile())   return classpath;
  try {
    Document doc=XmlUtils.createParser().parse(classpathFile);
    NodeList nodes=(NodeList)XmlUtils.xpath("classpath/classpathentry[@kind='lib' and @path]",doc,XPathConstants.NODESET);
    for (int i=0; i < nodes.getLength(); i++) {
      String path=nodes.item(i).getAttributes().getNamedItem("path").getNodeValue();
      String sourcepath=nodes.item(i).getAttributes().getNamedItem("sourcepath") != null ? nodes.item(i).getAttributes().getNamedItem("sourcepath").getNodeValue() : null;
      boolean exported=nodes.item(i).getAttributes().getNamedItem("exported") != null ? nodes.item(i).getAttributes().getNamedItem("exported").getNodeValue().equalsIgnoreCase("true") : false;
      classpath.add(new ClasspathEntry(path,sourcepath,exported));
    }
  }
 catch (  SAXException ex) {
  }
catch (  IOException ex) {
  }
  return classpath;
}
