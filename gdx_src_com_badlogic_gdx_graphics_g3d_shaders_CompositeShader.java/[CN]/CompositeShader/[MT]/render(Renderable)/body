{
  ShaderProgram.pedantic=false;
  program.setUniformMatrix("u_projTrans",camera.combined);
  program.setUniformf("u_cameraPosition",camera.position);
  program.setUniformf("u_cameraDirection",camera.direction);
  program.setUniformf("u_cameraUp",camera.up);
  program.setUniformMatrix("u_normalMatrix",normalMatrix.set(camera.combined));
  for (  SubShader shader : subShaders) {
    shader.apply(program,context,camera,renderable);
  }
  renderable.mesh.render(program,renderable.primitiveType,renderable.meshPartOffset,renderable.meshPartSize);
}
