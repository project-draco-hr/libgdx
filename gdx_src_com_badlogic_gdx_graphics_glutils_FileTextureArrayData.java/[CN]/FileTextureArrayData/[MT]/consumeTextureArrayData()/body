{
  for (int i=0; i < textureDatas.length; i++) {
    if (textureDatas[i].getType() == TextureData.TextureDataType.Custom) {
      textureDatas[i].consumeCustomData(GL30.GL_TEXTURE_2D_ARRAY);
    }
 else {
      TextureData texData=textureDatas[i];
      Pixmap pixmap=texData.consumePixmap();
      boolean disposePixmap=texData.disposePixmap();
      if (texData.getFormat() != pixmap.getFormat()) {
        Pixmap temp=new Pixmap(pixmap.getWidth(),pixmap.getHeight(),texData.getFormat());
        Pixmap.Blending blendmode=Pixmap.getBlending();
        Pixmap.setBlending(Pixmap.Blending.None);
        temp.drawPixmap(pixmap,0,0,0,0,pixmap.getWidth(),pixmap.getHeight());
        Pixmap.setBlending(blendmode);
        if (texData.disposePixmap()) {
          pixmap.dispose();
        }
        pixmap=temp;
        disposePixmap=true;
      }
      Gdx.gl30.glTexSubImage3D(GL30.GL_TEXTURE_2D_ARRAY,0,0,0,i,pixmap.getWidth(),pixmap.getHeight(),1,pixmap.getGLInternalFormat(),pixmap.getGLType(),pixmap.getPixels());
      if (disposePixmap)       pixmap.dispose();
    }
  }
}
