{
  MD5Joints skelFrame=animation.frames[frameIndex];
  for (int i=0; i < jointInfos.length; i++) {
    BaseFrameJoint baseJoint=baseFrame[i];
    Vector3 animatedPos=new Vector3();
    MD5Quaternion animatedOrient=new MD5Quaternion();
    int j=0;
    animatedPos.set(baseJoint.pos);
    animatedOrient.set(baseJoint.orient);
    if ((jointInfos[i].flags & 1) != 0) {
      animatedPos.x=animFrameData[jointInfos[i].startIndex + j];
      j++;
    }
    if ((jointInfos[i].flags & 2) != 0) {
      animatedPos.y=animFrameData[jointInfos[i].startIndex + j];
      j++;
    }
    if ((jointInfos[i].flags & 4) != 0) {
      animatedPos.z=animFrameData[jointInfos[i].startIndex + j];
      j++;
    }
    if ((jointInfos[i].flags & 8) != 0) {
      animatedOrient.x=animFrameData[jointInfos[i].startIndex + j];
      j++;
    }
    if ((jointInfos[i].flags & 16) != 0) {
      animatedOrient.y=animFrameData[jointInfos[i].startIndex + j];
      j++;
    }
    if ((jointInfos[i].flags & 32) != 0) {
      animatedOrient.z=animFrameData[jointInfos[i].startIndex + j];
      j++;
    }
    animatedOrient.computeW();
    int thisJointIdx=i << 3;
    skelFrame.names[i]=jointInfos[i].name;
    skelFrame.joints[thisJointIdx]=jointInfos[i].parent;
    if (jointInfos[i].parent < 0) {
      skelFrame.joints[thisJointIdx + 1]=animatedPos.x;
      skelFrame.joints[thisJointIdx + 2]=animatedPos.y;
      skelFrame.joints[thisJointIdx + 3]=animatedPos.z;
      skelFrame.joints[thisJointIdx + 4]=animatedOrient.x;
      skelFrame.joints[thisJointIdx + 5]=animatedOrient.y;
      skelFrame.joints[thisJointIdx + 6]=animatedOrient.z;
      skelFrame.joints[thisJointIdx + 7]=animatedOrient.w;
    }
 else {
      int parentJointIdx=jointInfos[i].parent << 3;
      parentPos.x=skelFrame.joints[parentJointIdx + 1];
      parentPos.y=skelFrame.joints[parentJointIdx + 2];
      parentPos.z=skelFrame.joints[parentJointIdx + 3];
      parentOrient.x=skelFrame.joints[parentJointIdx + 4];
      parentOrient.y=skelFrame.joints[parentJointIdx + 5];
      parentOrient.z=skelFrame.joints[parentJointIdx + 6];
      parentOrient.w=skelFrame.joints[parentJointIdx + 7];
      parentOrient.rotate(animatedPos);
      skelFrame.joints[thisJointIdx + 1]=animatedPos.x + parentPos.x;
      skelFrame.joints[thisJointIdx + 2]=animatedPos.y + parentPos.y;
      skelFrame.joints[thisJointIdx + 3]=animatedPos.z + parentPos.z;
      parentOrient.multiply(animatedOrient);
      parentOrient.normalize();
      skelFrame.joints[thisJointIdx + 4]=parentOrient.x;
      skelFrame.joints[thisJointIdx + 5]=parentOrient.y;
      skelFrame.joints[thisJointIdx + 6]=parentOrient.z;
      skelFrame.joints[thisJointIdx + 7]=parentOrient.w;
    }
  }
}
