{
  long start=System.nanoTime();
  if (fileName.endsWith(".dae"))   model=ColladaLoader.loadStillModel(Gdx.files.internal(fileName));
 else   if (fileName.endsWith(".obj"))   model=new ObjLoader().loadObj(Gdx.files.internal(fileName),true);
 else   if (fileName.endsWith(".g3d"))   model=G3dLoader.loadStillModel(Gdx.files.internal(fileName));
 else   throw new GdxRuntimeException("Unknown file format '" + fileName + "'");
  Gdx.app.log("StillModelViewer","loading took: " + (System.nanoTime() - start) / 1000000000.0f);
  if (!fileName.endsWith(".g3d")) {
    G3dExporter.export(model,Gdx.files.absolute(fileName + ".g3d"));
    start=System.nanoTime();
    model=G3dLoader.loadStillModel(Gdx.files.absolute(fileName + ".g3d"));
    Gdx.app.log("StillModelViewer","loading binary took: " + (System.nanoTime() - start) / 1000000000.0f);
  }
  if (textureFileName != null)   texture=new Texture(Gdx.files.internal(textureFileName),true);
  hasNormals=hasNormals();
  model.getBoundingBox(bounds);
  float len=bounds.getDimensions().len();
  System.out.println("bounds: " + bounds);
  cam=new PerspectiveCamera(60,Gdx.graphics.getWidth(),Gdx.graphics.getHeight());
  cam.position.set(bounds.getCenter().cpy().add(len,len,len));
  cam.lookAt(bounds.getCenter().x,bounds.getCenter().y,bounds.getCenter().z);
  cam.near=0.1f;
  cam.far=1000;
  renderer=new ImmediateModeRenderer();
}
