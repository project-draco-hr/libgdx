{
  Gdx.gl.glClearColor(0.2f,0.2f,0.2f,1.0f);
  Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);
  Gdx.gl.glEnable(GL10.GL_DEPTH_TEST);
  cam.update();
  cam.apply(Gdx.gl10);
  drawAxes();
  if (hasNormals) {
    Gdx.gl.glEnable(GL10.GL_LIGHTING);
    Gdx.gl.glEnable(GL10.GL_COLOR_MATERIAL);
    Gdx.gl.glEnable(GL10.GL_LIGHT0);
    Gdx.gl10.glLightfv(GL10.GL_LIGHT0,GL10.GL_DIFFUSE,lightColor,0);
    Gdx.gl10.glLightfv(GL10.GL_LIGHT0,GL10.GL_POSITION,lightPosition,0);
  }
  if (texture != null) {
    Gdx.gl.glEnable(GL10.GL_TEXTURE_2D);
    texture.bind();
  }
  angle+=45 * Gdx.graphics.getDeltaTime();
  Gdx.gl10.glRotatef(angle,0,1,0);
  model.render();
  if (texture != null) {
    Gdx.gl.glDisable(GL10.GL_TEXTURE_2D);
  }
  if (hasNormals) {
    Gdx.gl.glDisable(GL10.GL_LIGHTING);
  }
  batch.begin();
  font.draw(batch,"fps: " + Gdx.graphics.getFramesPerSecond(),20,30);
  batch.end();
  fps.log();
}
