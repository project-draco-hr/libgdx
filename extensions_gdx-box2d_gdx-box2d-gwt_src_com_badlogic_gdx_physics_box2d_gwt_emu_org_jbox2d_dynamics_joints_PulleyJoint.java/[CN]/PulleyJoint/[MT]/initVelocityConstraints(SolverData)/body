{
  m_indexA=m_bodyA.m_islandIndex;
  m_indexB=m_bodyB.m_islandIndex;
  m_localCenterA.set(m_bodyA.m_sweep.localCenter);
  m_localCenterB.set(m_bodyB.m_sweep.localCenter);
  m_invMassA=m_bodyA.m_invMass;
  m_invMassB=m_bodyB.m_invMass;
  m_invIA=m_bodyA.m_invI;
  m_invIB=m_bodyB.m_invI;
  Vec2 cA=data.positions[m_indexA].c;
  float aA=data.positions[m_indexA].a;
  Vec2 vA=data.velocities[m_indexA].v;
  float wA=data.velocities[m_indexA].w;
  Vec2 cB=data.positions[m_indexB].c;
  float aB=data.positions[m_indexB].a;
  Vec2 vB=data.velocities[m_indexB].v;
  float wB=data.velocities[m_indexB].w;
  final Rot qA=pool.popRot();
  final Rot qB=pool.popRot();
  final Vec2 temp=pool.popVec2();
  qA.set(aA);
  qB.set(aB);
  Rot.mulToOutUnsafe(qA,temp.set(m_localAnchorA).subLocal(m_localCenterA),m_rA);
  Rot.mulToOutUnsafe(qB,temp.set(m_localAnchorB).subLocal(m_localCenterB),m_rB);
  m_uA.set(cA).addLocal(m_rA).subLocal(m_groundAnchorA);
  m_uB.set(cB).addLocal(m_rB).subLocal(m_groundAnchorB);
  float lengthA=m_uA.length();
  float lengthB=m_uB.length();
  if (lengthA > 10f * Settings.linearSlop) {
    m_uA.mulLocal(1.0f / lengthA);
  }
 else {
    m_uA.setZero();
  }
  if (lengthB > 10f * Settings.linearSlop) {
    m_uB.mulLocal(1.0f / lengthB);
  }
 else {
    m_uB.setZero();
  }
  float ruA=Vec2.cross(m_rA,m_uA);
  float ruB=Vec2.cross(m_rB,m_uB);
  float mA=m_invMassA + m_invIA * ruA * ruA;
  float mB=m_invMassB + m_invIB * ruB * ruB;
  m_mass=mA + m_ratio * m_ratio * mB;
  if (m_mass > 0.0f) {
    m_mass=1.0f / m_mass;
  }
  if (data.step.warmStarting) {
    m_impulse*=data.step.dtRatio;
    final Vec2 PA=pool.popVec2();
    final Vec2 PB=pool.popVec2();
    PA.set(m_uA).mulLocal(-m_impulse);
    PB.set(m_uB).mulLocal(-m_ratio * m_impulse);
    vA.x+=m_invMassA * PA.x;
    vA.y+=m_invMassA * PA.y;
    wA+=m_invIA * Vec2.cross(m_rA,PA);
    vB.x+=m_invMassB * PB.x;
    vB.y+=m_invMassB * PB.y;
    wB+=m_invIB * Vec2.cross(m_rB,PB);
    pool.pushVec2(2);
  }
 else {
    m_impulse=0.0f;
  }
  data.velocities[m_indexA].w=wA;
  data.velocities[m_indexB].w=wB;
  pool.pushVec2(1);
  pool.pushRot(2);
}
