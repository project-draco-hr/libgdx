{
  Vec2 vA=data.velocities[m_indexA].v;
  float wA=data.velocities[m_indexA].w;
  Vec2 vB=data.velocities[m_indexB].v;
  float wB=data.velocities[m_indexB].w;
  final Vec2 vpA=pool.popVec2();
  final Vec2 vpB=pool.popVec2();
  final Vec2 PA=pool.popVec2();
  final Vec2 PB=pool.popVec2();
  Vec2.crossToOutUnsafe(wA,m_rA,vpA);
  vpA.addLocal(vA);
  Vec2.crossToOutUnsafe(wB,m_rB,vpB);
  vpB.addLocal(vB);
  float Cdot=-Vec2.dot(m_uA,vpA) - m_ratio * Vec2.dot(m_uB,vpB);
  float impulse=-m_mass * Cdot;
  m_impulse+=impulse;
  PA.set(m_uA).mulLocal(-impulse);
  PB.set(m_uB).mulLocal(-m_ratio * impulse);
  vA.x+=m_invMassA * PA.x;
  vA.y+=m_invMassA * PA.y;
  wA+=m_invIA * Vec2.cross(m_rA,PA);
  vB.x+=m_invMassB * PB.x;
  vB.y+=m_invMassB * PB.y;
  wB+=m_invIB * Vec2.cross(m_rB,PB);
  data.velocities[m_indexA].w=wA;
  data.velocities[m_indexB].w=wB;
  pool.pushVec2(4);
}
