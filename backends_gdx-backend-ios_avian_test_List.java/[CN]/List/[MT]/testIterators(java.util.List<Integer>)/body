{
  l.add(1);
  l.add(2);
  l.add(3);
  ListIterator<Integer> it=l.listIterator();
  expect(it.next().equals(Integer.valueOf(1)));
  expect(it.next().equals(Integer.valueOf(2)));
  expect(it.next().equals(Integer.valueOf(3)));
  expect(!it.hasNext());
  it=l.listIterator(1);
  expect(it.next().equals(Integer.valueOf(2)));
  expect(it.next().equals(Integer.valueOf(3)));
  expect(!it.hasNext());
  it=l.listIterator(2);
  expect(it.next().equals(Integer.valueOf(3)));
  expect(!it.hasNext());
  it=l.listIterator(3);
  expect(it.previous().equals(Integer.valueOf(3)));
  expect(it.previous().equals(Integer.valueOf(2)));
  expect(it.previous().equals(Integer.valueOf(1)));
  expect(!it.hasPrevious());
  it=l.listIterator(2);
  expect(it.previous().equals(Integer.valueOf(2)));
  expect(it.previous().equals(Integer.valueOf(1)));
  expect(!it.hasPrevious());
  it=l.listIterator(1);
  expect(it.previous().equals(Integer.valueOf(1)));
  expect(!it.hasPrevious());
}
