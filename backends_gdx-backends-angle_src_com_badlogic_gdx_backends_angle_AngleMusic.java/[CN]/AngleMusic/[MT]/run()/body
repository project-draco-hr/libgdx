{
  int readBytes=0;
  long readSamples=0;
  while (!disposed) {
    int curState=state.get();
    if (curState == Playing) {
      try {
        if (ain == null)         openAudioInputStream();
        readBytes=ain.read(buffer);
        if (readBytes != -1) {
          int writtenBytes=line.write(buffer,0,readBytes);
          while (writtenBytes != readBytes)           writtenBytes+=line.write(buffer,writtenBytes,readBytes - writtenBytes);
          readSamples+=readBytes / ain.getFormat().getFrameSize();
        }
 else {
          System.out.println("samples: " + readSamples);
          ain.close();
          if (!isLooping())           state.set(Stopped);
 else           openAudioInputStream();
        }
      }
 catch (      Exception ex) {
        try {
          ain.close();
        }
 catch (        IOException e) {
          e.printStackTrace();
        }
        line.close();
        ex.printStackTrace();
        state.set(Stopped);
        return;
      }
    }
 else     if (curState == Stopped && ain != null) {
      try {
        ain.close();
      }
 catch (      IOException e) {
        e.printStackTrace();
      }
      ain=null;
      line.flush();
    }
    try {
      Thread.sleep(10);
    }
 catch (    InterruptedException e) {
      e.printStackTrace();
    }
  }
}
