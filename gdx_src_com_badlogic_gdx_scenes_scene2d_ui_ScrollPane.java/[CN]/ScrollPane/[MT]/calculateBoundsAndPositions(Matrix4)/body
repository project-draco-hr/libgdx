{
  final NinePatch background=style.background;
  final NinePatch hScrollKnob=style.hScrollKnob;
  final NinePatch vScrollKnob=style.vScrollKnob;
  float areaWidth=width - background.getLeftWidth() - background.getRightWidth();
  float areaHeight=height - background.getTopHeight() - background.getBottomHeight();
  float widgetWidth, widgetHeight;
  if (widget instanceof Layout) {
    Layout layout=(Layout)widget;
    widgetWidth=layout.getPrefWidth();
    widgetHeight=layout.getPrefHeight();
  }
 else {
    widgetWidth=widget.width;
    widgetHeight=widget.height;
  }
  hasHScroll=false;
  hasVScroll=false;
  if (widgetWidth > areaWidth)   hasHScroll=true;
  if (widgetHeight > areaHeight)   hasVScroll=true;
  if (hasVScroll && (widgetWidth > areaWidth - vScrollKnob.getTotalWidth())) {
    hasHScroll=true;
    areaWidth-=vScrollKnob.getTotalWidth();
  }
  if (hasHScroll && (widgetHeight > areaHeight - hScrollKnob.getTotalHeight())) {
    hasVScroll=true;
    areaHeight-=hScrollKnob.getTotalHeight();
  }
  widgetWidth=Math.max(areaWidth,widgetWidth);
  widgetHeight=Math.max(areaHeight,widgetHeight);
  if (widget.width != widgetWidth || widget.height != widgetHeight) {
    widget.width=widgetWidth;
    widget.height=widgetHeight;
    if (widget instanceof Layout) {
      Layout layout=(Layout)widget;
      layout.invalidate();
      layout.layout();
    }
  }
  if (hasHScroll) {
    hScrollBounds.set(background.getLeftWidth(),background.getBottomHeight(),areaWidth,hScrollKnob.getTotalHeight());
    hScrollKnobBounds.width=Math.max(hScrollKnob.getTotalWidth(),(int)(hScrollBounds.width * areaWidth / widget.width));
    hScrollKnobBounds.height=hScrollKnob.getTotalHeight();
    hScrollKnobBounds.x=hScrollBounds.x + (int)((hScrollBounds.width - hScrollKnobBounds.width) * hScrollAmount);
    hScrollKnobBounds.y=hScrollBounds.y;
  }
  if (hasVScroll) {
    vScrollBounds.set(width - background.getRightWidth() - vScrollKnob.getTotalWidth(),height - background.getTopHeight() - areaHeight,vScrollKnob.getTotalWidth(),areaHeight);
    vScrollKnobBounds.width=vScrollKnob.getTotalWidth();
    vScrollKnobBounds.height=Math.max(vScrollKnob.getTotalHeight(),(int)(vScrollBounds.height * areaHeight / widget.height));
    vScrollKnobBounds.x=vScrollBounds.x;
    vScrollKnobBounds.y=vScrollBounds.y + (int)((vScrollBounds.height - vScrollKnobBounds.height) * (1 - vScrollAmount));
  }
  widgetAreaBounds.set(background.getLeftWidth(),background.getBottomHeight() + (hasHScroll ? hScrollKnob.getTotalHeight() : 0),areaWidth,areaHeight);
  widget.y=widgetAreaBounds.y - (!hasVScroll ? (int)(widget.height - areaHeight) : 0) - (hasVScroll ? (int)((widget.height - areaHeight) * (1 - vScrollAmount)) : 0);
  widget.x=widgetAreaBounds.x - (hasHScroll ? (int)((widget.width - areaWidth) * hScrollAmount) : 0);
  ScissorStack.calculateScissors(stage.getCamera(),batchTransform,widgetAreaBounds,scissorBounds);
}
