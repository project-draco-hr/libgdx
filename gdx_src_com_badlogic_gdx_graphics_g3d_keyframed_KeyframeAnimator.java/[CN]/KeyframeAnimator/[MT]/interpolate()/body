{
  float t=mFrameDelta * invSampleRate;
  for (int i=0; i < numMeshes; i++) {
    for (int n=0; n < A.vertices[i].length; n+=sStride) {
      float Ax=A.vertices[i][n];
      float Bx=B.vertices[i][n];
      float Rx=Ax + (Bx - Ax) * t;
      float Ay=A.vertices[i][n + 1];
      float By=B.vertices[i][n + 1];
      float Ry=Ay + (By - Ay) * t;
      float Az=A.vertices[i][n + 2];
      float Bz=B.vertices[i][n + 2];
      float Rz=Az + (Bz - Az) * t;
      R.vertices[i][n]=Rx;
      R.vertices[i][n + 1]=Ry;
      R.vertices[i][n + 2]=Rz;
      R.vertices[i][n + 3]=A.vertices[i][n + 3];
      R.vertices[i][n + 4]=A.vertices[i][n + 4];
      Ax=A.vertices[i][n + 5];
      Bx=B.vertices[i][n + 5];
      Rx=Ax + (Bx - Ax) * t;
      Ay=A.vertices[i][n + 6];
      By=B.vertices[i][n + 6];
      Ry=Ay + (By - Ay) * t;
      Az=A.vertices[i][n + 7];
      Bz=B.vertices[i][n + 7];
      Rz=Az + (Bz - Az) * t;
      R.vertices[i][n + 5]=Rx;
      R.vertices[i][n + 6]=Ry;
      R.vertices[i][n + 7]=Rz;
    }
    if (!R.indicesSet) {
      for (int n=0; n < A.indices[i].length; n++) {
        R.indices[i][n]=A.indices[i][n];
      }
    }
  }
  R.indicesSet=true;
  for (int tj=0; tj < A.taggedJoint.length; tj++) {
    float PAX=A.taggedJointPos[tj].x;
    float PAY=A.taggedJointPos[tj].y;
    float PAZ=A.taggedJointPos[tj].z;
    float PBX=B.taggedJointPos[tj].x;
    float PBY=B.taggedJointPos[tj].y;
    float PBZ=B.taggedJointPos[tj].z;
    R.taggedJointPos[tj].x=PAX + (PBX - PAX) * t;
    R.taggedJointPos[tj].y=PAY + (PBY - PAY) * t;
    R.taggedJointPos[tj].z=PAZ + (PBZ - PAZ) * t;
    jointAOrient.x=A.taggedJoint[tj].x;
    jointAOrient.y=A.taggedJoint[tj].y;
    jointAOrient.z=A.taggedJoint[tj].z;
    jointAOrient.w=A.taggedJoint[tj].w;
    jointBOrient.x=B.taggedJoint[tj].x;
    jointBOrient.y=B.taggedJoint[tj].y;
    jointBOrient.z=B.taggedJoint[tj].z;
    jointBOrient.w=B.taggedJoint[tj].w;
    jointAOrient.slerp(jointBOrient,t);
    R.taggedJoint[tj].x=jointAOrient.x;
    R.taggedJoint[tj].y=jointAOrient.y;
    R.taggedJoint[tj].z=jointAOrient.z;
    R.taggedJoint[tj].w=jointAOrient.w;
  }
}
