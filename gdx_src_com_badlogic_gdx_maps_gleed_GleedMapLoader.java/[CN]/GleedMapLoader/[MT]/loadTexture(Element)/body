{
  TextureMapObject texture=new TextureMapObject();
  loadObject(item,texture);
  texture.setColor(loadColor(item.getChildByName("TintColor")));
  TextureRegion region;
  if (atlasFile.isEmpty()) {
    String[] pathParts=item.getChildByName("texture_filename").getText().split("\\\\");
    region=new TextureRegion(assetManager.get(pathRoot + "/" + pathParts[pathParts.length - 1],Texture.class));
  }
 else {
    String[] assetParts=item.getChildByName("asset_name").getText().split("\\\\");
    region=new TextureRegion(atlas.findRegion(assetParts[assetParts.length - 1]));
  }
  region.flip(Boolean.parseBoolean(item.getChildByName("FlipHorizontally").getText()),Boolean.parseBoolean(item.getChildByName("FlipVertically").getText()));
  texture.setTextureRegion(region);
  Element positionElement=item.getChildByName("Position");
  texture.setX(Float.parseFloat(positionElement.getChildByName("X").getText()));
  texture.setY(-Float.parseFloat(positionElement.getChildByName("Y").getText()));
  Element origin=item.getChildByName("Origin");
  texture.setOriginX(Float.parseFloat(origin.getChildByName("X").getText()));
  texture.setOriginY(Float.parseFloat(origin.getChildByName("Y").getText()));
  Element scale=item.getChildByName("Scale");
  texture.setScaleX(Float.parseFloat(scale.getChildByName("X").getText()));
  texture.setScaleY(Float.parseFloat(scale.getChildByName("Y").getText()));
  texture.setRotation(Float.parseFloat(item.getChildByName("Rotation").getText()));
  return texture;
}
