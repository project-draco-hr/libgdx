{
  this.settings=settings;
  this.inputDir=inputDir;
  this.filter=filter;
  minWidth=filter.width != -1 ? filter.width : settings.minWidth;
  minHeight=filter.height != -1 ? filter.height : settings.minHeight;
  maxWidth=filter.width != -1 ? filter.width : settings.maxWidth;
  maxHeight=filter.height != -1 ? filter.height : settings.maxHeight;
  xPadding=images.size() > 1 && filter.direction != Direction.x && filter.direction != Direction.xy ? settings.padding : 0;
  yPadding=images.size() > 1 && filter.direction != Direction.y && filter.direction != Direction.xy ? settings.padding : 0;
  File[] files=inputDir.listFiles(filter);
  if (files == null)   return;
  for (  File file : files) {
    if (file.isDirectory())     continue;
    Image image=squeeze(file);
    if (image != null)     images.add(image);
  }
  if (images.isEmpty())   return;
  System.out.println(inputDir);
  if (filter.format != null)   System.out.println("Format: " + filter.format);
 else   System.out.println("Format: " + settings.defaultFormat + " (default)");
  if (filter.minFilter != null && filter.magFilter != null)   System.out.println("Filter: " + filter.minFilter + ", "+ filter.magFilter);
 else   System.out.println("Filter: " + settings.defaultFilterMin + ", "+ settings.defaultFilterMag+ " (default)");
  if (filter.direction != Direction.none)   System.out.println("Repeat: " + filter.direction);
  outputDir.mkdirs();
  String prefix=inputDir.getName();
  writer=new FileWriter(packFile,true);
  try {
    while (!images.isEmpty())     writePage(prefix,outputDir);
    if (writer != null) {
      System.out.println("Pixels eliminated: " + (1 - compressedSize / (float)uncompressedSize) * 100 + "%");
      System.out.println();
    }
  }
  finally {
    writer.close();
  }
}
