{
  BufferedImage source=ImageIO.read(file);
  if (source == null)   return null;
  uncompressedSize+=source.getWidth() * source.getHeight();
  WritableRaster alphaRaster=source.getAlphaRaster();
  if (alphaRaster == null)   return new Image(file,source,0,0,source.getWidth(),source.getHeight());
  final byte[] a=new byte[1];
  int top=0;
  outer:   for (int y=0; y < source.getHeight(); y++) {
    for (int x=0; x < source.getWidth(); x++) {
      alphaRaster.getDataElements(x,y,a);
      int alpha=a[0];
      if (alpha < 0)       alpha+=256;
      if (alpha > alphaThreshold)       break outer;
    }
    top++;
  }
  int bottom=source.getHeight() - 1;
  outer:   for (int y=source.getHeight(); --y >= top; ) {
    for (int x=0; x < source.getWidth(); x++) {
      alphaRaster.getDataElements(x,y,a);
      int alpha=a[0];
      if (alpha < 0)       alpha+=256;
      if (alpha > alphaThreshold)       break outer;
    }
    bottom--;
  }
  int left=0;
  outer:   for (int x=0; x < source.getWidth(); x++) {
    for (int y=top; y <= bottom; y++) {
      alphaRaster.getDataElements(x,y,a);
      int alpha=a[0];
      if (alpha < 0)       alpha+=256;
      if (alpha > alphaThreshold)       break outer;
    }
    left++;
  }
  int right=source.getWidth() - 1;
  outer:   for (int x=source.getWidth(); --x >= left; ) {
    for (int y=top; y <= bottom; y++) {
      alphaRaster.getDataElements(x,y,a);
      int alpha=a[0];
      if (alpha < 0)       alpha+=256;
      if (alpha > alphaThreshold)       break outer;
    }
    right--;
  }
  int newWidth=right - left;
  int newHeight=bottom - top;
  if (newWidth <= 0 || newHeight <= 0) {
    System.out.println("Ignoring blank input image: " + file.getAbsolutePath());
    return null;
  }
  return new Image(file,source,left,top,newWidth,newHeight);
}
