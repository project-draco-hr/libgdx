{
  if (mesh.usesFixedPoint())   throw new IllegalArgumentException("Mesh must use floats");
  if (mesh.getMaxIndices() > 0 && mesh.getNumIndices() % 3 != 0)   throw new IllegalArgumentException("Mesh must hold triangles");
  if (mesh.getMaxIndices() == 0 && mesh.getNumVertices() % 3 != 0)   throw new IllegalArgumentException("Mesh must hold triangles");
  VertexAttribute position=mesh.getVertexAttribute(Usage.Position);
  if (position == null)   throw new IllegalArgumentException("Ill-shaped mesh, does not have a position vertex attribute");
  if (position.numComponents != 3)   throw new IllegalArgumentException("Vertex coordinates must be three dimensional");
  numTriangles=mesh.getMaxIndices() > 0 ? mesh.getNumIndices() / 3 : mesh.getNumVertices() / 3;
  triangles=new float[3 * 3 * numTriangles];
  planes=new float[4 * numTriangles];
  isClockWise=clockWise;
  if (mesh.getMaxIndices() > 0)   fillFromIndexedMesh(position,mesh);
 else   fillFromMesh(position,mesh);
  calculatePlanes(clockWise);
}
