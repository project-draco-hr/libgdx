{
  if (sampleRate == 44100)   return samples;
  float idxInc=sampleRate / 44100;
  int numSamples=(int)((samples.length / (float)sampleRate) * 44100);
  if (!isMono && numSamples % 2 != 0)   numSamples--;
  float[] newSamples=new float[numSamples];
  if (isMono) {
    float idx=0;
    for (int i=0; i < newSamples.length; i++) {
      int intIdx=(int)idx;
      if (intIdx >= samples.length - 1)       break;
      float value=samples[intIdx] + samples[intIdx + 1];
      value/=2;
      if (value > 1)       value=1;
      if (value < -1)       value=-1;
      newSamples[i]=value;
      idx+=idxInc;
    }
  }
 else {
    float idx=0;
    for (int i=0; i < newSamples.length; i+=2) {
      int intIdxL=(int)idx * 2;
      int intIdxR=(int)idx * 2 + 1;
      if (intIdxL >= samples.length - 2)       break;
      float value=samples[intIdxL] + samples[intIdxL + 2];
      value/=2;
      if (value > 1)       value=1;
      if (value < -1)       value=-1;
      newSamples[i]=value;
      value=samples[intIdxR] + samples[intIdxR + 2];
      value/=2;
      if (value > 1)       value=1;
      if (value < -1)       value=-1;
      newSamples[i + 1]=value;
      idx+=idxInc;
    }
  }
  return newSamples;
}
