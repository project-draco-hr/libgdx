{
  if (segments <= 0)   throw new IllegalArgumentException("segments must be > 0.");
  if (currType != ShapeType.Filled && currType != ShapeType.Line)   throw new GdxRuntimeException("Must call begin(ShapeType.Filled) or begin(ShapeType.Line)");
  checkDirty();
  checkFlush(segments * 3);
  float angle=2 * 3.1415927f / segments;
  float cx=x + width / 2, cy=y + height / 2;
  if (currType == ShapeType.Line) {
    for (int i=0; i < segments; i++) {
      renderer.color(color.r,color.g,color.b,color.a);
      renderer.vertex(cx + (width * 0.5f * MathUtils.cos(i * angle)),cy + (height * 0.5f * MathUtils.sin(i * angle)),0);
      renderer.color(color.r,color.g,color.b,color.a);
      renderer.vertex(cx + (width * 0.5f * MathUtils.cos((i + 1) * angle)),cy + (height * 0.5f * MathUtils.sin((i + 1) * angle)),0);
    }
  }
 else {
    for (int i=0; i < segments; i++) {
      renderer.color(color.r,color.g,color.b,color.a);
      renderer.vertex(cx + (width * 0.5f * MathUtils.cos(i * angle)),cy + (height * 0.5f * MathUtils.sin(i * angle)),0);
      renderer.color(color.r,color.g,color.b,color.a);
      renderer.vertex(cx,cy,0);
      renderer.color(color.r,color.g,color.b,color.a);
      renderer.vertex(cx + (width * 0.5f * MathUtils.cos((i + 1) * angle)),cy + (height * 0.5f * MathUtils.sin((i + 1) * angle)),0);
    }
  }
}
