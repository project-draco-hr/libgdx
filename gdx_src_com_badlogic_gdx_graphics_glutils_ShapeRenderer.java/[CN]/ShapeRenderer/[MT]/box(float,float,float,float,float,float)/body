{
  if (currType != ShapeType.Filled && currType != ShapeType.Line)   throw new GdxRuntimeException("Must call begin(ShapeType.Filled) or begin(ShapeType.Line)");
  checkDirty();
  depth=-depth;
  if (currType == ShapeType.Line) {
    checkFlush(24);
    renderer.color(color);
    renderer.vertex(x,y,z);
    renderer.color(color);
    renderer.vertex(x + width,y,z);
    renderer.color(color);
    renderer.vertex(x + width,y,z);
    renderer.color(color);
    renderer.vertex(x + width,y,z + depth);
    renderer.color(color);
    renderer.vertex(x + width,y,z + depth);
    renderer.color(color);
    renderer.vertex(x,y,z + depth);
    renderer.color(color);
    renderer.vertex(x,y,z + depth);
    renderer.color(color);
    renderer.vertex(x,y,z);
    renderer.color(color);
    renderer.vertex(x,y,z);
    renderer.color(color);
    renderer.vertex(x,y + height,z);
    renderer.color(color);
    renderer.vertex(x,y + height,z);
    renderer.color(color);
    renderer.vertex(x + width,y + height,z);
    renderer.color(color);
    renderer.vertex(x + width,y + height,z);
    renderer.color(color);
    renderer.vertex(x + width,y + height,z + depth);
    renderer.color(color);
    renderer.vertex(x + width,y + height,z + depth);
    renderer.color(color);
    renderer.vertex(x,y + height,z + depth);
    renderer.color(color);
    renderer.vertex(x,y + height,z + depth);
    renderer.color(color);
    renderer.vertex(x,y + height,z);
    renderer.color(color);
    renderer.vertex(x + width,y,z);
    renderer.color(color);
    renderer.vertex(x + width,y + height,z);
    renderer.color(color);
    renderer.vertex(x + width,y,z + depth);
    renderer.color(color);
    renderer.vertex(x + width,y + height,z + depth);
    renderer.color(color);
    renderer.vertex(x,y,z + depth);
    renderer.color(color);
    renderer.vertex(x,y + height,z + depth);
  }
 else {
    checkFlush(36);
    renderer.color(color);
    renderer.vertex(x,y,z);
    renderer.color(color);
    renderer.vertex(x + width,y,z);
    renderer.color(color);
    renderer.vertex(x + width,y + height,z);
    renderer.color(color);
    renderer.vertex(x,y,z);
    renderer.color(color);
    renderer.vertex(x + width,y + height,z);
    renderer.color(color);
    renderer.vertex(x,y + height,z);
    renderer.color(color);
    renderer.vertex(x + width,y,z + depth);
    renderer.color(color);
    renderer.vertex(x,y,z + depth);
    renderer.color(color);
    renderer.vertex(x + width,y + height,z + depth);
    renderer.color(color);
    renderer.vertex(x,y + height,z + depth);
    renderer.color(color);
    renderer.vertex(x,y,z + depth);
    renderer.color(color);
    renderer.vertex(x + width,y + height,z + depth);
    renderer.color(color);
    renderer.vertex(x,y,z + depth);
    renderer.color(color);
    renderer.vertex(x,y,z);
    renderer.color(color);
    renderer.vertex(x,y + height,z);
    renderer.color(color);
    renderer.vertex(x,y,z + depth);
    renderer.color(color);
    renderer.vertex(x,y + height,z);
    renderer.color(color);
    renderer.vertex(x,y + height,z + depth);
    renderer.color(color);
    renderer.vertex(x + width,y,z);
    renderer.color(color);
    renderer.vertex(x + width,y,z + depth);
    renderer.color(color);
    renderer.vertex(x + width,y + height,z + depth);
    renderer.color(color);
    renderer.vertex(x + width,y,z);
    renderer.color(color);
    renderer.vertex(x + width,y + height,z + depth);
    renderer.color(color);
    renderer.vertex(x + width,y + height,z);
    renderer.color(color);
    renderer.vertex(x,y + height,z);
    renderer.color(color);
    renderer.vertex(x + width,y + height,z);
    renderer.color(color);
    renderer.vertex(x + width,y + height,z + depth);
    renderer.color(color);
    renderer.vertex(x,y + height,z);
    renderer.color(color);
    renderer.vertex(x + width,y + height,z + depth);
    renderer.color(color);
    renderer.vertex(x,y + height,z + depth);
    renderer.color(color);
    renderer.vertex(x,y,z + depth);
    renderer.color(color);
    renderer.vertex(x + width,y,z + depth);
    renderer.color(color);
    renderer.vertex(x + width,y,z);
    renderer.color(color);
    renderer.vertex(x,y,z + depth);
    renderer.color(color);
    renderer.vertex(x + width,y,z);
    renderer.color(color);
    renderer.vertex(x,y,z);
  }
}
