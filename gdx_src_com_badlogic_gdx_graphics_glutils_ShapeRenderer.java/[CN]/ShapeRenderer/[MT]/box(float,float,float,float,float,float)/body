{
  depth=-depth;
  if (shapeType == ShapeType.Line) {
    check(ShapeType.Line,ShapeType.Filled,24);
    renderer.color(color);
    renderer.vertex(x,y,z);
    renderer.color(color);
    renderer.vertex(x + width,y,z);
    renderer.color(color);
    renderer.vertex(x + width,y,z);
    renderer.color(color);
    renderer.vertex(x + width,y,z + depth);
    renderer.color(color);
    renderer.vertex(x + width,y,z + depth);
    renderer.color(color);
    renderer.vertex(x,y,z + depth);
    renderer.color(color);
    renderer.vertex(x,y,z + depth);
    renderer.color(color);
    renderer.vertex(x,y,z);
    renderer.color(color);
    renderer.vertex(x,y,z);
    renderer.color(color);
    renderer.vertex(x,y + height,z);
    renderer.color(color);
    renderer.vertex(x,y + height,z);
    renderer.color(color);
    renderer.vertex(x + width,y + height,z);
    renderer.color(color);
    renderer.vertex(x + width,y + height,z);
    renderer.color(color);
    renderer.vertex(x + width,y + height,z + depth);
    renderer.color(color);
    renderer.vertex(x + width,y + height,z + depth);
    renderer.color(color);
    renderer.vertex(x,y + height,z + depth);
    renderer.color(color);
    renderer.vertex(x,y + height,z + depth);
    renderer.color(color);
    renderer.vertex(x,y + height,z);
    renderer.color(color);
    renderer.vertex(x + width,y,z);
    renderer.color(color);
    renderer.vertex(x + width,y + height,z);
    renderer.color(color);
    renderer.vertex(x + width,y,z + depth);
    renderer.color(color);
    renderer.vertex(x + width,y + height,z + depth);
    renderer.color(color);
    renderer.vertex(x,y,z + depth);
    renderer.color(color);
    renderer.vertex(x,y + height,z + depth);
  }
 else {
    check(ShapeType.Line,ShapeType.Filled,36);
    renderer.color(color);
    renderer.vertex(x,y,z);
    renderer.color(color);
    renderer.vertex(x + width,y,z);
    renderer.color(color);
    renderer.vertex(x + width,y + height,z);
    renderer.color(color);
    renderer.vertex(x,y,z);
    renderer.color(color);
    renderer.vertex(x + width,y + height,z);
    renderer.color(color);
    renderer.vertex(x,y + height,z);
    renderer.color(color);
    renderer.vertex(x + width,y,z + depth);
    renderer.color(color);
    renderer.vertex(x,y,z + depth);
    renderer.color(color);
    renderer.vertex(x + width,y + height,z + depth);
    renderer.color(color);
    renderer.vertex(x,y + height,z + depth);
    renderer.color(color);
    renderer.vertex(x,y,z + depth);
    renderer.color(color);
    renderer.vertex(x + width,y + height,z + depth);
    renderer.color(color);
    renderer.vertex(x,y,z + depth);
    renderer.color(color);
    renderer.vertex(x,y,z);
    renderer.color(color);
    renderer.vertex(x,y + height,z);
    renderer.color(color);
    renderer.vertex(x,y,z + depth);
    renderer.color(color);
    renderer.vertex(x,y + height,z);
    renderer.color(color);
    renderer.vertex(x,y + height,z + depth);
    renderer.color(color);
    renderer.vertex(x + width,y,z);
    renderer.color(color);
    renderer.vertex(x + width,y,z + depth);
    renderer.color(color);
    renderer.vertex(x + width,y + height,z + depth);
    renderer.color(color);
    renderer.vertex(x + width,y,z);
    renderer.color(color);
    renderer.vertex(x + width,y + height,z + depth);
    renderer.color(color);
    renderer.vertex(x + width,y + height,z);
    renderer.color(color);
    renderer.vertex(x,y + height,z);
    renderer.color(color);
    renderer.vertex(x + width,y + height,z);
    renderer.color(color);
    renderer.vertex(x + width,y + height,z + depth);
    renderer.color(color);
    renderer.vertex(x,y + height,z);
    renderer.color(color);
    renderer.vertex(x + width,y + height,z + depth);
    renderer.color(color);
    renderer.vertex(x,y + height,z + depth);
    renderer.color(color);
    renderer.vertex(x,y,z + depth);
    renderer.color(color);
    renderer.vertex(x + width,y,z + depth);
    renderer.color(color);
    renderer.vertex(x + width,y,z);
    renderer.color(color);
    renderer.vertex(x,y,z + depth);
    renderer.color(color);
    renderer.vertex(x + width,y,z);
    renderer.color(color);
    renderer.vertex(x,y,z);
  }
}
