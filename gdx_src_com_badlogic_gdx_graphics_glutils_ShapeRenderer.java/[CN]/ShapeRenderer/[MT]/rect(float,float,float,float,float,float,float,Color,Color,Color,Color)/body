{
  if (currType != ShapeType.Filled && currType != ShapeType.Line)   throw new GdxRuntimeException("Must call begin(ShapeType.Filled) or begin(ShapeType.Line)");
  checkDirty();
  checkFlush(8);
  float r=(float)Math.toRadians(rotation);
  float c=(float)Math.cos(r);
  float s=(float)Math.sin(r);
  float x1, y1, x2, y2, x3, y3, x4, y4;
  x1=x + c * (0 - originX) + -s * (0 - originY) + originX;
  y1=y + s * (0 - originX) + c * (0 - originY) + originY;
  x2=x + c * (width - originX) + -s * (0 - originY) + originX;
  y2=y + s * (width - originX) + c * (0 - originY) + originY;
  x3=x + c * (width - originX) + -s * (height - originY) + originX;
  y3=y + s * (width - originX) + c * (height - originY) + originY;
  x4=x + c * (0 - originX) + -s * (height - originY) + originX;
  y4=y + s * (0 - originX) + c * (height - originY) + originY;
  if (currType == ShapeType.Line) {
    renderer.color(col1.r,col1.g,col1.b,col1.a);
    renderer.vertex(x1,y1,0);
    renderer.color(col2.r,col2.g,col2.b,col2.a);
    renderer.vertex(x2,y2,0);
    renderer.color(col2.r,col2.g,col2.b,col2.a);
    renderer.vertex(x2,y2,0);
    renderer.color(col3.r,col3.g,col3.b,col3.a);
    renderer.vertex(x3,y3,0);
    renderer.color(col3.r,col3.g,col3.b,col3.a);
    renderer.vertex(x3,y3,0);
    renderer.color(col4.r,col4.g,col4.b,col4.a);
    renderer.vertex(x4,y4,0);
    renderer.color(col4.r,col4.g,col4.b,col4.a);
    renderer.vertex(x4,y4,0);
    renderer.color(col1.r,col1.g,col1.b,col1.a);
    renderer.vertex(x1,y1,0);
  }
 else {
    renderer.color(col1.r,col1.g,col1.b,col1.a);
    renderer.vertex(x1,y1,0);
    renderer.color(col2.r,col2.g,col2.b,col2.a);
    renderer.vertex(x2,y2,0);
    renderer.color(col3.r,col3.g,col3.b,col3.a);
    renderer.vertex(x3,y3,0);
    renderer.color(col3.r,col3.g,col3.b,col3.a);
    renderer.vertex(x3,y3,0);
    renderer.color(col4.r,col4.g,col4.b,col4.a);
    renderer.vertex(x4,y4,0);
    renderer.color(col1.r,col1.g,col1.b,col1.a);
    renderer.vertex(x1,y1,0);
  }
}
