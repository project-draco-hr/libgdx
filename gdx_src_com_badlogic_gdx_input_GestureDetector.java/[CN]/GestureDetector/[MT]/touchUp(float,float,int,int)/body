{
  final Pointer pt=getPointerById(pointer);
  if (pt == null || pt.id < 0)   return false;
  --pointersCount;
  pt.touchUp();
  if (inTapSquare && !isWithinTapSquare(x,y,tapSquareCenterX,tapSquareCenterY))   inTapSquare=false;
  boolean wasPanning=panning;
  panning=false;
  longPressTask.cancel();
  if (longPressFired)   return false;
  if (inTapSquare) {
    if (lastTapButton != button || lastTapPointer != pointer || TimeUtils.nanoTime() - lastTapTime > tapCountInterval || !isWithinTapSquare(x,y,lastTapX,lastTapY))     tapCount=0;
    tapCount++;
    lastTapTime=TimeUtils.nanoTime();
    lastTapX=x;
    lastTapY=y;
    lastTapButton=button;
    lastTapPointer=pointer;
    gestureStartTime=0;
    return listener.tap(x,y,tapCount,button);
  }
  if (pinching) {
    pinching=false;
    panning=true;
    if (pointer1.id < 0) {
      tracker.start(pointer2.pos.x,pointer2.pos.y,Gdx.input.getCurrentEventTime());
    }
 else {
      tracker.start(pointer1.pos.x,pointer1.pos.y,Gdx.input.getCurrentEventTime());
    }
    return false;
  }
  boolean handled=false;
  if (wasPanning && !panning)   handled=listener.panStop(x,y,pointer,button);
  gestureStartTime=0;
  long time=Gdx.input.getCurrentEventTime();
  if (time - tracker.lastTime < maxFlingDelay) {
    tracker.update(x,y,time);
    handled=listener.fling(tracker.getVelocityX(),tracker.getVelocityY(),button) || handled;
  }
  return handled;
}
