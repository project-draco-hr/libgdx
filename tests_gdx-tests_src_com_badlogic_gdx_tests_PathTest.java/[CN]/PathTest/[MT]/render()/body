{
  GL20 gl=Gdx.graphics.getGL20();
  gl.glClearColor(0.7f,0.7f,0.7f,1);
  gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
  if (wait > 0)   wait-=Gdx.graphics.getDeltaTime();
 else {
    t+=speed * Gdx.graphics.getDeltaTime();
    zt+=zspeed * Gdx.graphics.getDeltaTime();
    while (t >= 1f) {
      currentPath=(currentPath + 1) % paths.size;
      if (currentPath == 0) {
        zigzag=!zigzag;
        zt=0;
      }
      t-=1f;
    }
    paths.get(currentPath).valueAt(tmpV,t);
    paths.get(currentPath).derivativeAt(tmpV2,t);
    obj.setRotation(tmpV2.angle());
    if (zigzag) {
      tmpV2.nor();
      tmpV2.set(-tmpV2.y,tmpV2.x);
      tmpV2.scl((float)Math.sin(zt) * ZIGZAG_SCALE);
      tmpV.add(tmpV2);
    }
    obj.setPosition(tmpV.x,tmpV.y);
  }
  renderer.begin(spriteBatch.getProjectionMatrix(),GL20.GL_LINE_STRIP);
  float val=0f;
  while (val <= 1f) {
    renderer.color(0f,0f,0f,1f);
    paths.get(currentPath).valueAt(tmpV,val);
    renderer.vertex(tmpV.x,tmpV.y,0);
    val+=SAMPLE_POINT_DISTANCE;
  }
  renderer.end();
  spriteBatch.begin();
  obj.draw(spriteBatch);
  spriteBatch.end();
}
