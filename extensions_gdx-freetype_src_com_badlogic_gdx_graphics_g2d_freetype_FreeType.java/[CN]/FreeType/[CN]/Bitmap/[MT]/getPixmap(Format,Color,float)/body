{
  int width=getWidth(), rows=getRows();
  ByteBuffer src=getBuffer();
  Pixmap pixmap;
  int srcPitch=getPitch();
  if (color == Color.WHITE && srcPitch == 1 && gamma == 1) {
    pixmap=new Pixmap(width,rows,Format.Alpha);
    BufferUtils.copy(src,pixmap.getPixels(),pixmap.getPixels().capacity());
  }
 else {
    pixmap=new Pixmap(width,rows,Format.RGBA8888);
    int srcRGBA=Color.rgba8888(color);
    IntBuffer dst=pixmap.getPixels().asIntBuffer();
    for (int y=0; y < rows; y++) {
      int ySrcPitch=y * srcPitch;
      int yWidth=y * width;
      for (int x=0; x < width; x++) {
        float alpha=(src.get(ySrcPitch + x) & 0xff) / 255f;
        alpha=(float)Math.pow(alpha,gamma);
        dst.put(yWidth + x,(srcRGBA & 0xffffff00) | (int)((srcRGBA & 0xff) * alpha));
      }
    }
  }
  Pixmap converted=pixmap;
  if (format != pixmap.getFormat()) {
    converted=new Pixmap(pixmap.getWidth(),pixmap.getHeight(),format);
    Blending blending=Pixmap.getBlending();
    Pixmap.setBlending(Blending.None);
    converted.drawPixmap(pixmap,0,0);
    Pixmap.setBlending(blending);
    pixmap.dispose();
  }
  return converted;
}
