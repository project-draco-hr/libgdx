{
  FreetypeBuild.main(args);
  new SharedLibraryLoader("libs/gdx-freetype-natives.jar").load("gdx-freetype");
  String chars="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890\"!`?'.,;:()[]{}<>|/@\\^$-%+=#_&~*????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????";
  Library library=FreeType.initFreeType();
  Face face=FreeType.newFace(library,new FileHandle("arial.ttf"),0);
  FreeType.setPixelSizes(face,0,15);
  SizeMetrics faceMetrics=face.getSize().getMetrics();
  System.out.println(toInt(faceMetrics.getAscender()) + ", " + toInt(faceMetrics.getDescender())+ ", "+ toInt(faceMetrics.getHeight()));
  for (int i=0; i < chars.length(); i++) {
    if (!FreeType.loadGlyph(face,FreeType.getCharIndex(face,chars.charAt(i)),0))     continue;
    if (!FreeType.renderGlyph(face.getGlyph(),FT_RENDER_MODE_NORMAL))     continue;
    Bitmap bitmap=face.getGlyph().getBitmap();
    GlyphMetrics glyphMetrics=face.getGlyph().getMetrics();
    System.out.println(toInt(glyphMetrics.getHoriBearingX()) + ", " + toInt(glyphMetrics.getHoriBearingY()));
    System.out.println(toInt(glyphMetrics.getWidth()) + ", " + toInt(glyphMetrics.getHeight())+ ", "+ toInt(glyphMetrics.getHoriAdvance()));
    System.out.println(bitmap.getWidth() + ", " + bitmap.getRows()+ ", "+ bitmap.getPitch()+ ", "+ bitmap.getNumGray());
    for (int y=0; y < bitmap.getRows(); y++) {
      for (int x=0; x < bitmap.getWidth(); x++) {
        System.out.print(bitmap.getBuffer().get(x + bitmap.getPitch() * y) != 0 ? "X" : " ");
      }
      System.out.println();
    }
  }
  FreeType.doneFace(face);
  FreeType.doneFreeType(library);
}
