{
  final float rotation=-this.rotation;
  final float scaleX=this.scaleX;
  final float scaleY=this.scaleY;
  final float x=this.x;
  final float y=this.y;
  if (rotation == 0) {
    if (scaleX == 1 && scaleY == 1) {
      localCoords.x+=x;
      localCoords.y+=y;
    }
 else {
      final float originX=this.originX;
      final float originY=this.originY;
      localCoords.x=(localCoords.x - originX) * scaleX + originX + x;
      localCoords.y=(localCoords.y - originY) * scaleY + originY + y;
    }
  }
 else {
    final float cos=(float)Math.cos(rotation * MathUtils.degreesToRadians);
    final float sin=(float)Math.sin(rotation * MathUtils.degreesToRadians);
    final float originX=this.originX;
    final float originY=this.originY;
    final float tox=localCoords.x - originX;
    final float toy=localCoords.y - originY;
    localCoords.x=(tox * cos + toy * sin) * scaleX + originX + x;
    localCoords.y=(tox * -sin + toy * cos) * scaleY + originY + y;
  }
  return localCoords;
}
