{
  List<String> versions=ParseUtils.parseBlockAsList(str,"versions");
  int versionIdx=versions.indexOf(version);
  MouseListener mouseListener=new MouseAdapter(){
    @Override public void mousePressed(    MouseEvent e){
      if (Desktop.isDesktopSupported()) {
        try {
          URI uri=new URI("http://code.google.com/p/libgdx/");
          Desktop.getDesktop().browse(uri);
        }
 catch (        IOException ex) {
        }
catch (        URISyntaxException ex) {
        }
      }
    }
  }
;
  if (versionIdx == 0) {
    versionLabel.setText("v" + version + " (ok)");
    Style.registerCssClasses(versionLabel,".versionLabelNoUpdate");
    Style.apply(versionLabel,new Style(Res.getUrl("css/style.css")));
  }
 else   if (versionIdx > 0) {
    versionLabel.setText("v" + version + " (update!)");
    versionLabel.addMouseListener(mouseListener);
    versionLabel.setToolTipText("Update found: v" + versions.get(0));
    Style.registerCssClasses(versionLabel,".versionLabelUpdateFound");
    Style.apply(versionLabel,new Style(Res.getUrl("css/style.css")));
  }
 else {
    versionLabel.setText("v" + version + " (error2)");
    Style.registerCssClasses(versionLabel,".versionLabelError");
    Style.apply(versionLabel,new Style(Res.getUrl("css/style.css")));
  }
}
