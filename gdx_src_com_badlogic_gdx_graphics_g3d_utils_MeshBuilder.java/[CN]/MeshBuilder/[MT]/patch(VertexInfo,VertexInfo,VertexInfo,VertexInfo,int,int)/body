{
  for (int u=0; u <= divisionsU; u++) {
    final float alphaU=(float)u / (float)divisionsU;
    vertTmp5.set(corner00).lerp(corner10,alphaU);
    vertTmp6.set(corner01).lerp(corner11,alphaU);
    for (int v=0; v <= divisionsV; v++) {
      final short idx=vertex(vertTmp7.set(vertTmp5).lerp(vertTmp6,(float)v / (float)divisionsV));
      if (u > 0 && v > 0)       rect((short)(idx - divisionsV - 1),(short)(idx - 1),idx,(short)(idx - divisionsV));
    }
  }
}
