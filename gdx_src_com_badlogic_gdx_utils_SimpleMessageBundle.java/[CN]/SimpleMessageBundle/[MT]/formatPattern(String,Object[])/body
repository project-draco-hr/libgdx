{
  buffer.setLength(0);
  boolean hasPlaceholders=false;
  boolean hasQuotes=false;
  int placeholder=-1;
  boolean inQuote=false;
  int patternLength=pattern.length();
  for (int i=0; i < patternLength; ++i) {
    char ch=pattern.charAt(i);
    if (placeholder < 0) {
      if (ch == '\'') {
        hasQuotes=true;
        if (i + 1 < patternLength && pattern.charAt(i + 1) == '\'') {
          buffer.append(ch);
          ++i;
        }
 else {
          inQuote=!inQuote;
        }
      }
 else       if (ch == '{' && !inQuote) {
        hasPlaceholders=true;
        placeholder=0;
      }
 else {
        buffer.append(ch);
      }
    }
 else {
      if (ch == '}') {
        if (placeholder >= args.length)         throw new IllegalArgumentException("Out of bounds argument number:" + placeholder);
        if (args[placeholder] == null)         buffer.append("null");
 else         buffer.append(args[placeholder].toString());
        placeholder=-1;
      }
 else {
        if (ch < '0' || ch > '9')         throw new IllegalArgumentException("Unexpected '" + ch + "' while parsing argument number");
        placeholder=placeholder * 10 + (ch - '0');
      }
    }
  }
  if (placeholder >= 0)   throw new IllegalArgumentException("Unmatched braces in the pattern.");
  return hasPlaceholders || hasQuotes ? buffer.toString() : pattern;
}
