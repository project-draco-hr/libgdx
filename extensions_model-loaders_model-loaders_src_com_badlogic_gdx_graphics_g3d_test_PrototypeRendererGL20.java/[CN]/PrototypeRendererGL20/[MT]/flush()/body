{
  for (int i=0; i < modelQueue.size; i++) {
    final StillModelInstance instance=modelInstances.items[i];
    final Vector3 center=instance.getSortCenter();
    lightManager.calculateLights(center.x,center.y,center.z);
    final Matrix4 modelMatrix=instance.getTransform();
    normalMatrix.set(modelMatrix);
    final Model model=modelQueue.items[i];
    final SubMesh subMeshes[]=model.getSubMeshes();
    final Material materials[]=instance.getMaterials();
    boolean matrixChanged=true;
    for (int j=0; j < subMeshes.length; j++) {
      final SubMesh subMesh=subMeshes[j];
      final Material material=materials != null ? materials[j] : subMesh.material;
      if (bindShader(material) || matrixChanged) {
        currentShader.setUniformMatrix("u_normalMatrix",normalMatrix,false);
        currentShader.setUniformMatrix("u_modelMatrix",modelMatrix,false);
      }
      if (material != currentMaterial) {
        currentMaterial=material;
        currentMaterial.bind(currentShader);
      }
      subMesh.getMesh().render(currentShader,subMesh.primitiveType);
    }
    currentShader.end();
    currentShader=null;
  }
  modelQueue.clear();
  modelInstances.clear();
  drawing=false;
}
