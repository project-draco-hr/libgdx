{
  drawing=false;
  for (int i=0; i < animatedModelQueue.size; i++) {
    final AnimatedModelInstance instance=animatedModelInstances.items[i];
    final String name=instance.getAnimation();
    final float time=instance.getAnimationTime();
    boolean looping=instance.isLooping();
    final AnimatedModel model=animatedModelQueue.items[i];
    model.setAnimation(name,time,looping);
    modelQueue.add(model);
  }
  animatedModelQueue.clear();
  animatedModelInstances.clear();
  for (int i=0; i < modelQueue.size; i++) {
    final StillModelInstance instance=stillModelInstances.items[i];
    final Matrix4 modelMatrix=instance.getTransform();
    final Vector3 center=instance.getSortCenter();
    final Model model=modelQueue.items[i];
    final SubMesh subMeshes[]=model.getSubMeshes();
    final Material materials[]=instance.getMaterials();
    final int len=subMeshes.length;
    for (int j=0; j < len; j++) {
      final SubMesh subMesh=subMeshes[j];
      final Material material=materials != null ? materials[j] : subMesh.material;
      bindShader(material,modelMatrix,center);
      if (material != currentMaterial) {
        currentMaterial=material;
        currentMaterial.bind(currentShader);
      }
      subMesh.getMesh().render(currentShader,subMesh.primitiveType);
    }
  }
  currentMaterial=null;
  if (currentShader != null) {
    currentShader.end();
    currentShader=null;
  }
  modelQueue.clear();
  stillModelInstances.clear();
}
