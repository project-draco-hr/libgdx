{
  this.model=model;
  modelHash=model.hashCode();
  System.arraycopy(instance.getTransform().val,0,transform.val,0,16);
  sortCenter.set(instance.getSortCenter());
  distance=(int)(PRIORITY_DISCRETE_STEPS * sortCenter.dst(cam.position));
  if (instance.getMaterials() != null) {
    for (    Material material : instance.getMaterials()) {
      final Material copy=materialPool.obtain();
      copy.setPooled(material);
      materials.add(copy);
    }
  }
 else {
    for (    SubMesh subMesh : model.getSubMeshes()) {
      final Material material=subMesh.material;
      final Material copy=materialPool.obtain();
      copy.setPooled(material);
      materials.add(copy);
    }
  }
  blending=false;
  for (  Material mat : materials) {
    if (mat.isNeedBlending()) {
      blending=true;
      break;
    }
  }
  if (materials.size > 0)   firstShaderHash=materials.get(0).getShader().hashCode();
}
