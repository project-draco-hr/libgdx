{
  addListener(clickListener=new ClickListener(){
    public void clicked(    InputEvent event,    float x,    float y){
      Node node=getNodeAt(y);
      if (node == null)       return;
      if (node != getNodeAt(getTouchDownY()))       return;
      if (selection.getMultiple() && selection.hasItems() && UIUtils.shift()) {
        if (rangeStart == null)         rangeStart=node;
        Node rangeStart=Tree.this.rangeStart;
        if (!UIUtils.ctrl())         selection.clear();
        float start=rangeStart.actor.getY(), end=node.actor.getY();
        if (start > end)         selectNodes(rootNodes,end,start,true);
 else         selectNodes(rootNodes,start,end,true);
        selection.fireChangeEvent();
        Tree.this.rangeStart=rangeStart;
        return;
      }
      if (node.children.size > 0 && (!selection.getMultiple() || !UIUtils.ctrl())) {
        float rowX=node.actor.getX();
        if (node.icon != null)         rowX-=iconSpacingRight + node.icon.getMinWidth();
        if (x < rowX) {
          node.setExpanded(!node.expanded);
          return;
        }
      }
      if (!node.isSelectable())       return;
      selection.choose(node);
      if (!selection.isEmpty())       rangeStart=node;
    }
    public boolean mouseMoved(    InputEvent event,    float x,    float y){
      setOverNode(getNodeAt(y));
      return false;
    }
    public void exit(    InputEvent event,    float x,    float y,    int pointer,    Actor toActor){
      super.exit(event,x,y,pointer,toActor);
      if (toActor == null || !toActor.isDescendantOf(Tree.this))       setOverNode(null);
    }
  }
);
}
