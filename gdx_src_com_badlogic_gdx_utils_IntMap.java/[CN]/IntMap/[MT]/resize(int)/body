{
  int oldEndIndex=capacity + stashSize;
  capacity=newSize;
  threshold=(int)(newSize * loadFactor);
  mask=newSize - 1;
  hashShift=31 - Integer.numberOfTrailingZeros(newSize);
  stashCapacity=Math.max(3,(int)Math.ceil(Math.log(newSize)));
  pushIterations=Math.max(Math.min(capacity,32),(int)Math.sqrt(capacity) / 4);
  int[] oldKeyTable=keyTable;
  V[] oldValueTable=valueTable;
  keyTable=new int[newSize + stashCapacity];
  valueTable=(V[])new Object[newSize + stashCapacity];
  size=hasZeroValue ? 1 : 0;
  stashSize=0;
  for (int i=0; i < oldEndIndex; i++) {
    int key=oldKeyTable[i];
    if (key != EMPTY)     putResize(key,oldValueTable[i]);
  }
}
