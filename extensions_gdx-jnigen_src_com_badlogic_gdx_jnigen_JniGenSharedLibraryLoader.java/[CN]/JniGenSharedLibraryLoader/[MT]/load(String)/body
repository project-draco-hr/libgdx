{
  if (loadedLibraries.contains(sharedLibName))   return;
  boolean isWindows=System.getProperty("os.name").contains("Windows");
  boolean isLinux=System.getProperty("os.name").contains("Linux");
  boolean isMac=System.getProperty("os.name").contains("Mac");
  boolean isAndroid=false;
  boolean is64Bit=System.getProperty("os.arch").equals("amd64");
  String vm=System.getProperty("java.vm.name");
  if (vm != null && vm.contains("Dalvik")) {
    isAndroid=true;
    isWindows=false;
    isLinux=false;
    isMac=false;
    is64Bit=false;
  }
  boolean loaded=false;
  if (isWindows) {
    if (libraryFinder != null)     try {
      loaded=loadLibrary(libraryFinder.getSharedLibraryNameWindows(sharedLibName,is64Bit,new ZipFile(nativesJar)));
    }
 catch (    IOException e) {
      loaded=loadLibrary(libraryFinder.getSharedLibraryNameWindows(sharedLibName,is64Bit,null));
    }
 else     if (!is64Bit)     loaded=loadLibrary(sharedLibName + ".dll");
 else     loaded=loadLibrary(sharedLibName + "64.dll");
  }
  if (isLinux) {
    if (libraryFinder != null)     try {
      loaded=loadLibrary(libraryFinder.getSharedLibraryNameLinux(sharedLibName,is64Bit,new ZipFile(nativesJar)));
    }
 catch (    IOException e) {
      loaded=loadLibrary(libraryFinder.getSharedLibraryNameLinux(sharedLibName,is64Bit,null));
    }
 else     if (!is64Bit)     loaded=loadLibrary("lib" + sharedLibName + ".so");
 else     loaded=loadLibrary("lib" + sharedLibName + "64.so");
  }
  if (isMac) {
    if (libraryFinder != null)     try {
      loaded=loadLibrary(libraryFinder.getSharedLibraryNameMac(sharedLibName,new ZipFile(nativesJar)));
    }
 catch (    IOException e) {
      loaded=loadLibrary(libraryFinder.getSharedLibraryNameMac(sharedLibName,null));
    }
 else     loaded=loadLibrary("lib" + sharedLibName + ".dylib");
  }
  if (isAndroid) {
    if (libraryFinder != null)     try {
      System.loadLibrary(libraryFinder.getSharedLibraryNameAndroid(sharedLibName,new ZipFile(nativesJar)));
    }
 catch (    IOException e) {
      loaded=loadLibrary(libraryFinder.getSharedLibraryNameAndroid(sharedLibName,null));
    }
 else     System.loadLibrary(sharedLibName);
    loaded=true;
  }
  if (loaded)   loadedLibraries.add(sharedLibName);
}
