{
  boolean collided=false;
  int iterations=0;
  while (true) {
    packet.set(position,velocity);
    CollisionDetection.collide(mesh,packet);
    if (packet.isColliding() && iterations < 5) {
      collided=true;
      response.respond(packet,displacementDistance);
      position.set(packet.position).scale(packet.radiusX,packet.radiusY,packet.radiusZ);
      velocity.set(packet.velocity).scale(packet.radiusX,packet.radiusY,packet.radiusZ);
      if (velocity.len() < displacementDistance)       break;
    }
 else     break;
    iterations++;
  }
  return collided;
}
