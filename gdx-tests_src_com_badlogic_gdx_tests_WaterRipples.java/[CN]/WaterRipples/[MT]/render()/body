{
  GL10 gl=Gdx.graphics.getGL10();
  gl.glViewport(0,0,Gdx.graphics.getWidth(),Gdx.graphics.getHeight());
  gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
  camera.update();
  gl.glMatrixMode(GL10.GL_PROJECTION);
  gl.glLoadMatrixf(camera.getCombinedMatrix().val,0);
  gl.glMatrixMode(GL10.GL_MODELVIEW);
  accum+=Gdx.graphics.getDeltaTime();
  while (accum > TICK) {
    updateWater();
    float[][] tmp=curr;
    curr=last;
    last=tmp;
    accum-=TICK;
  }
  updateVertices();
  gl.glEnable(GL10.GL_TEXTURE_2D);
  texture.bind();
  mesh.render(GL10.GL_TRIANGLES);
  for (int i=0; i < 4; i++) {
    if (Gdx.input.isTouched(i)) {
      Ray ray=camera.getPickRay(Gdx.input.getX(i),(int)(Gdx.input.getY(i) / (float)Gdx.graphics.getHeight() * Gdx.graphics.getWidth()));
      Intersector.intersectRayPlane(ray,plane,point);
      int x=(int)point.x;
      int y=(int)point.y;
      if (x < 2)       x=2;
      if (x > WIDTH - 1)       x=WIDTH - 2;
      if (y < 2)       y=2;
      if (y > HEIGHT - 1)       y=HEIGHT - 2;
      curr[x][y]=DISPLACEMENT;
      curr[x - 1][y]=DISPLACEMENT;
      curr[x + 1][y]=DISPLACEMENT;
      curr[x][y - 1]=DISPLACEMENT;
      curr[x][y + 1]=DISPLACEMENT;
    }
  }
  if (System.nanoTime() - lastTick > 1000000000) {
    Gdx.app.log("Water","fps: " + Gdx.graphics.getFramesPerSecond());
    lastTick=System.nanoTime();
  }
}
