{
  Array<MD2Frame> frames=new Array<MD2Frame>();
  LittleEndianInputStream in=new LittleEndianInputStream(new ByteArrayInputStream(bytes));
  in.skip(header.offsetFrames);
  byte[] name=new byte[16];
  for (int i=0; i < header.numFrames; i++) {
    MD2Frame frame=new MD2Frame();
    frame.vertices=new float[3 * header.numVertices];
    float scaleX=in.readFloat();
    float scaleY=in.readFloat();
    float scaleZ=in.readFloat();
    float tranX=in.readFloat();
    float tranY=in.readFloat();
    float tranZ=in.readFloat();
    in.read(name);
    frame.name=new String(name);
    for (int j=0, idx=0; j < header.numVertices; j++) {
      float x=in.read(), y=in.read(), z=in.read();
      frame.vertices[idx++]=x * scaleX + tranX;
      frame.vertices[idx++]=z * scaleZ + tranZ;
      frame.vertices[idx++]=y * scaleY + tranY;
      in.read();
    }
    frames.add(frame);
  }
  in.close();
  return frames;
}
