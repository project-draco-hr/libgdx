{
  super.initialize(type,oldInstance,newInstance,enc);
  Container container=(Container)oldInstance;
  int count=container.getComponentCount();
  Expression getterExp=null;
  for (int i=0; i < count; i++) {
    getterExp=new Expression(container.getComponent(i),container,"getComponent",new Object[]{i});
    try {
      Object oldVal=getterExp.getValue();
      enc.writeExpression(getterExp);
      Object targetVal=enc.get(oldVal);
      Object newVal=null;
      try {
        newVal=new Expression(((Container)newInstance).getComponent(i),newInstance,"getComponent",new Object[]{i}).getValue();
      }
 catch (      ArrayIndexOutOfBoundsException ex) {
      }
      if (null == targetVal) {
        if (null != newVal) {
          Statement setterStm=new Statement(oldInstance,"add",new Object[]{null});
          enc.writeStatement(setterStm);
        }
      }
 else {
        PersistenceDelegate pd=enc.getPersistenceDelegate(targetVal.getClass());
        if (!pd.mutatesTo(targetVal,newVal)) {
          Statement setterStm=new Statement(oldInstance,"add",new Object[]{oldVal});
          enc.writeStatement(setterStm);
        }
      }
    }
 catch (    Exception ex) {
      enc.getExceptionListener().exceptionThrown(ex);
    }
  }
}
