{
  if (!renderable.material.has(BlendingAttribute.Type))   context.setBlending(false,GL10.GL_SRC_ALPHA,GL10.GL_ONE_MINUS_SRC_ALPHA);
  setWorldTransform(renderable.worldTransform);
  bindMaterial(renderable);
  if (lighting)   bindLights(renderable);
  if (currentMesh != renderable.mesh) {
    if (currentMesh != null)     currentMesh.unbind(program);
    renderable.mesh.setAutoBind(false);
    (currentMesh=renderable.mesh).bind(program);
  }
  if (has(u_bones)) {
    for (int i=0; i < bones.length; i++) {
      final int idx=i / 16;
      bones[i]=(renderable.bones == null || idx >= renderable.bones.length || renderable.bones[idx] == null) ? idtMatrix.val[i % 16] : renderable.bones[idx].val[i % 16];
    }
    program.setUniformMatrix4fv(u_bones.location,bones,0,bones.length);
  }
  super.render(renderable);
}
