{
  final Environment lights=renderable.environment;
  final DirectionalLightsAttribute dla=attributes.get(DirectionalLightsAttribute.class,DirectionalLightsAttribute.Type);
  final Array<DirectionalLight> dirs=dla == null ? null : dla.lights;
  final PointLightsAttribute pla=attributes.get(PointLightsAttribute.class,PointLightsAttribute.Type);
  final Array<PointLight> points=pla == null ? null : pla.lights;
  if (dirLightsLoc >= 0) {
    for (int i=0; i < directionalLights.length; i++) {
      if (dirs == null || i >= dirs.size) {
        if (lightsSet && directionalLights[i].color.r == 0f && directionalLights[i].color.g == 0f && directionalLights[i].color.b == 0f)         continue;
        directionalLights[i].color.set(0,0,0,1);
      }
 else       if (lightsSet && directionalLights[i].equals(dirs.get(i)))       continue;
 else       directionalLights[i].set(dirs.get(i));
      int idx=dirLightsLoc + i * dirLightsSize;
      program.setUniformf(idx + dirLightsColorOffset,directionalLights[i].color);
      program.setUniformf(idx + dirLightsDirectionOffset,directionalLights[i].direction.x,directionalLights[i].direction.y,directionalLights[i].direction.z,1f);
      if (dirLightsSize <= 0)       break;
    }
  }
  if (pointLightsLoc >= 0) {
    for (int i=0; i < pointLights.length; i++) {
      if (points == null || i >= points.size) {
        if (lightsSet && pointLights[i].intensity == 0f)         continue;
        pointLights[i].intensity=0f;
      }
 else       if (lightsSet && pointLights[i].equals(points.get(i)))       continue;
 else       pointLights[i].set(points.get(i));
      int idx=pointLightsLoc + i * pointLightsSize;
      program.setUniformf(idx + pointLightsColorOffset,pointLights[i].color.r * pointLights[i].intensity,pointLights[i].color.g * pointLights[i].intensity,pointLights[i].color.b * pointLights[i].intensity,1f);
      program.setUniformf(idx + pointLightsPositionOffset,pointLights[i].position.x,pointLights[i].position.y,pointLights[i].position.z,1f);
      if (pointLightsIntensityOffset >= 0)       program.setUniformf(idx + pointLightsIntensityOffset,pointLights[i].intensity);
      if (pointLightsSize <= 0)       break;
    }
  }
  if (attributes.has(ColorAttribute.Fog)) {
    set(u_fogColor,((ColorAttribute)attributes.get(ColorAttribute.Fog)).color);
  }
  if (lights.shadowMap != null) {
    set(u_shadowMapProjViewTrans,lights.shadowMap.getProjViewTrans());
    set(u_shadowTexture,lights.shadowMap.getDepthMap());
    set(u_shadowPCFOffset,1.f / (float)(2f * lights.shadowMap.getDepthMap().texture.getWidth()));
  }
  lightsSet=true;
}
