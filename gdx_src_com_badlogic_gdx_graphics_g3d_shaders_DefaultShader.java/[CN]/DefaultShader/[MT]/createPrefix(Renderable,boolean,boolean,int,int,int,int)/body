{
  String prefix="";
  final long mask=renderable.material.getMask();
  final long attributes=renderable.mesh.getVertexAttributes().getMask();
  if (((attributes & Usage.Color) == Usage.Color) || ((attributes & Usage.ColorPacked) == Usage.ColorPacked))   prefix+="#define colorFlag\n";
  if ((attributes & Usage.Normal) == Usage.Normal) {
    prefix+="#define normalFlag\n";
    if (lighting) {
      prefix+="#define lightingFlag\n";
      prefix+="#define ambientCubemapFlag\n";
      prefix+="#define numDirectionalLights " + numDirectional + "\n";
      prefix+="#define numPointLights " + numPoint + "\n";
      if (fog) {
        prefix+="#define fogFlag\n";
      }
    }
  }
  final int n=renderable.mesh.getVertexAttributes().size();
  for (int i=0; i < n; i++) {
    final VertexAttribute attr=renderable.mesh.getVertexAttributes().get(i);
    if (attr.usage == Usage.BoneWeight)     prefix+="#define boneWeight" + attr.unit + "Flag\n";
  }
  if ((attributes & Usage.Tangent) == Usage.Tangent)   prefix+="#define tangentFlag\n";
  if ((attributes & Usage.BiNormal) == Usage.BiNormal)   prefix+="#define binormalFlag\n";
  if ((mask & BlendingAttribute.Type) == BlendingAttribute.Type)   prefix+="#define " + BlendingAttribute.Alias + "Flag\n";
  if ((mask & TextureAttribute.Diffuse) == TextureAttribute.Diffuse)   prefix+="#define " + TextureAttribute.DiffuseAlias + "Flag\n";
  if ((mask & TextureAttribute.Normal) == TextureAttribute.Normal)   prefix+="#define " + TextureAttribute.NormalAlias + "Flag\n";
  if ((mask & ColorAttribute.Diffuse) == ColorAttribute.Diffuse)   prefix+="#define " + ColorAttribute.DiffuseAlias + "Flag\n";
  if ((mask & ColorAttribute.Specular) == ColorAttribute.Specular)   prefix+="#define " + ColorAttribute.SpecularAlias + "Flag\n";
  if ((mask & FloatAttribute.Shininess) == FloatAttribute.Shininess)   prefix+="#define " + FloatAttribute.ShininessAlias + "Flag\n";
  if ((mask & FloatAttribute.AlphaTest) == FloatAttribute.AlphaTest)   prefix+="#define " + FloatAttribute.AlphaTestAlias + "Flag\n";
  if (numBones > 0)   prefix+="#define numBones " + numBones + "\n";
  Gdx.app.log("Prefix","\n" + prefix);
  return prefix;
}
