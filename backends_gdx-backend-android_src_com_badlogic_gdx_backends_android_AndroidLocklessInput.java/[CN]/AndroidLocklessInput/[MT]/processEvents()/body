{
  InputProcessor processor;
synchronized (this) {
    processor=this.processor;
  }
  if (processor != null) {
    KeyEvent e;
    while ((e=keyEvents.poll()) != null) {
switch (e.type) {
case KeyEvent.KEY_DOWN:
        processor.keyDown(e.keyCode);
      break;
case KeyEvent.KEY_UP:
    processor.keyUp(e.keyCode);
  break;
case KeyEvent.KEY_TYPED:
processor.keyTyped(e.keyChar);
}
freeKeyEvents.put(e);
}
TouchEvent te=null;
while ((te=touchEvents.poll()) != null) {
switch (te.type) {
case TouchEvent.TOUCH_DOWN:
processor.touchDown(te.x,te.y,te.pointer);
break;
case TouchEvent.TOUCH_UP:
processor.touchUp(te.x,te.y,te.pointer);
break;
case TouchEvent.TOUCH_DRAGGED:
processor.touchDragged(te.x,te.y,te.pointer);
}
freeTouchEvents.put(te);
}
}
 else {
TouchEvent e=null;
while ((e=touchEvents.poll()) != null) {
Log.d("AndroidInput","lockless touch: " + (System.nanoTime() - e.timeStamp) / 1000000.0f);
freeTouchEvents.put(e);
}
KeyEvent ke=null;
while ((ke=keyEvents.poll()) != null) {
freeKeyEvents.put(ke);
}
}
}
