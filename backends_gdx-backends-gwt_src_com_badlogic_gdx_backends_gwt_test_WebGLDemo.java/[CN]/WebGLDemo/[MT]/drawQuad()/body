{
  gl.useProgram(shaderProgram);
  WebGLUniformLocation pUniform=gl.getUniformLocation(shaderProgram,"projectionMatrix");
  gl.uniformMatrix4fv(pUniform,false,projectionMatrix);
  WebGLUniformLocation mvUniform=gl.getUniformLocation(shaderProgram,"modelViewMatrix");
  gl.uniformMatrix4fv(mvUniform,false,modelViewMatrix);
  gl.activeTexture(TEXTURE0);
  gl.uniform1i(gl.getUniformLocation(shaderProgram,"texture"),0);
  gl.bindBuffer(ARRAY_BUFFER,buffer);
  int vertexPositionAttribute=gl.getAttribLocation(shaderProgram,"vertexPosition");
  gl.vertexAttribPointer(vertexPositionAttribute,3,FLOAT,false,0,0);
  gl.enableVertexAttribArray(vertexPositionAttribute);
  int texCoordAttribute=gl.getAttribLocation(shaderProgram,"texCoord");
  gl.vertexAttribPointer(texCoordAttribute,2,FLOAT,false,0,12 * Float32Array.BYTES_PER_ELEMENT);
  gl.enableVertexAttribArray(texCoordAttribute);
  gl.bindBuffer(ELEMENT_ARRAY_BUFFER,indexBuffer);
  gl.drawArrays(TRIANGLE_STRIP,0,4);
}
