{
  this.viewportX=viewportX;
  this.viewportY=viewportY;
  this.viewportWidth=viewportWidth;
  this.viewportHeight=viewportHeight;
  if (keepAspectRatio) {
    if (viewportHeight / viewportWidth < stageHeight / stageWidth) {
      float toViewportSpace=viewportHeight / stageHeight;
      float toStageSpace=stageHeight / viewportHeight;
      float deviceWidth=stageWidth * toViewportSpace;
      float lengthen=(viewportWidth - deviceWidth) * toStageSpace;
      this.width=stageWidth + lengthen;
      this.height=stageHeight;
      gutterWidth=lengthen / 2;
      gutterHeight=0;
    }
 else {
      float toViewportSpace=viewportWidth / stageWidth;
      float toStageSpace=stageWidth / viewportWidth;
      float deviceHeight=stageHeight * toViewportSpace;
      float lengthen=(viewportHeight - deviceHeight) * toStageSpace;
      this.height=stageHeight + lengthen;
      this.width=stageWidth;
      gutterWidth=0;
      gutterHeight=lengthen / 2;
    }
  }
 else {
    this.width=stageWidth;
    this.height=stageHeight;
    gutterWidth=0;
    gutterHeight=0;
  }
  float centerX=this.width / 2;
  float centerY=this.height / 2;
  camera.position.set(centerX,centerY,0);
  camera.viewportWidth=this.width;
  camera.viewportHeight=this.height;
}
