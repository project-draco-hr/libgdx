{
  super.create();
  environment=new Environment();
  environment.set(new ColorAttribute(ColorAttribute.AmbientLight,0.4f,0.4f,0.4f,1.f));
  environment.add(new DirectionalLight().set(0.8f,0.8f,0.8f,-0.5f,-1.0f,-0.8f));
  modelsWindow.setVisible(false);
  Texture texture=new Texture(Gdx.files.internal("data/badlogic.jpg"));
  Material material=new Material(TextureAttribute.createDiffuse(texture));
  MeshBuilder meshBuilder=new MeshBuilder();
  meshBuilder.begin(Usage.Position | Usage.Normal | Usage.TextureCoordinates,GL20.GL_TRIANGLES);
  meshBuilder.box(1f,1f,1f);
  Mesh mesh=new Mesh(true,meshBuilder.getNumVertices(),meshBuilder.getNumIndices(),new VertexAttributes(VertexAttribute.Position(),VertexAttribute.Normal(),VertexAttribute.TexCoords(0)));
  mesh=meshBuilder.end(mesh);
  ModelBuilder modelBuilder=new ModelBuilder();
  modelBuilder.begin();
  modelBuilder.manage(texture);
  modelBuilder.node().id="mesh";
  modelBuilder.part("mesh",mesh,GL20.GL_TRIANGLES,material);
  modelBuilder.node().id="box";
  MeshPartBuilder mpb=modelBuilder.part("box",GL20.GL_TRIANGLES,Usage.Position | Usage.Normal | Usage.TextureCoordinates| Usage.ColorPacked,material);
  mpb.setColor(Color.RED);
  mpb.box(1f,1f,1f);
  modelBuilder.node().id="sphere";
  mpb=modelBuilder.part("sphere",GL20.GL_TRIANGLES,Usage.Position | Usage.Normal | Usage.TextureCoordinates| Usage.ColorPacked,material);
  mpb.sphere(2f,2f,2f,10,5);
  modelBuilder.node().id="cone";
  mpb=modelBuilder.part("cone",GL20.GL_TRIANGLES,Usage.Position | Usage.Normal | Usage.TextureCoordinates| Usage.ColorPacked,material);
  mpb.setVertexTransform(new Matrix4().rotate(Vector3.X,-45f));
  mpb.cone(2f,3f,1f,8);
  modelBuilder.node().id="cylinder";
  mpb=modelBuilder.part("cylinder",GL20.GL_TRIANGLES,Usage.Position | Usage.Normal | Usage.TextureCoordinates| Usage.ColorPacked,material);
  mpb.setUVRange(1f,1f,0f,0f);
  mpb.cylinder(2f,4f,3f,15);
  model=modelBuilder.end();
  instances.add(new ModelInstance(model,new Matrix4().trn(0f,0f,0f),"mesh",true));
  instances.add(new ModelInstance(model,new Matrix4().trn(-5f,0f,-5f),"box",true));
  instances.add(new ModelInstance(model,new Matrix4().trn(5f,0f,-5f),"sphere",true));
  instances.add(new ModelInstance(model,new Matrix4().trn(-5f,0f,5f),"cone",true));
  instances.add(new ModelInstance(model,new Matrix4().trn(5f,0f,5f),"cylinder",true));
}
