{
  if (m_freeList == NULL_NODE) {
    assert(m_nodeCount == m_nodeCapacity);
    TreeNode[] old=m_nodes;
    m_nodeCapacity*=2;
    m_nodes=new TreeNode[m_nodeCapacity];
    System.arraycopy(old,0,m_nodes,0,old.length);
    for (int i=m_nodeCount; i < m_nodeCapacity; i++) {
      m_nodes[i]=new TreeNode();
      m_nodes[i].parent=i + 1;
      m_nodes[i].height=-1;
    }
    m_nodes[m_nodeCapacity - 1].parent=TreeNode.NULL_NODE;
    m_freeList=m_nodeCount;
  }
  int nodeId=m_freeList;
  m_freeList=m_nodes[nodeId].parent;
  m_nodes[nodeId].parent=NULL_NODE;
  m_nodes[nodeId].child1=NULL_NODE;
  m_nodes[nodeId].child2=NULL_NODE;
  m_nodes[nodeId].height=0;
  m_nodes[nodeId].userData=null;
  ++m_nodeCount;
  return nodeId;
}
