{
  btDefaultCollisionConfiguration collisionConfiguration=new btDefaultCollisionConfiguration();
  btCollisionDispatcher dispatcher=new btCollisionDispatcher(collisionConfiguration);
  btDbvtBroadphase broadphase=new btDbvtBroadphase();
  btSequentialImpulseConstraintSolver solver=new btSequentialImpulseConstraintSolver();
  btDiscreteDynamicsWorld dynamicsWorld=new btDiscreteDynamicsWorld(dispatcher,broadphase,solver,collisionConfiguration);
  dynamicsWorld.setGravity(new Vector3(0f,0f,-10f));
  btRigidBody dropBody=createDropObject(100);
  dynamicsWorld.addRigidBody(dropBody);
  btRigidBody planeBody=createGroundPlane();
  dynamicsWorld.addRigidBody(planeBody);
  int durationSeconds=10;
  int hertz=60;
  float timeStep=1f / (float)hertz;
  for (int i=0; i < hertz * durationSeconds; i++) {
    dynamicsWorld.stepSimulation(timeStep);
    if (i % hertz == 0) {
      printZ(dropBody);
    }
  }
  dynamicsWorld.removeRigidBody(planeBody);
  planeBody.delete();
  dynamicsWorld.removeRigidBody(dropBody);
  dropBody.delete();
  dynamicsWorld.delete();
  solver.delete();
  broadphase.delete();
  dispatcher.delete();
  collisionConfiguration.delete();
}
