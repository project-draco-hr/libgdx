{
  DataOutputStream out=null;
  try {
    long start=System.nanoTime();
    out=new DataOutputStream(new DeflaterOutputStream(new BufferedOutputStream(file.write(false))));
    out.writeInt(pixmap.getWidth());
    out.writeInt(pixmap.getHeight());
    out.writeInt(Format.toGdx2DPixmapFormat(pixmap.getFormat()));
    ByteBuffer pixelBuf=pixmap.getPixels();
    pixelBuf.position(0);
    pixelBuf.limit(pixelBuf.capacity());
    int remainingBytes=pixelBuf.capacity() % BUFFER_SIZE;
    int iterations=pixelBuf.capacity() / BUFFER_SIZE;
synchronized (writeBuffer) {
      for (int i=0; i < iterations; i++) {
        pixelBuf.get(writeBuffer);
        out.write(writeBuffer);
      }
      pixelBuf.get(writeBuffer,0,remainingBytes);
      out.write(writeBuffer,0,remainingBytes);
    }
    pixelBuf.position(0);
    pixelBuf.limit(pixelBuf.capacity());
    Gdx.app.log("PixmapIO","write (" + file.name() + "):"+ (System.nanoTime() - start) / 1000000000.0f + ", " + Thread.currentThread().getName());
  }
 catch (  Exception e) {
    throw new GdxRuntimeException("Couldn't write Pixmap to file '" + file + "'",e);
  }
 finally {
    if (out != null)     try {
      out.close();
    }
 catch (    Exception e) {
    }
  }
}
