{
  listener.create();
  listener.resize(graphics.getWidth(),graphics.getHeight());
  graphics.lastTime=System.nanoTime();
  while (running) {
    if (glfwWindowShouldClose(graphics.window))     exit();
synchronized (runnables) {
      executedRunnables.clear();
      executedRunnables.addAll(runnables);
      runnables.clear();
    }
    if (executedRunnables.size > 0) {
      for (int i=0; i < executedRunnables.size; i++)       executedRunnables.get(i).run();
      if (!running)       break;
      graphics.requestRendering();
    }
    input.update();
    if (!running)     break;
    if (graphics.shouldRender())     renderFrame();
 else {
      try {
        Thread.sleep(16);
      }
 catch (      InterruptedException ignored) {
      }
    }
  }
  Array<LifecycleListener> listeners=lifecycleListeners;
synchronized (listeners) {
    for (    LifecycleListener listener : listeners) {
      listener.pause();
      listener.dispose();
    }
  }
  listener.pause();
  listener.dispose();
  glfwDestroyWindow(graphics.window);
  if (graphics.config.forceExit)   System.exit(-1);
}
