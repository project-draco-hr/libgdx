{
  logger.log();
  final float delta=Gdx.graphics.getDeltaTime();
  camController.update(delta);
  timer+=delta;
  for (int i=0; i < 1 && i < lightManager.pointLights.size; i++) {
    final Vector3 v=lightManager.pointLights.get(i).position;
    v.set(animInstance[0][0].getSortCenter());
    v.x+=MathUtils.sin(timer);
    v.z+=MathUtils.cos(timer);
  }
  Gdx.gl.glEnable(GL10.GL_CULL_FACE);
  Gdx.gl.glFrontFace(GL10.GL_CW);
  Gdx.gl.glCullFace(GL10.GL_FRONT);
  Gdx.gl.glEnable(GL10.GL_DEPTH_TEST);
  Gdx.gl.glDepthMask(true);
  Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT | (Gdx.graphics.getBufferFormat().coverageSampling ? GL20.GL_COVERAGE_BUFFER_BIT_NV : 0));
  protoRenderer.begin();
  for (int i=0; i < gridSize; i++) {
    for (int j=0; j < gridSize; j++) {
      AnimatedModelNode instance=animInstance[i][j];
      instance.time+=MathUtils.clamp(delta,0,0.1f) * 0.5f;
      if (instance.time >= model.getAnimations()[currAnimIdx].totalDuration) {
        instance.time=0;
      }
      instance.matrix.val[12]=-i * 2 + 8;
      instance.matrix.val[14]=-j * 2 - 4;
      protoRenderer.draw(model,instance);
    }
  }
  protoRenderer.end();
}
