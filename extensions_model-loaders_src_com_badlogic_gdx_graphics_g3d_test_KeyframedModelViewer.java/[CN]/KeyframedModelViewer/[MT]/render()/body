{
  Gdx.gl.glClearColor(0.2f,0.2f,0.2f,1.0f);
  Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);
  Gdx.gl.glEnable(GL10.GL_DEPTH_TEST);
  cam.update();
  cam.apply(Gdx.gl10);
  drawAxes();
  if (hasNormals) {
    Gdx.gl.glEnable(GL10.GL_LIGHTING);
    Gdx.gl.glEnable(GL10.GL_COLOR_MATERIAL);
    Gdx.gl.glEnable(GL10.GL_LIGHT0);
    Gdx.gl10.glLightfv(GL10.GL_LIGHT0,GL10.GL_DIFFUSE,lightColor,0);
    Gdx.gl10.glLightfv(GL10.GL_LIGHT0,GL10.GL_POSITION,lightPosition,0);
  }
  if (texture != null) {
    Gdx.gl.glEnable(GL10.GL_TEXTURE_2D);
    Gdx.gl.glEnable(GL10.GL_BLEND);
    Gdx.gl.glBlendFunc(GL10.GL_SRC_ALPHA,GL10.GL_ONE_MINUS_SRC_ALPHA);
  }
  angle+=45 * Gdx.graphics.getDeltaTime();
  if (System.nanoTime() - lastTick > 30000000) {
    frame++;
    if (frame >= anim.keyframes.length)     frame=0;
    lastTick=System.nanoTime();
  }
  model.setAnimation(anim.name,frame);
  model.render();
  if (texture != null) {
    Gdx.gl.glDisable(GL10.GL_TEXTURE_2D);
  }
  if (hasNormals) {
    Gdx.gl.glDisable(GL10.GL_LIGHTING);
  }
}
