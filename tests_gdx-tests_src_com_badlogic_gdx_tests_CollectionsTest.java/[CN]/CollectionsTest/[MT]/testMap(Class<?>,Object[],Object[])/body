{
  System.out.println(mapClass);
  Object map=newInstance(mapClass);
  Object otherMap=newInstance(mapClass);
  assertEquals(map,map);
  for (int i=0, n=keys.length; i < n; ++i) {
    Object anotherMap=copy(map);
    assertEquals(map,anotherMap);
    invoke("put",map,keys[i],values[i]);
    invoke("put",otherMap,keys[i],values[i]);
    assertEquals(map,otherMap);
    assertNotEquals(map,anotherMap);
    invoke("put",anotherMap,keys[(i + 1) % keys.length],values[i]);
    assertNotEquals(map,anotherMap);
  }
  Object anotherMap=copy(map);
  Iterator it=((Iterable)anotherMap).iterator();
  int iterationCount=0;
  while (it.hasNext()) {
    Object entry=it.next();
    iterationCount++;
  }
  assertEquals(iterationCount,keys.length);
  for (int i=0, n=keys.length; i < n; ++i) {
    anotherMap=copy(map);
    it=((Iterable)anotherMap).iterator();
    iterationCount=0;
    while (it.hasNext()) {
      Object entry=it.next();
      if (iterationCount == i) {
        it.remove();
      }
      iterationCount++;
    }
    assertEquals(iterationCount,keys.length);
  }
}
