{
  float prefHeight=getPrefHeight();
  if (prefHeight != lastPrefHeight) {
    lastPrefHeight=prefHeight;
    invalidateHierarchy();
  }
  int align=this.align;
  boolean round=this.round;
  float space=this.space, padBottom=this.padBottom, fill=this.fill, wrapSpace=this.wrapSpace;
  float maxWidth=prefWidth - padLeft - padRight;
  float rowY=prefHeight - padTop, groupWidth=getWidth(), xStart=padLeft, x=0, rowHeight=0;
  if ((align & Align.top) != 0)   rowY+=getHeight() - prefHeight;
 else   if ((align & Align.bottom) == 0)   rowY+=(getHeight() - prefHeight) / 2;
  if ((align & Align.right) != 0)   xStart+=groupWidth - prefWidth;
 else   if ((align & Align.left) == 0)   xStart+=(groupWidth - prefWidth) / 2;
  groupWidth-=padRight;
  align=this.rowAlign;
  FloatArray rowSizes=this.rowSizes;
  SnapshotArray<Actor> children=getChildren();
  int i=0, n=children.size, incr=1;
  if (reverse) {
    i=n - 1;
    n=-1;
    incr=-1;
  }
  for (int r=0; i != n; i+=incr) {
    Actor child=children.get(i);
    float width, height;
    Layout layout=null;
    if (child instanceof Layout) {
      layout=(Layout)child;
      width=layout.getPrefWidth();
      height=layout.getPrefHeight();
    }
 else {
      width=child.getWidth();
      height=child.getHeight();
    }
    if (x + width > groupWidth || r == 0) {
      x=xStart;
      if ((align & Align.right) != 0)       x+=maxWidth - rowSizes.get(r);
 else       if ((align & Align.left) == 0)       x+=(maxWidth - rowSizes.get(r)) / 2;
      rowHeight=rowSizes.get(r + 1);
      if (r > 0)       rowY-=wrapSpace;
      rowY-=rowHeight;
      r+=2;
    }
    if (fill > 0)     height=rowHeight * fill;
    if (layout != null) {
      height=Math.max(height,layout.getMinHeight());
      float maxHeight=layout.getMaxHeight();
      if (maxHeight > 0 && height > maxHeight)       height=maxHeight;
    }
    float y=rowY;
    if ((align & Align.top) != 0)     y+=rowHeight - height;
 else     if ((align & Align.bottom) == 0)     y+=(rowHeight - height) / 2;
    if (round)     child.setBounds(Math.round(x),Math.round(y),Math.round(width),Math.round(height));
 else     child.setBounds(x,y,width,height);
    x+=width + space;
    if (layout != null)     layout.validate();
  }
}
