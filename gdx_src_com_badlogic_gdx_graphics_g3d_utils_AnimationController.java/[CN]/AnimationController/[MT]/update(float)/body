{
  if (previous != null && ((transitionCurrentTime+=delta) >= transitionTargetTime)) {
    removeAnimation(previous.animation);
    justChangedAnimation=true;
    animationPool.free(previous);
    previous=null;
  }
  if (justChangedAnimation) {
    target.calculateTransforms();
    justChangedAnimation=false;
  }
  if (current == null || current.loopCount == 0 || current.animation == null)   return;
  justChangedAnimation=false;
  updating=true;
  final float remain=current.update(delta);
  if (remain != 0f && queued != null) {
    inAction=false;
    animate(queued,queuedTransitionTime);
    queued=null;
    updating=false;
    update(remain);
    return;
  }
  if (previous != null)   applyAnimations(previous.animation,previous.time,current.animation,current.time,transitionCurrentTime / transitionTargetTime);
 else   applyAnimation(current.animation,current.time);
  updating=false;
}
