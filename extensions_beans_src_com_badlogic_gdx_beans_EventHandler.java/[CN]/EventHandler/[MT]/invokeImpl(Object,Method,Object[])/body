{
  Class<?> proxyClass=proxy.getClass();
  Object[] theArguments=arguments == null ? new Object[0] : arguments;
  Object result=null;
  if (Proxy.isProxyClass(proxyClass)) {
    InvocationHandler handler=Proxy.getInvocationHandler(proxy);
    if (handler instanceof EventHandler) {
      String methodName=method.getName();
      if (method.getDeclaringClass() == Object.class) {
        if (theArguments.length == 0) {
          if ("hashCode".equals(methodName)) {
            result=Integer.valueOf(hashCode());
          }
 else           if ("toString".equals(methodName)) {
            result=proxy.getClass().getSimpleName() + toString().substring(getClass().getName().length());
          }
        }
 else         if (theArguments.length == 1 && theArguments[0] != null && "equals".equals(methodName)) {
          result=Boolean.valueOf(proxy == theArguments[0]);
        }
      }
 else       if (isValidInvocation(method,theArguments)) {
        try {
          Object[] args=getArgs(theArguments);
          Method m=getMethod(proxy,method,theArguments,args);
          result=m.invoke(target,args);
        }
 catch (        RuntimeException e) {
          throw e;
        }
catch (        Throwable t) {
          throw new RuntimeException(t);
        }
      }
 else {
        if (listenerMethodName.equals(methodName)) {
          throw new IllegalArgumentException(Messages.getString("beans.4D"));
        }
      }
    }
  }
 else {
    if (null == method) {
      throw new NullPointerException(Messages.getString("beans.55"));
    }
  }
  return result;
}
