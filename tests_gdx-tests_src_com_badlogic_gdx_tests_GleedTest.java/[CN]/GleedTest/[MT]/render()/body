{
  Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
  camera.update();
  Gdx.gl.glViewport((int)viewport.x,(int)viewport.y,(int)viewport.width,(int)viewport.height);
  if (state == State.Loading && manager.update()) {
    state=State.Running;
    renderer=new GleedMapRenderer(manager.get("data/gleedtest.xml",Map.class));
    fpsFont=manager.get("data/font.fnt",BitmapFont.class);
  }
  if (state == State.Running) {
    renderer.setView(camera);
    renderer.render();
    if (Gdx.input.isKeyPressed(Keys.UP)) {
      camera.position.y+=5.0f;
    }
 else     if (Gdx.input.isKeyPressed(Keys.DOWN)) {
      camera.position.y-=5.0f;
    }
    if (Gdx.input.isKeyPressed(Keys.RIGHT)) {
      camera.position.x+=5.0f;
    }
 else     if (Gdx.input.isKeyPressed(Keys.LEFT)) {
      camera.position.x-=5.0f;
    }
    if (Gdx.input.isKeyPressed(Keys.A)) {
      camera.zoom+=0.05f;
    }
 else     if (Gdx.input.isKeyPressed(Keys.S)) {
      camera.zoom-=0.05f;
    }
    if (Gdx.input.isTouched()) {
      if (Gdx.input.getX() < VIRTUAL_WIDTH * 0.2f) {
        camera.position.x-=5.0f;
      }
 else       if (Gdx.input.getX() > VIRTUAL_WIDTH * 0.8f) {
        camera.position.x+=5.0f;
      }
      if (Gdx.input.getY() < VIRTUAL_HEIGHT * 0.2) {
        camera.position.y+=5.0f;
      }
 else       if (Gdx.input.getY() > VIRTUAL_HEIGHT * 0.8f) {
        camera.position.y-=5.0f;
      }
    }
    batch.begin();
    fpsFont.draw(batch,"" + Gdx.graphics.getFramesPerSecond(),VIRTUAL_WIDTH - 30,VIRTUAL_HEIGHT - 30);
    batch.end();
  }
}
