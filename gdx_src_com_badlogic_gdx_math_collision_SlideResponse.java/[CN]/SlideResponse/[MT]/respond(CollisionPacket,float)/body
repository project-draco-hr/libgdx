{
  if (packet.getNearestDistance() == 0) {
    System.out.println("embedded: " + packet.position.dst(packet.intersectionPoint) + ", "+ packet.plane);
    float distance=packet.plane.distance(packet.position);
    packet.position.add(packet.plane.normal.tmp().mul(1 - distance + displacementDistance));
    packet.nearestDistance=displacementDistance;
  }
  destination.set(packet.position).add(packet.velocity);
  newPosition.set(packet.position);
  if (packet.getNearestDistance() >= displacementDistance) {
    newVelocity.set(packet.velocity).nor().mul(packet.getNearestDistance() - displacementDistance);
    newPosition.add(newVelocity);
    newVelocity.nor();
    packet.getIntersectionPoint().sub(newVelocity.mul(displacementDistance));
  }
  slidingPlaneOrigin.set(packet.getIntersectionPoint());
  slidingPlaneNormal.set(newPosition).sub(packet.getIntersectionPoint()).nor();
  slidingPlane.set(slidingPlaneOrigin,slidingPlaneNormal);
  newDestination.set(destination).sub(slidingPlane.normal.mul(slidingPlane.distance(destination)));
  newVelocity.set(newDestination).sub(packet.getIntersectionPoint());
  packet.velocity.set(newVelocity);
  packet.position.set(newPosition);
}
