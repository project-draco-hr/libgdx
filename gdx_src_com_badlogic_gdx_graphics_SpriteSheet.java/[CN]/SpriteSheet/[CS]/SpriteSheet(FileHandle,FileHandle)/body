{
  PriorityQueue<PackedSprite> sortedSprites=new PriorityQueue(16,indexComparator);
  BufferedReader reader=new BufferedReader(new InputStreamReader(packFile.read()),64);
  try {
    Sprite pageImage=null;
    while (true) {
      String line=reader.readLine();
      if (line == null)       break;
      if (line.trim().length() == 0)       pageImage=null;
 else       if (pageImage == null) {
        FileHandle file=imagesDir.child(line);
        String direction=readValue(reader);
        TextureWrap repeatX=ClampToEdge;
        TextureWrap repeatY=ClampToEdge;
        if (direction.equals("x"))         repeatX=Repeat;
 else         if (direction.equals("y"))         repeatY=Repeat;
 else         if (direction.equals("xy")) {
          repeatX=Repeat;
          repeatY=Repeat;
        }
        readTuple(reader);
        TextureFilter min=TextureFilter.valueOf(tuple[0]);
        TextureFilter max=TextureFilter.valueOf(tuple[1]);
        Texture texture=Gdx.graphics.newTexture(file,min,max,repeatX,repeatY);
        textures.add(texture);
        pageImage=new Sprite(texture);
      }
 else {
        boolean rotate=Boolean.valueOf(readValue(reader));
        readTuple(reader);
        int left=Integer.parseInt(tuple[0]);
        int top=Integer.parseInt(tuple[1]);
        readTuple(reader);
        int width=Integer.parseInt(tuple[0]);
        int height=Integer.parseInt(tuple[1]);
        PackedSprite image;
        if (rotate) {
          image=new PackedSprite(pageImage,left,top,height,width);
          image.rotate90(true);
        }
 else         image=new PackedSprite(pageImage,left,top,width,height);
        image.name=line;
        readTuple(reader);
        image.originalWidth=Integer.parseInt(tuple[0]);
        image.originalHeight=Integer.parseInt(tuple[1]);
        readTuple(reader);
        image.offsetX=Integer.parseInt(tuple[0]);
        image.offsetY=Integer.parseInt(tuple[1]);
        image.setPosition(image.offsetX,image.offsetY);
        image.index=Integer.parseInt(readValue(reader));
        if (image.index == -1)         image.index=Integer.MAX_VALUE;
        sortedSprites.add(image);
      }
    }
  }
 catch (  IOException ex) {
    throw new GdxRuntimeException("Error reading pack file: " + packFile);
  }
 finally {
    try {
      reader.close();
    }
 catch (    IOException ignored) {
    }
  }
  int n=sortedSprites.size();
  images=new PackedSprite[n];
  for (int i=0; i < n; i++)   images[i]=sortedSprites.poll();
}
