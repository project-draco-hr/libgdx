{
  System.out.println("unwindTest enter");
  try {
    expect(dynamicWind(new Runnable(){
      public void run(){
        System.out.println("unwindTest before");
        expect(before == 0);
        expect(task == 0);
        expect(after == 0);
        before=1;
      }
    }
,new Callable<Integer>(){
      public Integer call() throws Exception {
        System.out.println("unwindTest thunk");
        expect(before == 1);
        expect(task == 0);
        expect(after == 0);
        task=1;
        return unwind.call();
      }
    }
,new Runnable(){
      public void run(){
        System.out.println("unwindTest after");
        expect(before == 1);
        expect(task == 1);
        expect(after == 0);
        after=1;
      }
    }
) == 42);
  }
 catch (  MyException e) {
    e.printStackTrace();
  }
  System.out.println("unwindTest expect");
  expect(before == 1);
  expect(task == 1);
  expect(after == 1);
  System.out.println("unwindTest exit");
}
