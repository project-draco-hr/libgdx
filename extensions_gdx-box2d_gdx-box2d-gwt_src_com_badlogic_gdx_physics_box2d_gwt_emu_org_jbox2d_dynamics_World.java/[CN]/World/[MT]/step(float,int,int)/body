{
  stepTimer.reset();
  tempTimer.reset();
  if ((m_flags & NEW_FIXTURE) == NEW_FIXTURE) {
    m_contactManager.findNewContacts();
    m_flags&=~NEW_FIXTURE;
  }
  m_flags|=LOCKED;
  step.dt=dt;
  step.velocityIterations=velocityIterations;
  step.positionIterations=positionIterations;
  if (dt > 0.0f) {
    step.inv_dt=1.0f / dt;
  }
 else {
    step.inv_dt=0.0f;
  }
  step.dtRatio=m_inv_dt0 * dt;
  step.warmStarting=m_warmStarting;
  m_profile.stepInit.record(tempTimer.getMilliseconds());
  tempTimer.reset();
  m_contactManager.collide();
  m_profile.collide.record(tempTimer.getMilliseconds());
  if (m_stepComplete && step.dt > 0.0f) {
    tempTimer.reset();
    m_particleSystem.solve(step);
    m_profile.solveParticleSystem.record(tempTimer.getMilliseconds());
    tempTimer.reset();
    solve(step);
    m_profile.solve.record(tempTimer.getMilliseconds());
  }
  if (m_continuousPhysics && step.dt > 0.0f) {
    tempTimer.reset();
    solveTOI(step);
    m_profile.solveTOI.record(tempTimer.getMilliseconds());
  }
  if (step.dt > 0.0f) {
    m_inv_dt0=step.inv_dt;
  }
  if ((m_flags & CLEAR_FORCES) == CLEAR_FORCES) {
    clearForces();
  }
  m_flags&=~LOCKED;
  m_profile.step.record(stepTimer.getMilliseconds());
}
