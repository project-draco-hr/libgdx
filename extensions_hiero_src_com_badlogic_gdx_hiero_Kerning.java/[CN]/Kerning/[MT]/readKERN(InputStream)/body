{
  seek(input,kernOffset + 2);
  for (int subTableCount=readUnsignedShort(input); subTableCount > 0; subTableCount--) {
    skip(input,2 * 2);
    int tupleIndex=readUnsignedShort(input);
    if (!((tupleIndex & 1) != 0) || (tupleIndex & 2) != 0 || (tupleIndex & 4) != 0)     return;
    if (tupleIndex >> 8 != 0)     continue;
    int kerningCount=readUnsignedShort(input);
    skip(input,3 * 2);
    while (kerningCount-- > 0) {
      int firstGlyphCode=readUnsignedShort(input);
      int secondGlyphCode=readUnsignedShort(input);
      int offset=readShort(input);
      int value=(offset << 16) | secondGlyphCode;
      List firstGlyphValues=(List)values.get(new Integer(firstGlyphCode));
      if (firstGlyphValues == null) {
        firstGlyphValues=new ArrayList(256);
        values.put(new Integer(firstGlyphCode),firstGlyphValues);
      }
      firstGlyphValues.add(new Integer(value));
    }
  }
}
