{
  final MyProcess[] process=new MyProcess[1];
  final Throwable[] exception=new Throwable[1];
synchronized (process) {
    Thread t=new Thread(){
      public void run(){
synchronized (process) {
          try {
            long[] info=new long[5];
            exec(command,info);
            process[0]=new MyProcess(info[0],info[1],(int)info[2],(int)info[3],(int)info[4]);
          }
 catch (          Throwable e) {
            exception[0]=e;
          }
 finally {
            process.notifyAll();
          }
        }
        MyProcess p=process[0];
        if (p != null) {
synchronized (p) {
            try {
              if (p.pid != 0) {
                p.exitCode=Runtime.waitFor(p.pid,p.tid);
                p.pid=0;
                p.tid=0;
              }
            }
  finally {
              p.notifyAll();
            }
          }
        }
      }
    }
;
    t.setDaemon(true);
    t.start();
    while (process[0] == null && exception[0] == null) {
      try {
        process.wait();
      }
 catch (      InterruptedException e) {
        throw new RuntimeException(e);
      }
    }
  }
  if (exception[0] != null) {
    if (exception[0] instanceof IOException) {
      String message="Failed to run \"" + command[0] + "\": "+ exception[0].getMessage();
      throw new IOException(message);
    }
 else {
      throw new RuntimeException(exception[0]);
    }
  }
  return process[0];
}
