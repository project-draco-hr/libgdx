{
  String entriesCommon="";
  String entriesDesktop="";
  String entriesAndroid="";
  String entriesHtml="";
  String gwtInherits="";
  for (  String library : cfg.libs.getNames()) {
    if (!cfg.libs.isUsed(library))     continue;
    LibraryDef def=cfg.libs.getDef(library);
    for (    String file : def.libsCommon) {
      String name=FilenameUtils.getBaseName(file);
      if (!file.endsWith(".jar"))       continue;
      if (endsWidth(name,"-source","-sources","-src"))       continue;
      String source=getSource(def.libsCommon,file);
      entriesCommon+="\t<classpathentry exported=\"true\" kind=\"lib\" path=\"libs/" + file + "\"";
      if (source != null)       entriesCommon+=" sourcepath=\"libs/" + source + "\"";
      entriesCommon+="/>\n";
      entriesAndroid+="\t<classpathentry exported=\"true\" kind=\"lib\" path=\"/@{PRJ_COMMON_NAME}/libs/" + file + "\"";
      if (source != null)       entriesAndroid+=" sourcepath=\"/@{PRJ_COMMON_NAME}/libs/" + source + "\"";
      entriesAndroid+="/>\n";
      entriesHtml+="\t<classpathentry kind=\"lib\" path=\"/@{PRJ_COMMON_NAME}/libs/" + file + "\"";
      if (source != null)       entriesHtml+=" sourcepath=\"/@{PRJ_COMMON_NAME}/libs/" + source + "\"";
      entriesHtml+="/>\n";
      if (source != null) {
        entriesHtml+="\t<classpathentry kind=\"lib\" path=\"/@{PRJ_COMMON_NAME}/libs/" + source + "\"/>\n";
      }
    }
    for (    String file : def.libsDesktop) {
      String name=FilenameUtils.getBaseName(file);
      if (!file.endsWith(".jar"))       continue;
      if (endsWidth(name,"-source","-sources","-src"))       continue;
      String source=getSource(def.libsDesktop,file);
      entriesDesktop+="\t<classpathentry kind=\"lib\" path=\"libs/" + file + "\"";
      if (source != null)       entriesDesktop+=" sourcepath=\"libs/" + source + "\"";
      entriesDesktop+="/>\n";
    }
    for (    String file : def.libsAndroid) {
      String name=FilenameUtils.getBaseName(file);
      if (!file.endsWith(".jar"))       continue;
      if (endsWidth(name,"-source","-sources","-src"))       continue;
      String source=getSource(def.libsAndroid,file);
      entriesAndroid+="\t<classpathentry exported=\"true\" kind=\"lib\" path=\"libs/" + file + "\"";
      if (source != null)       entriesAndroid+=" sourcepath=\"libs/" + source + "\"";
      entriesAndroid+="/>\n";
    }
    for (    String file : def.libsHtml) {
      String name=FilenameUtils.getBaseName(file);
      if (!file.endsWith(".jar"))       continue;
      if (endsWidth(name,"-source","-sources","-src"))       continue;
      String source=getSource(def.libsHtml,file);
      entriesHtml+="\t<classpathentry kind=\"lib\" path=\"war/WEB-INF/lib/" + file + "\"";
      if (source != null)       entriesHtml+=" sourcepath=\"war/WEB-INF/lib/" + source + "\"";
      entriesHtml+="/>\n";
      if (source != null) {
        entriesHtml+="\t<classpathentry kind=\"lib\" path=\"war/WEB-INF/lib/" + source + "\"/>\n";
      }
    }
    if (def.gwtModuleName != null) {
      gwtInherits+="\t<inherits name='" + def.gwtModuleName + "' />\n";
    }
  }
  templateManager.define("CLASSPATHENTRIES_COMMON",entriesCommon.trim());
  templateManager.define("CLASSPATHENTRIES_DESKTOP",entriesDesktop.trim());
  templateManager.define("CLASSPATHENTRIES_ANDROID",entriesAndroid.trim());
  templateManager.define("CLASSPATHENTRIES_HTML",entriesHtml.trim());
  templateManager.define("GWT_INHERITS",gwtInherits.trim());
  templateManager.processOver(new File(tmpDst,"prj-common/.classpath"));
  templateManager.processOver(new File(tmpDst,"prj-desktop/.classpath"));
  templateManager.processOver(new File(tmpDst,"prj-android/.classpath"));
  templateManager.processOver(new File(tmpDst,"prj-html/.classpath"));
  templateManager.processOver(new File(tmpDst,"prj-html/src/GwtDefinition.gwt.xml"));
}
