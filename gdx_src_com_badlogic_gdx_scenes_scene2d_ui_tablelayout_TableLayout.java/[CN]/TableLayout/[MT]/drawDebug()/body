{
  if (debug == null || debugRects == null)   return;
  if (debugRenderer == null)   debugRenderer=new ImmediateModeRenderer(64);
  float x=0, y=table.height;
  Actor parent=table;
  while (parent != null) {
    if (parent instanceof Table) {
      x+=parent.x;
      y+=parent.y;
    }
 else {
      x+=parent.x;
      y+=parent.y;
    }
    parent=parent.parent;
  }
  int viewHeight=Gdx.graphics.getHeight();
  debugRenderer.begin(GL10.GL_LINES);
  for (int i=0, n=debugRects.size; i < n; i++) {
    DebugRect rect=debugRects.get(i);
    float x1=x + rect.x;
    float y1=y - rect.y - rect.height;
    float x2=x1 + rect.width;
    float y2=y1 + rect.height;
    float r=rect.type.equals(DEBUG_CELL) ? 1 : 0;
    float g=rect.type.equals(DEBUG_WIDGET) ? 1 : 0;
    float b=rect.type.equals(DEBUG_TABLE) ? 1 : 0;
    debugRenderer.color(r,g,b,1);
    debugRenderer.vertex(x1,y1,0);
    debugRenderer.color(r,g,b,1);
    debugRenderer.vertex(x1,y2,0);
    debugRenderer.color(r,g,b,1);
    debugRenderer.vertex(x1,y2,0);
    debugRenderer.color(r,g,b,1);
    debugRenderer.vertex(x2,y2,0);
    debugRenderer.color(r,g,b,1);
    debugRenderer.vertex(x2,y2,0);
    debugRenderer.color(r,g,b,1);
    debugRenderer.vertex(x2,y1,0);
    debugRenderer.color(r,g,b,1);
    debugRenderer.vertex(x2,y1,0);
    debugRenderer.color(r,g,b,1);
    debugRenderer.vertex(x1,y1,0);
    if (debugRenderer.getNumVertices() == 64) {
      debugRenderer.end();
      debugRenderer.begin(GL10.GL_LINES);
    }
  }
  debugRenderer.end();
}
