{
  Pixmap pixmap=new Pixmap(Gdx.files.internal("data/levels.png"));
  tiles=new int[pixmap.getWidth()][pixmap.getHeight()];
  for (int y=0; y < 35; y++) {
    for (int x=0; x < 150; x++) {
      int pix=(pixmap.getPixel(x,y) >>> 8) & 0xffffff;
      Gdx.app.log("Map",x + ", " + y+ ", "+ Integer.toHexString(pix));
      if (match(pix,START)) {
        Dispenser dispenser=new Dispenser(x,pixmap.getHeight() - 1 - y);
        dispensers.add(dispenser);
        activeDispenser=dispenser;
        bob=new Bob(this,activeDispenser.bounds.x,activeDispenser.bounds.y);
        bob.state=Bob.SPAWN;
        cube=new Cube(this,activeDispenser.bounds.x,activeDispenser.bounds.y);
        cube.state=Cube.DEAD;
      }
 else       if (match(pix,DISPENSER)) {
        Dispenser dispenser=new Dispenser(x,pixmap.getHeight() - 1 - y);
        dispensers.add(dispenser);
      }
 else       if (match(pix,ROCKET)) {
        Rocket rocket=new Rocket(this,x,pixmap.getHeight() - 1 - y);
        rockets.add(rocket);
      }
 else       if (match(pix,MOVING_SPIKES)) {
        movingSpikes.add(new MovingSpikes(this,x,pixmap.getHeight() - 1 - y));
      }
 else       if (match(pix,LASER)) {
        lasers.add(new Laser(this,x,pixmap.getHeight() - 1 - y));
      }
 else       if (match(pix,END)) {
        endDoor=new EndDoor(x,pixmap.getHeight() - 1 - y);
      }
 else {
        tiles[x][y]=pix;
      }
    }
  }
  for (int i=0; i < movingSpikes.size; i++) {
    movingSpikes.get(i).init();
  }
  for (int i=0; i < lasers.size; i++) {
    lasers.get(i).init();
  }
}
