{
  assert(bd.position.isValid());
  assert(bd.linearVelocity.isValid());
  assert(bd.gravityScale >= 0.0f);
  assert(bd.angularDamping >= 0.0f);
  assert(bd.linearDamping >= 0.0f);
  m_flags=0;
  if (bd.bullet) {
    m_flags|=e_bulletFlag;
  }
  if (bd.fixedRotation) {
    m_flags|=e_fixedRotationFlag;
  }
  if (bd.allowSleep) {
    m_flags|=e_autoSleepFlag;
  }
  if (bd.awake) {
    m_flags|=e_awakeFlag;
  }
  if (bd.active) {
    m_flags|=e_activeFlag;
  }
  m_world=world;
  m_xf.p.set(bd.position);
  m_xf.q.set(bd.angle);
  m_sweep.localCenter.setZero();
  m_sweep.c0.set(m_xf.p);
  m_sweep.c.set(m_xf.p);
  m_sweep.a0=bd.angle;
  m_sweep.a=bd.angle;
  m_sweep.alpha0=0.0f;
  m_jointList=null;
  m_contactList=null;
  m_prev=null;
  m_next=null;
  m_linearVelocity.set(bd.linearVelocity);
  m_angularVelocity=bd.angularVelocity;
  m_linearDamping=bd.linearDamping;
  m_angularDamping=bd.angularDamping;
  m_gravityScale=bd.gravityScale;
  m_force.setZero();
  m_torque=0.0f;
  m_sleepTime=0.0f;
  m_type=bd.type;
  if (m_type == BodyType.DYNAMIC) {
    m_mass=1f;
    m_invMass=1f;
  }
 else {
    m_mass=0f;
    m_invMass=0f;
  }
  m_I=0.0f;
  m_invI=0.0f;
  m_userData=bd.userData;
  m_fixtureList=null;
  m_fixtureCount=0;
}
