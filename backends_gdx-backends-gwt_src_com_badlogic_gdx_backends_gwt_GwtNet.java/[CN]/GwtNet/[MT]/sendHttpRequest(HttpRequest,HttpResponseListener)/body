{
  if (httpRequest.getUrl() == null) {
    httpResultListener.failed(new GdxRuntimeException("can't process a HTTP request without URL set"));
    return;
  }
  final boolean is_get=(httpRequest.getMethod() == HttpMethods.GET);
  final String value=httpRequest.getContent();
  final RequestBuilder builder=is_get ? new RequestBuilder(RequestBuilder.GET,httpRequest.getUrl() + "?" + value) : new RequestBuilder(RequestBuilder.POST,httpRequest.getUrl());
  Map<String,String> content=httpRequest.getHeaders();
  Set<String> keySet=content.keySet();
  for (  String name : keySet) {
    builder.setHeader(name,content.get(name));
  }
  builder.setTimeoutMillis(httpRequest.getTimeOut());
  try {
    Request request=builder.sendRequest(is_get ? null : value,new RequestCallback(){
      @Override public void onResponseReceived(      Request request,      Response response){
        HttpRequest httpRequest=requests.findKey(requests,true);
        if (httpRequest != null) {
          httpResultListener.handleHttpResponse(new HttpClientResponse(response));
          requests.remove(httpRequest);
          listeners.remove(httpRequest);
        }
      }
      @Override public void onError(      Request request,      Throwable exception){
        HttpRequest httpRequest=requests.findKey(requests,true);
        if (httpRequest != null) {
          httpResultListener.failed(exception);
          requests.remove(httpRequest);
          listeners.remove(httpRequest);
        }
      }
    }
);
    requests.put(httpRequest,request);
    listeners.put(httpRequest,httpResultListener);
  }
 catch (  RequestException e) {
    httpResultListener.failed(e);
  }
}
