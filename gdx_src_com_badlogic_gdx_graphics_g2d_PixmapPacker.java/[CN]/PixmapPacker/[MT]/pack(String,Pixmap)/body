{
  if (disposed)   return null;
  if (name != null && getRect(name) != null)   throw new GdxRuntimeException("Pixmap has already been packed with name: " + name);
  Rectangle rect=new Rectangle(0,0,image.getWidth(),image.getHeight());
  if (rect.getWidth() > pageWidth || rect.getHeight() > pageHeight) {
    if (name == null)     throw new GdxRuntimeException("Page size too small for pixmap.");
    throw new GdxRuntimeException("Page size too small for pixmap: " + name);
  }
  Page page=packStrategy.pack(this,name,rect);
  if (name != null) {
    page.rects.put(name,rect);
    page.addedRects.add(name);
  }
  int rectX=(int)rect.x, rectY=(int)rect.y, rectWidth=(int)rect.width, rectHeight=(int)rect.height;
  if (packToTexture && !duplicateBorder && page.texture != null && !page.dirty) {
    page.texture.bind();
    Gdx.gl.glTexSubImage2D(page.texture.glTarget,0,rectX,rectY,rectWidth,rectHeight,image.getGLFormat(),image.getGLType(),image.getPixels());
  }
 else   page.dirty=true;
  Blending blending=Pixmap.getBlending();
  Pixmap.setBlending(Blending.None);
  page.image.drawPixmap(image,rectX,rectY);
  if (duplicateBorder) {
    int imageWidth=image.getWidth(), imageHeight=image.getHeight();
    page.image.drawPixmap(image,0,0,1,1,rectX - 1,rectY - 1,1,1);
    page.image.drawPixmap(image,imageWidth - 1,0,1,1,rectX + rectWidth,rectY - 1,1,1);
    page.image.drawPixmap(image,0,imageHeight - 1,1,1,rectX - 1,rectY + rectHeight,1,1);
    page.image.drawPixmap(image,imageWidth - 1,imageHeight - 1,1,1,rectX + rectWidth,rectY + rectHeight,1,1);
    page.image.drawPixmap(image,0,0,imageWidth,1,rectX,rectY - 1,rectWidth,1);
    page.image.drawPixmap(image,0,imageHeight - 1,imageWidth,1,rectX,rectY + rectHeight,rectWidth,1);
    page.image.drawPixmap(image,0,0,1,imageHeight,rectX - 1,rectY,1,rectHeight);
    page.image.drawPixmap(image,imageWidth - 1,0,1,imageHeight,rectX + rectWidth,rectY,1,rectHeight);
  }
  Pixmap.setBlending(blending);
  return rect;
}
