{
  if (disposed)   return null;
  if (name != null && getRect(name) != null)   throw new RuntimeException("Key with name '" + name + "' is already in map");
  int borderPixels=padding + (duplicateBorder ? 1 : 0);
  borderPixels<<=1;
  Rectangle rect=new Rectangle(0,0,image.getWidth() + borderPixels,image.getHeight() + borderPixels);
  if (rect.getWidth() > pageWidth || rect.getHeight() > pageHeight) {
    if (name == null) {
      throw new GdxRuntimeException("page size for anonymous pixmap too small");
    }
 else {
      throw new GdxRuntimeException("page size for '" + name + "' too small");
    }
  }
  Node node=insert(currPage.root,rect);
  if (node == null) {
    newPage();
    return pack(name,image,directToTexture);
  }
  node.leaveName=(name == null) ? ANONYMOUS : name;
  rect=new Rectangle(node.rect);
  rect.width-=borderPixels;
  rect.height-=borderPixels;
  borderPixels>>=1;
  rect.x+=borderPixels;
  rect.y+=borderPixels;
  if (name != null) {
    currPage.rects.put(name,rect);
    currPage.addedRects.add(name);
  }
  if (directToTexture && currPage.texture != null && !currPage.textureNeedsRefresh && !duplicateBorder) {
    currPage.texture.bind();
    Gdx.gl.glTexSubImage2D(currPage.texture.glTarget,0,(int)rect.x,(int)rect.y,(int)rect.width,(int)rect.height,image.getGLFormat(),image.getGLType(),image.getPixels());
  }
 else {
    currPage.textureNeedsRefresh=true;
  }
  Blending blending=Pixmap.getBlending();
  Pixmap.setBlending(Blending.None);
  this.currPage.image.drawPixmap(image,(int)rect.x,(int)rect.y);
  if (duplicateBorder) {
    int imageWidth=image.getWidth();
    int imageHeight=image.getHeight();
    this.currPage.image.drawPixmap(image,0,0,1,1,(int)rect.x - 1,(int)rect.y - 1,1,1);
    this.currPage.image.drawPixmap(image,imageWidth - 1,0,1,1,(int)rect.x + (int)rect.width,(int)rect.y - 1,1,1);
    this.currPage.image.drawPixmap(image,0,imageHeight - 1,1,1,(int)rect.x - 1,(int)rect.y + (int)rect.height,1,1);
    this.currPage.image.drawPixmap(image,imageWidth - 1,imageHeight - 1,1,1,(int)rect.x + (int)rect.width,(int)rect.y + (int)rect.height,1,1);
    this.currPage.image.drawPixmap(image,0,0,imageWidth,1,(int)rect.x,(int)rect.y - 1,(int)rect.width,1);
    this.currPage.image.drawPixmap(image,0,imageHeight - 1,imageWidth,1,(int)rect.x,(int)rect.y + (int)rect.height,(int)rect.width,1);
    this.currPage.image.drawPixmap(image,0,0,1,imageHeight,(int)rect.x - 1,(int)rect.y,1,(int)rect.height);
    this.currPage.image.drawPixmap(image,imageWidth - 1,0,1,imageHeight,(int)rect.x + (int)rect.width,(int)rect.y,1,(int)rect.height);
  }
  Pixmap.setBlending(blending);
  return rect;
}
