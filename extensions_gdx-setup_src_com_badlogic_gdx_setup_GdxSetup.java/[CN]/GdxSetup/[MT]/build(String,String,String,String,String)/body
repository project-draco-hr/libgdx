{
  Project project=new Project();
  String packageDir=packageName.replace('.','/');
  String sdkPath=sdkLocation.replace('\\','/');
  if (isSdkLocationValid(sdkLocation)) {
    System.out.println("Android SDK location '" + sdkLocation + "' doesn't contain an SDK");
  }
  project.files.add(new ProjectFile("gitignore",".gitignore",false));
  project.files.add(new ProjectFile("build.gradle",true));
  project.files.add(new ProjectFile("settings.gradle"));
  project.files.add(new ProjectFile("gradlew",false));
  project.files.add(new ProjectFile("gradlew.bat",false));
  project.files.add(new ProjectFile("gradle/wrapper/gradle-wrapper.jar",false));
  project.files.add(new ProjectFile("gradle/wrapper/gradle-wrapper.properties",false));
  project.files.add(new ProjectFile("local.properties",true));
  project.files.add(new ProjectFile("core/build.gradle"));
  project.files.add(new ProjectFile("core/src/MainClass","core/src/" + packageDir + "/"+ mainClass+ ".java",true));
  project.files.add(new ProjectFile("core/CoreGdxDefinition","core/src/" + packageDir + "/"+ mainClass+ ".gwt.xml",true));
  project.files.add(new ProjectFile("desktop/build.gradle"));
  project.files.add(new ProjectFile("desktop/src/DesktopLauncher","desktop/src/" + packageDir + "/desktop/DesktopLauncher.java",true));
  project.files.add(new ProjectFile("android/assets/badlogic.jpg",false));
  project.files.add(new ProjectFile("android/res/values/strings.xml"));
  project.files.add(new ProjectFile("android/res/values/styles.xml",false));
  project.files.add(new ProjectFile("android/res/drawable-hdpi/ic_launcher.png",false));
  project.files.add(new ProjectFile("android/res/drawable-mdpi/ic_launcher.png",false));
  project.files.add(new ProjectFile("android/res/drawable-xhdpi/ic_launcher.png",false));
  project.files.add(new ProjectFile("android/res/drawable-xxhdpi/ic_launcher.png",false));
  project.files.add(new ProjectFile("android/src/AndroidLauncher","android/src/" + packageDir + "/android/AndroidLauncher.java",true));
  project.files.add(new ProjectFile("android/AndroidManifest.xml"));
  project.files.add(new ProjectFile("android/build.gradle",true));
  project.files.add(new ProjectFile("android/ic_launcher-web.png",false));
  project.files.add(new ProjectFile("android/proguard-project.txt",false));
  project.files.add(new ProjectFile("android/project.properties",false));
  project.files.add(new ProjectFile("gwt/build.gradle"));
  project.files.add(new ProjectFile("gwt/src/GwtLauncher","gwt/src/" + packageDir + "/client/GwtLauncher.java",true));
  project.files.add(new ProjectFile("gwt/GdxDefinition","gwt/src/" + packageDir + "/GdxDefinition.gwt.xml",true));
  project.files.add(new ProjectFile("gwt/GdxDefinitionSuperdev","gwt/src/" + packageDir + "/GdxDefinitionSuperdev.gwt.xml",true));
  project.files.add(new ProjectFile("gwt/war/index","gwt/webapp/index.html",true));
  project.files.add(new ProjectFile("gwt/war/soundmanager2-jsmin.js","gwt/webapp/soundmanager2-jsmin.js",false));
  project.files.add(new ProjectFile("gwt/war/soundmanager2-setup.js","gwt/webapp/soundmanager2-setup.js",false));
  project.files.add(new ProjectFile("gwt/war/WEB-INF/web.xml","gwt/webapp/WEB-INF/web.xml",true));
  project.files.add(new ProjectFile("ios/src/IOSLauncher","ios/src/" + packageDir + "/IOSLauncher.java",true));
  project.files.add(new ProjectFile("ios/build.gradle",true));
  project.files.add(new ProjectFile("ios/Info.plist.xml",false));
  project.files.add(new ProjectFile("ios/robovm.properties"));
  project.files.add(new ProjectFile("ios/robovm.xml",false));
  Map<String,String> values=new HashMap<String,String>();
  values.put("%APP_NAME%",appName);
  values.put("%PACKAGE%",packageName);
  values.put("%MAIN_CLASS%",mainClass);
  values.put("%ANDROID_SDK%",sdkPath);
  copyAndReplace(outputDir,project,values);
  new File(outputDir,"gradlew").setExecutable(true);
}
