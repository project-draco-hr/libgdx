{
  StringBuffer jniSetupCode=new StringBuffer();
  StringBuffer jniCleanupCode=new StringBuffer();
  StringBuffer additionalArgs=new StringBuffer();
  StringBuffer wrapperArgs=new StringBuffer();
  emitJniSetupCode(jniSetupCode,javaMethod,additionalArgs,wrapperArgs);
  emitJniCleanupCode(jniCleanupCode,javaMethod,cMethod);
  boolean isManual=javaMethod.isManual();
  if (javaMethod.hasDisposableArgument() && javaMethod.getNativeCode().contains("return")) {
    if (isManual) {
      emitMethodSignature(buffer,javaMethod,cMethod,null,false);
      emitMethodBody(buffer,javaMethod);
      buffer.append("}\n\n");
    }
 else {
      String wrappedMethodName=emitMethodSignature(buffer,javaMethod,cMethod,additionalArgs.toString());
      emitMethodBody(buffer,javaMethod);
      buffer.append("}\n\n");
      emitMethodSignature(buffer,javaMethod,cMethod,null);
      if (!isManual) {
        buffer.append(jniSetupCode);
      }
      if (cMethod.getReturnType().equals("void")) {
        buffer.append("\t" + wrappedMethodName + "("+ wrapperArgs.toString()+ ");\n\n");
        if (!isManual) {
          buffer.append(jniCleanupCode);
        }
        buffer.append("\treturn;\n");
      }
 else {
        buffer.append("\t" + cMethod.getReturnType() + " "+ JNI_RETURN_VALUE+ " = "+ wrappedMethodName+ "("+ wrapperArgs.toString()+ ");\n\n");
        if (!isManual) {
          buffer.append(jniCleanupCode);
        }
        buffer.append("\treturn " + JNI_RETURN_VALUE + ";\n");
      }
      buffer.append("}\n\n");
    }
  }
 else {
    emitMethodSignature(buffer,javaMethod,cMethod,null);
    if (!isManual) {
      buffer.append(jniSetupCode);
    }
    emitMethodBody(buffer,javaMethod);
    if (!isManual) {
      buffer.append(jniCleanupCode);
    }
    buffer.append("}\n\n");
  }
}
