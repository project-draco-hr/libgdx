{
  Gdx.gl.glClearColor(0,0,0,0);
  Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
  renderer.setProjectionMatrix(camera.combined);
  renderer.begin(ShapeType.FilledCircle);
  renderer.setColor(1.0f,0,0,0.3f);
  renderer.filledCircle(-2 + lerpTarget.x,2 + lerpTarget.y,0.08f,16);
  renderer.end();
  renderer.begin(ShapeType.Line);
  renderer.setColor(Color.RED);
  renderVectorAt(0,0,Vector2.X);
  renderer.setColor(Color.GREEN);
  renderVectorAt(0,0,Vector2.Y);
  renderer.setColor(Color.YELLOW);
  renderVectorAt(0,0,sum);
  final float changeRate=Gdx.graphics.getDeltaTime();
  renderer.setColor(Color.WHITE);
  renderVectorAt(2,2,rotating);
  rotating.rotate(93 * changeRate);
  renderVectorAt(2,-2,scalingX);
  scalingX.set(0,MathUtils.sin((System.currentTimeMillis() - start) / 520.0f));
  renderVectorAt(2,-2,scalingY);
  scalingY.set(MathUtils.cos((System.currentTimeMillis() - start) / 260.0f),0);
  renderVectorAt(-2,2,lerping1);
  lerping1.lerp(lerpTarget,0.025f);
  if (lerping1.epsilonEquals(lerpTarget,0.05f)) {
    lerpTarget.set(-1.0f + MathUtils.random(2.0f),-1.0f + MathUtils.random(2.0f)).nor();
  }
  renderVectorAt(-2,-2,mash);
  mash.set(0,0).add(rotating).add(scalingX).add(scalingY).add(lerping1);
  renderer.end();
}
