{
  if (list.isTouchable())   return;
  stage.removeCaptureListener(hideListener);
  stage.addCaptureListener(hideListener);
  stage.addActor(this);
  selectBox.localToStageCoordinates(screenPosition.set(0,0));
  float itemHeight=list.getItemHeight();
  float height=itemHeight * (maxListCount <= 0 ? selectBox.items.size : Math.min(maxListCount,selectBox.items.size));
  Drawable scrollPaneBackground=getStyle().background;
  if (scrollPaneBackground != null)   height+=scrollPaneBackground.getTopHeight() + scrollPaneBackground.getBottomHeight();
  Drawable listBackground=list.getStyle().background;
  if (listBackground != null)   height+=listBackground.getTopHeight() + listBackground.getBottomHeight();
  float heightBelow=screenPosition.y;
  float heightAbove=stage.getCamera().viewportHeight - screenPosition.y - selectBox.getHeight();
  boolean below=true;
  if (height > heightBelow) {
    if (heightAbove > heightBelow) {
      below=false;
      height=Math.min(height,heightAbove);
    }
 else     height=heightBelow;
  }
  if (below)   setY(screenPosition.y - height);
 else   setY(screenPosition.y + selectBox.getHeight());
  setX(screenPosition.x);
  setWidth(selectBox.getWidth());
  setHeight(height);
  validate();
  scrollToCenter(0,list.getHeight() - selectBox.getSelectedIndex() * itemHeight - itemHeight / 2,0,0);
  updateVisualScroll();
  previousScrollFocus=null;
  Actor actor=stage.getScrollFocus();
  if (actor != null && !actor.isDescendantOf(this))   previousScrollFocus=actor;
  stage.setScrollFocus(this);
  list.setTouchable(Touchable.enabled);
  clearActions();
  selectBox.onShow(this,below);
}
