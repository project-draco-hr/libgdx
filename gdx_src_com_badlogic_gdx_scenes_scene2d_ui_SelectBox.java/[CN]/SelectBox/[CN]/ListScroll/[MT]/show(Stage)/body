{
  stage.addActor(this);
  SelectBox.this.localToStageCoordinates(tmpCoords.set(0,0));
  screenCoords.set(tmpCoords);
  float itemHeight=list.getItemHeight();
  float height=itemHeight * (maxListCount <= 0 ? items.size : Math.min(maxListCount,items.size));
  Drawable scrollPaneBackground=getStyle().background;
  if (scrollPaneBackground != null)   height+=scrollPaneBackground.getTopHeight() + scrollPaneBackground.getBottomHeight();
  Drawable listBackground=list.getStyle().background;
  if (listBackground != null)   height+=listBackground.getTopHeight() + listBackground.getBottomHeight();
  float heightBelow=tmpCoords.y;
  float heightAbove=stage.getCamera().viewportHeight - tmpCoords.y - SelectBox.this.getHeight();
  boolean below=true;
  if (height > heightBelow) {
    if (heightAbove > heightBelow) {
      below=false;
      height=Math.min(height,heightAbove);
    }
 else     height=heightBelow;
  }
  if (below)   setY(tmpCoords.y - height);
 else   setY(tmpCoords.y + SelectBox.this.getHeight());
  setX(tmpCoords.x);
  setWidth(SelectBox.this.getWidth());
  setHeight(height);
  validate();
  scrollToCenter(0,list.getHeight() - getSelectedIndex() * itemHeight - itemHeight / 2,0,0);
  updateVisualScroll();
  clearActions();
  getColor().a=0;
  addAction(fadeIn(0.3f,Interpolation.fade));
  previousScrollFocus=null;
  Actor actor=stage.getScrollFocus();
  if (actor != null && !actor.isDescendantOf(this))   previousScrollFocus=actor;
  stage.setScrollFocus(this);
}
