{
  setPixelSizes(0,size);
  SizeMetrics fontMetrics=face.getSize().getMetrics();
  int baseline=FreeType.toInt(fontMetrics.getAscender());
  if (face.getCharIndex(c) == 0) {
    return null;
  }
  if (!face.loadChar(c,FreeType.FT_LOAD_DEFAULT)) {
    throw new GdxRuntimeException("Unable to load character!");
  }
  GlyphSlot slot=face.getGlyph();
  Bitmap bitmap;
  if (bitmapped) {
    bitmap=slot.getBitmap();
  }
 else   if (!slot.renderGlyph(FreeType.FT_RENDER_MODE_NORMAL)) {
    bitmap=null;
  }
 else {
    bitmap=slot.getBitmap();
  }
  GlyphMetrics metrics=slot.getMetrics();
  Glyph glyph=new Glyph();
  if (bitmap != null) {
    glyph.width=bitmap.getWidth();
    glyph.height=bitmap.getRows();
  }
 else {
    glyph.width=0;
    glyph.height=0;
  }
  glyph.xoffset=slot.getBitmapLeft();
  glyph.yoffset=flip ? -slot.getBitmapTop() + baseline : -(glyph.height - slot.getBitmapTop()) - baseline;
  glyph.xadvance=FreeType.toInt(metrics.getHoriAdvance());
  glyph.srcX=0;
  glyph.srcY=0;
  glyph.id=c;
  GlyphAndBitmap result=new GlyphAndBitmap();
  result.glyph=glyph;
  result.bitmap=bitmap;
  return result;
}
