{
  name=fontFile.pathWithoutExtension();
  int fileSize=(int)fontFile.length();
  library=FreeType.initFreeType();
  if (library == null)   throw new GdxRuntimeException("Couldn't initialize FreeType");
  ByteBuffer buffer;
  InputStream input=fontFile.read();
  try {
    if (fileSize == 0) {
      byte[] data=StreamUtils.copyStreamToByteArray(input,fileSize > 0 ? (int)(fileSize * 1.5f) : 1024 * 16);
      buffer=BufferUtils.newUnsafeByteBuffer(data.length);
      BufferUtils.copy(data,0,buffer,data.length);
    }
 else {
      buffer=BufferUtils.newUnsafeByteBuffer(fileSize);
      StreamUtils.copyStream(input,buffer);
    }
  }
 catch (  IOException ex) {
    throw new GdxRuntimeException(ex);
  }
 finally {
    StreamUtils.closeQuietly(input);
  }
  face=library.newMemoryFace(buffer,0);
  if (face == null)   throw new GdxRuntimeException("Couldn't create face for font: " + fontFile);
  if (checkForBitmapFont())   return;
  setPixelSizes(0,15);
}
