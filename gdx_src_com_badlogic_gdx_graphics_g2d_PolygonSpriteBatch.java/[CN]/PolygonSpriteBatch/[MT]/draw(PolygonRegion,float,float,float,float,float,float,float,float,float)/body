{
  if (!drawing)   throw new IllegalStateException("PolygonSpriteBatch.begin must be called before draw.");
  final short[] triangles=this.triangles;
  final short[] regionTriangles=region.triangles;
  final int regionTrianglesLength=regionTriangles.length;
  final float[] regionVertices=region.vertices;
  final int regionVerticesLength=regionVertices.length;
  final TextureRegion textureRegion=region.region;
  Texture texture=textureRegion.texture;
  if (texture != lastTexture)   switchTexture(texture);
 else   if (triangleIndex + regionTrianglesLength > triangles.length || vertexIndex + regionVerticesLength * VERTEX_SIZE / 2 > vertices.length)   flush();
  int triangleIndex=this.triangleIndex;
  int vertexIndex=this.vertexIndex;
  final int startVertex=vertexIndex / VERTEX_SIZE;
  for (int i=0; i < regionTrianglesLength; i++)   triangles[triangleIndex++]=(short)(regionTriangles[i] + startVertex);
  this.triangleIndex=triangleIndex;
  final float[] vertices=this.vertices;
  final float color=this.color;
  final float[] textureCoords=region.textureCoords;
  final float worldOriginX=x + originX;
  final float worldOriginY=y + originY;
  final float sX=width / textureRegion.regionWidth;
  final float sY=height / textureRegion.regionHeight;
  final float cos=MathUtils.cosDeg(rotation);
  final float sin=MathUtils.sinDeg(rotation);
  float fx, fy;
  for (int i=0; i < regionVerticesLength; i+=2) {
    fx=(regionVertices[i] * sX - originX) * scaleX;
    fy=(regionVertices[i + 1] * sY - originY) * scaleY;
    vertices[vertexIndex++]=cos * fx - sin * fy + worldOriginX;
    vertices[vertexIndex++]=sin * fx + cos * fy + worldOriginY;
    vertices[vertexIndex++]=color;
    vertices[vertexIndex++]=textureCoords[i];
    vertices[vertexIndex++]=textureCoords[i + 1];
  }
  this.vertexIndex=vertexIndex;
}
