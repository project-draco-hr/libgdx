{
  OrderedMap<String,FieldMetadata> fields=typeToFields.get(type);
  if (fields != null)   return fields;
  ArrayList<Field> allFields=new ArrayList();
  Class nextClass=type;
  while (nextClass != Object.class) {
    Collections.addAll(allFields,ClassReflection.getDeclaredFields(nextClass));
    nextClass=nextClass.getSuperclass();
  }
  OrderedMap<String,FieldMetadata> nameToField=new OrderedMap();
  for (int i=0, n=allFields.size(); i < n; i++) {
    Field field=allFields.get(i);
    if (field.isTransient())     continue;
    if (field.isStatic())     continue;
    if (field.isSynthetic())     continue;
    if (!field.isAccessible()) {
      try {
        field.setAccessible(true);
      }
 catch (      AccessControlException ex) {
        continue;
      }
    }
    nameToField.put(field.getName(),new FieldMetadata(field));
  }
  typeToFields.put(type,nameToField);
  return nameToField;
}
