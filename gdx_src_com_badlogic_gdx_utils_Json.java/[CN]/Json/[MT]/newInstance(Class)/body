{
  try {
    return type.newInstance();
  }
 catch (  Exception ex) {
    try {
      Constructor constructor=type.getDeclaredConstructor();
      constructor.setAccessible(true);
      return constructor.newInstance();
    }
 catch (    SecurityException ignored) {
    }
catch (    NoSuchMethodException ignored) {
      if (type.isMemberClass() && !Modifier.isStatic(type.getModifiers()))       throw new SerializationException("Class cannot be created (non-static member class): " + type.getName(),ex);
 else       throw new SerializationException("Class cannot be created (missing no-arg constructor): " + type.getName(),ex);
    }
catch (    Exception privateConstructorException) {
      ex=privateConstructorException;
    }
    throw new SerializationException("Error constructing instance of class: " + type.getName(),ex);
  }
}
