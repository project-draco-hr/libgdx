{
  if (object instanceof ObjectMap) {
    ObjectMap map=(ObjectMap)object;
    if (map.size == 0) {
      buffer.append("{}");
    }
 else {
      boolean newLines=!fieldsOnSameLine || !isFlat(map) || map.size > 4;
      buffer.append(newLines ? "{\n" : "{ ");
      Array<String> keys=(Array)map.keys().toArray();
      keys.sort();
      int i=0;
      for (      String key : keys) {
        if (newLines)         indent(indent,buffer);
        buffer.append(outputType.quoteName(key));
        buffer.append(": ");
        prettyPrint(map.get(key),buffer,indent + 1,fieldsOnSameLine);
        if (i++ < map.size - 1)         buffer.append(",");
        buffer.append(newLines ? '\n' : ' ');
      }
      if (newLines)       indent(indent - 1,buffer);
      buffer.append('}');
    }
  }
 else   if (object instanceof Array) {
    Array array=(Array)object;
    if (array.size == 0) {
      buffer.append("[]");
    }
 else {
      boolean newLines=!fieldsOnSameLine || !isFlat(array) || array.size > 4;
      buffer.append(newLines ? "[\n" : "[ ");
      for (int i=0, n=array.size; i < n; i++) {
        if (newLines)         indent(indent,buffer);
        prettyPrint(array.get(i),buffer,indent + 1,fieldsOnSameLine);
        if (i < array.size - 1)         buffer.append(",");
        buffer.append(newLines ? '\n' : ' ');
      }
      if (newLines)       indent(indent - 1,buffer);
      buffer.append(']');
    }
  }
 else   if (object instanceof String) {
    buffer.append(outputType.quoteValue((String)object));
  }
 else   if (object instanceof Float) {
    Float floatValue=(Float)object;
    int intValue=floatValue.intValue();
    buffer.append(floatValue - intValue == 0 ? intValue : object);
  }
 else   if (object instanceof Boolean) {
    buffer.append(object);
  }
 else   if (object == null) {
    buffer.append("null");
  }
 else   throw new SerializationException("Unknown object type: " + object.getClass());
}
