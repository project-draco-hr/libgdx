{
  ObjectMap<String,Object> jsonMap=(ObjectMap)jsonData;
  Class type=object.getClass();
  ObjectMap<String,FieldMetadata> fields=typeToFields.get(type);
  if (fields == null)   fields=cacheFields(type);
  for (  Entry<String,Object> entry : jsonMap.entries()) {
    FieldMetadata metadata=fields.get(entry.key);
    Field field=metadata.field;
    if (ignoreUnknownFields) {
      if (debug)       System.out.println("Ignoring unknown field: " + entry.key + " ("+ type.getName()+ ")");
    }
 else     if (field == null)     throw new SerializationException("Unable to find field: " + entry.key + " ("+ type.getName()+ ")");
    if (entry.value == null)     continue;
    try {
      field.set(object,readValue(field.getType(),metadata.elementType,entry.value));
    }
 catch (    IllegalAccessException ex) {
      throw new SerializationException("Error accessing field: " + field.getName() + " ("+ type.getName()+ ")",ex);
    }
catch (    SerializationException ex) {
      ex.addTrace(field.getName() + " (" + type.getName()+ ")");
      throw ex;
    }
catch (    RuntimeException runtimeEx) {
      SerializationException ex=new SerializationException(runtimeEx);
      ex.addTrace(field.getName() + " (" + type.getName()+ ")");
      throw ex;
    }
  }
}
