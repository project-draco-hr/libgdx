{
  Class type=object.getClass();
  ObjectMap<String,FieldMetadata> fields=typeToFields.get(type);
  if (fields == null)   fields=cacheFields(type);
  for (JsonValue child=jsonMap.child; child != null; child=child.next) {
    FieldMetadata metadata=fields.get(child.name());
    if (metadata == null) {
      if (ignoreUnknownFields) {
        if (debug)         System.out.println("Ignoring unknown field: " + child.name() + " ("+ type.getName()+ ")");
        continue;
      }
 else       throw new SerializationException("Field not found: " + child.name() + " ("+ type.getName()+ ")");
    }
    Field field=metadata.field;
    try {
      field.set(object,readValue(field.getType(),metadata.elementType,child));
    }
 catch (    ReflectionException ex) {
      throw new SerializationException("Error accessing field: " + field.getName() + " ("+ type.getName()+ ")",ex);
    }
catch (    SerializationException ex) {
      ex.addTrace(field.getName() + " (" + type.getName()+ ")");
      throw ex;
    }
catch (    RuntimeException runtimeEx) {
      SerializationException ex=new SerializationException(runtimeEx);
      ex.addTrace(field.getName() + " (" + type.getName()+ ")");
      throw ex;
    }
  }
}
