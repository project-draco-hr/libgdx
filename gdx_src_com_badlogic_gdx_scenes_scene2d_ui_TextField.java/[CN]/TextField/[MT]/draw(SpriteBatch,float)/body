{
  final BitmapFont font=style.font;
  final Color fontColor=style.fontColor;
  final NinePatch background=style.background;
  final TextureRegion selection=style.selection;
  final NinePatch cursorPatch=style.cursor;
  batch.setColor(color.r,color.g,color.b,color.a * parentAlpha);
  background.draw(batch,x,y,width,height);
  float textY=(int)(height / 2 + textBounds.height / 2 + font.getDescent());
  calculateOffsets();
  boolean focused=parent.keyboardFocusedActor == this;
  if (focused && hasSelection) {
    batch.draw(selection,x + selectionX + background.getLeftWidth()+ renderOffset,y + textY - textBounds.height - font.getDescent() / 2,selectionWidth,textBounds.height);
  }
  if (text.length() == 0) {
    if (!focused) {
      font.setColor(0.7f,0.7f,0.7f,parentAlpha);
      font.draw(batch,messageText,x + background.getLeftWidth(),y + textY);
    }
  }
 else {
    font.setColor(fontColor.r,fontColor.g,fontColor.b,fontColor.a * parentAlpha);
    font.draw(batch,text,x + background.getLeftWidth() + textOffset,y + textY,visibleTextStart,visibleTextEnd);
  }
  if (focused) {
    blink();
    if (cursorOn) {
      cursorPatch.draw(batch,x + background.getLeftWidth() + glyphPositions.get(cursor)+ renderOffset - 1,y + textY - textBounds.height - font.getDescent(),cursorPatch.getTotalWidth(),textBounds.height + font.getDescent() / 2);
    }
  }
}
