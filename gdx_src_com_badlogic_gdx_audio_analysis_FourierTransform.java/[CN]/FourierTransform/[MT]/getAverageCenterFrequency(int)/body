{
  if (whichAverage == LINAVG) {
    int avgWidth=(int)spectrum.length / averages.length;
    int centerBinIndex=i * avgWidth + avgWidth / 2;
    return indexToFreq(centerBinIndex);
  }
 else   if (whichAverage == LOGAVG) {
    int octave=i / avgPerOctave;
    int offset=i % avgPerOctave;
    float lowFreq, hiFreq, freqStep;
    if (octave == 0) {
      lowFreq=0;
    }
 else {
      lowFreq=(sampleRate / 2) / (float)Math.pow(2,octaves - octave);
    }
    hiFreq=(sampleRate / 2) / (float)Math.pow(2,octaves - octave - 1);
    freqStep=(hiFreq - lowFreq) / avgPerOctave;
    float f=lowFreq + offset * freqStep;
    return f + freqStep / 2;
  }
  return 0;
}
