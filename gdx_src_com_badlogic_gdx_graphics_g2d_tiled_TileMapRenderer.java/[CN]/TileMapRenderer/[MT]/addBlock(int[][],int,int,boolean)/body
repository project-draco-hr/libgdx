{
  cache.beginCache();
  int firstCol=blockCol * tilesPerBlockX;
  int firstRow=blockRow * tilesPerBlockY;
  int lastCol=firstCol + tilesPerBlockX;
  int lastRow=firstRow + tilesPerBlockY;
  for (int row=firstRow; row < lastRow && row < layer.length; row++) {
    for (int col=firstCol; col < lastCol && col < layer[row].length; col++) {
      int tile=layer[row][col];
      if (tile != 0) {
        if (blended == blendedTiles.contains(tile)) {
          TextureRegion reg=atlas.getRegion(tile);
          if (reg != null) {
            if (!isSimpleTileAtlas) {
              AtlasRegion region=(AtlasRegion)reg;
              cache.add(region,col * unitsPerTileX,(layer.length - row - 1) * unitsPerTileY,(float)region.offsetX * unitsPerTileX / tileWidth,(float)(region.offsetY) * unitsPerTileY / (float)tileHeight,region.packedWidth,region.packedHeight,unitsPerTileX / (float)tileWidth,unitsPerTileY / (float)tileHeight,(region.rotate) ? 90 : 0);
            }
 else {
              cache.add(reg,col * unitsPerTileX,(layer.length - row - 1) * unitsPerTileY,0,0,reg.getRegionWidth(),reg.getRegionHeight(),unitsPerTileX / tileWidth,unitsPerTileY / tileHeight,0);
            }
          }
        }
      }
    }
  }
  return cache.endCache();
}
