{
  super.create();
  final Model sphereModel=objLoader.loadObj(Gdx.files.internal("data/sphere.obj"));
  final BoundingBox sphereBounds=new BoundingBox();
  sphereModel.getBoundingBox(sphereBounds);
  final BulletConstructor sphereConstructor=new BulletConstructor(sphereModel,0.25f,new btSphereShape(sphereBounds.getDimensions().x * 0.5f));
  sphereConstructor.bodyInfo.setM_restitution(1f);
  world.addConstructor("sphere",sphereConstructor);
  final Model sceneModel=objLoader.loadObj(Gdx.files.internal("data/scene.obj"));
  final BulletConstructor sceneConstructor=new BulletConstructor(sceneModel,0f,new btBvhTriangleMeshShape(true,sceneModel));
  sceneConstructor.bodyInfo.setM_restitution(0.25f);
  world.addConstructor("scene",sceneConstructor);
  world.add("scene",(new Matrix4()).setToTranslation(0f,2f,0f).rotate(Vector3.Y,-90)).getColor().set(0.25f + 0.5f * (float)Math.random(),0.25f + 0.5f * (float)Math.random(),0.25f + 0.5f * (float)Math.random(),1f);
  world.add("ground",0f,0f,0f).getColor().set(0.25f + 0.5f * (float)Math.random(),0.25f + 0.5f * (float)Math.random(),0.25f + 0.5f * (float)Math.random(),1f);
  for (float x=-3; x < 7; x++) {
    for (float z=-5; z < 5; z++) {
      world.add("sphere",x,10f + (float)Math.random() * 0.1f,z).getColor().set(0.5f + 0.5f * (float)Math.random(),0.5f + 0.5f * (float)Math.random(),0.5f + 0.5f * (float)Math.random(),1f);
    }
  }
}
