{
  btIndexedMesh indexedMesh=new btIndexedMesh();
  indexedMesh.setM_indexType(PHY_ScalarType.PHY_SHORT);
  indexedMesh.setM_numTriangles(mesh.getNumIndices() / 3);
  indexedMesh.setM_numVertices(mesh.getNumVertices());
  indexedMesh.setM_triangleIndexStride(6);
  indexedMesh.setM_vertexStride(mesh.getVertexSize());
  indexedMesh.setM_vertexType(PHY_ScalarType.PHY_FLOAT);
  indexedMesh.setTriangleIndexBase(mesh.getIndicesBuffer());
  indexedMesh.setVertexBase(mesh.getVerticesBuffer());
  btTriangleIndexVertexArray meshInterface=new TestTriangleIndexVertexArray();
  meshInterface.addIndexedMesh(indexedMesh,PHY_ScalarType.PHY_SHORT);
  return new TestBvhTriangleMeshShape(meshInterface,true);
}
