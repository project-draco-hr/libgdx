{
  transform.getTranslation(Vector3.tmp);
  float dist=Vector3.tmp2.set(Vector3.tmp.x - camera.position.x,Vector3.tmp.y - camera.position.y,Vector3.tmp.z - camera.position.z).len();
  if (Vector3.tmp2.div(dist).dot(camera.direction) < 0)   dist=-dist;
  for (  Renderable renderable : model.getParts(dist)) {
    final RenderInstance instance=renderInstancePool.obtain(renderable,transform,dist,lights,null);
    render(instance);
    renderInstancePool.free(instance);
  }
}
