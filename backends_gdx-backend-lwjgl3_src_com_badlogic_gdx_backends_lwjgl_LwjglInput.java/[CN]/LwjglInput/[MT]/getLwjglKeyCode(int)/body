{
switch (gdxKeyCode) {
case Input.Keys.APOSTROPHE:
    return Keyboard.KEY_APOSTROPHE;
case Input.Keys.LEFT_BRACKET:
  return Keyboard.KEY_LBRACKET;
case Input.Keys.RIGHT_BRACKET:
return Keyboard.KEY_RBRACKET;
case Input.Keys.GRAVE:
return Keyboard.KEY_GRAVE;
case Input.Keys.STAR:
return Keyboard.KEY_MULTIPLY;
case Input.Keys.NUM:
return Keyboard.KEY_NUMLOCK;
case Input.Keys.AT:
return Keyboard.KEY_AT;
case Input.Keys.EQUALS:
return Keyboard.KEY_EQUALS;
case Input.Keys.SYM:
return Keyboard.KEY_LMETA;
case Input.Keys.NUM_0:
return Keyboard.KEY_0;
case Input.Keys.NUM_1:
return Keyboard.KEY_1;
case Input.Keys.NUM_2:
return Keyboard.KEY_2;
case Input.Keys.NUM_3:
return Keyboard.KEY_3;
case Input.Keys.NUM_4:
return Keyboard.KEY_4;
case Input.Keys.NUM_5:
return Keyboard.KEY_5;
case Input.Keys.NUM_6:
return Keyboard.KEY_6;
case Input.Keys.NUM_7:
return Keyboard.KEY_7;
case Input.Keys.NUM_8:
return Keyboard.KEY_8;
case Input.Keys.NUM_9:
return Keyboard.KEY_9;
case Input.Keys.A:
return Keyboard.KEY_A;
case Input.Keys.B:
return Keyboard.KEY_B;
case Input.Keys.C:
return Keyboard.KEY_C;
case Input.Keys.D:
return Keyboard.KEY_D;
case Input.Keys.E:
return Keyboard.KEY_E;
case Input.Keys.F:
return Keyboard.KEY_F;
case Input.Keys.G:
return Keyboard.KEY_G;
case Input.Keys.H:
return Keyboard.KEY_H;
case Input.Keys.I:
return Keyboard.KEY_I;
case Input.Keys.J:
return Keyboard.KEY_J;
case Input.Keys.K:
return Keyboard.KEY_K;
case Input.Keys.L:
return Keyboard.KEY_L;
case Input.Keys.M:
return Keyboard.KEY_M;
case Input.Keys.N:
return Keyboard.KEY_N;
case Input.Keys.O:
return Keyboard.KEY_O;
case Input.Keys.P:
return Keyboard.KEY_P;
case Input.Keys.Q:
return Keyboard.KEY_Q;
case Input.Keys.R:
return Keyboard.KEY_R;
case Input.Keys.S:
return Keyboard.KEY_S;
case Input.Keys.T:
return Keyboard.KEY_T;
case Input.Keys.U:
return Keyboard.KEY_U;
case Input.Keys.V:
return Keyboard.KEY_V;
case Input.Keys.W:
return Keyboard.KEY_W;
case Input.Keys.X:
return Keyboard.KEY_X;
case Input.Keys.Y:
return Keyboard.KEY_Y;
case Input.Keys.Z:
return Keyboard.KEY_Z;
case Input.Keys.ALT_LEFT:
return Keyboard.KEY_LMENU;
case Input.Keys.ALT_RIGHT:
return Keyboard.KEY_RMENU;
case Input.Keys.BACKSLASH:
return Keyboard.KEY_BACKSLASH;
case Input.Keys.COMMA:
return Keyboard.KEY_COMMA;
case Input.Keys.FORWARD_DEL:
return Keyboard.KEY_DELETE;
case Input.Keys.DPAD_LEFT:
return Keyboard.KEY_LEFT;
case Input.Keys.DPAD_RIGHT:
return Keyboard.KEY_RIGHT;
case Input.Keys.DPAD_UP:
return Keyboard.KEY_UP;
case Input.Keys.DPAD_DOWN:
return Keyboard.KEY_DOWN;
case Input.Keys.ENTER:
return Keyboard.KEY_RETURN;
case Input.Keys.HOME:
return Keyboard.KEY_HOME;
case Input.Keys.END:
return Keyboard.KEY_END;
case Input.Keys.PAGE_DOWN:
return Keyboard.KEY_NEXT;
case Input.Keys.PAGE_UP:
return Keyboard.KEY_PRIOR;
case Input.Keys.INSERT:
return Keyboard.KEY_INSERT;
case Input.Keys.MINUS:
return Keyboard.KEY_MINUS;
case Input.Keys.PERIOD:
return Keyboard.KEY_PERIOD;
case Input.Keys.PLUS:
return Keyboard.KEY_ADD;
case Input.Keys.SEMICOLON:
return Keyboard.KEY_SEMICOLON;
case Input.Keys.SHIFT_LEFT:
return Keyboard.KEY_LSHIFT;
case Input.Keys.SHIFT_RIGHT:
return Keyboard.KEY_RSHIFT;
case Input.Keys.SLASH:
return Keyboard.KEY_SLASH;
case Input.Keys.SPACE:
return Keyboard.KEY_SPACE;
case Input.Keys.TAB:
return Keyboard.KEY_TAB;
case Input.Keys.DEL:
return Keyboard.KEY_BACK;
case Input.Keys.CONTROL_LEFT:
return Keyboard.KEY_LCONTROL;
case Input.Keys.CONTROL_RIGHT:
return Keyboard.KEY_RCONTROL;
case Input.Keys.ESCAPE:
return Keyboard.KEY_ESCAPE;
case Input.Keys.F1:
return Keyboard.KEY_F1;
case Input.Keys.F2:
return Keyboard.KEY_F2;
case Input.Keys.F3:
return Keyboard.KEY_F3;
case Input.Keys.F4:
return Keyboard.KEY_F4;
case Input.Keys.F5:
return Keyboard.KEY_F5;
case Input.Keys.F6:
return Keyboard.KEY_F6;
case Input.Keys.F7:
return Keyboard.KEY_F7;
case Input.Keys.F8:
return Keyboard.KEY_F8;
case Input.Keys.F9:
return Keyboard.KEY_F9;
case Input.Keys.F10:
return Keyboard.KEY_F10;
case Input.Keys.F11:
return Keyboard.KEY_F11;
case Input.Keys.F12:
return Keyboard.KEY_F12;
case Input.Keys.COLON:
return Keyboard.KEY_COLON;
case Input.Keys.NUMPAD_0:
return Keyboard.KEY_NUMPAD0;
case Input.Keys.NUMPAD_1:
return Keyboard.KEY_NUMPAD1;
case Input.Keys.NUMPAD_2:
return Keyboard.KEY_NUMPAD2;
case Input.Keys.NUMPAD_3:
return Keyboard.KEY_NUMPAD3;
case Input.Keys.NUMPAD_4:
return Keyboard.KEY_NUMPAD4;
case Input.Keys.NUMPAD_5:
return Keyboard.KEY_NUMPAD5;
case Input.Keys.NUMPAD_6:
return Keyboard.KEY_NUMPAD6;
case Input.Keys.NUMPAD_7:
return Keyboard.KEY_NUMPAD7;
case Input.Keys.NUMPAD_8:
return Keyboard.KEY_NUMPAD8;
case Input.Keys.NUMPAD_9:
return Keyboard.KEY_NUMPAD9;
default :
return Keyboard.KEY_NONE;
}
}
