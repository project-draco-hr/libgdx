{
  int viewHeight=Gdx.graphics.getHeight();
  Gdx.gl.glClearColor(1,1,1,1);
  Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
  spriteBatch.begin();
  String text="Sphinx of black quartz.";
  font.setColor(Color.RED);
  float x=100, y=100;
  float alignmentWidth;
  smallFont.setColor(Color.BLACK);
  smallFont.draw(spriteBatch,"draw position",20,viewHeight - 0);
  smallFont.setColor(Color.BLUE);
  smallFont.draw(spriteBatch,"bounds",20,viewHeight - 20);
  smallFont.setColor(Color.MAGENTA);
  smallFont.draw(spriteBatch,"baseline",20,viewHeight - 40);
  smallFont.setColor(Color.GREEN);
  smallFont.draw(spriteBatch,"x height",20,viewHeight - 60);
  smallFont.setColor(Color.CYAN);
  smallFont.draw(spriteBatch,"ascent",20,viewHeight - 80);
  smallFont.setColor(Color.RED);
  smallFont.draw(spriteBatch,"descent",20,viewHeight - 100);
  smallFont.setColor(Color.ORANGE);
  smallFont.draw(spriteBatch,"line height",20,viewHeight - 120);
  smallFont.setColor(Color.LIGHT_GRAY);
  smallFont.draw(spriteBatch,"cap height",20,viewHeight - 140);
  font.setColor(Color.BLACK);
  TextBounds bounds=font.drawMultiLine(spriteBatch,text,x,y);
  spriteBatch.end();
  renderer.begin(ShapeType.FilledRectangle);
  renderer.setColor(Color.BLACK);
  renderer.filledRect(x - 3,y - 3,6,6);
  renderer.end();
  float baseline=y - font.getCapHeight();
  renderer.begin(ShapeType.Line);
  renderer.setColor(Color.LIGHT_GRAY);
  renderer.line(0,y,9999,y);
  renderer.setColor(Color.MAGENTA);
  renderer.line(0,baseline,9999,baseline);
  renderer.setColor(Color.GREEN);
  renderer.line(0,baseline + font.getXHeight(),9999,baseline + font.getXHeight());
  renderer.setColor(Color.CYAN);
  renderer.line(0,y + font.getAscent(),9999,y + font.getAscent());
  renderer.setColor(Color.RED);
  renderer.line(0,baseline + font.getDescent(),9999,baseline + font.getDescent());
  renderer.setColor(Color.ORANGE);
  renderer.line(0,y - font.getLineHeight(),9999,y - font.getLineHeight());
  renderer.end();
  renderer.begin(ShapeType.Rectangle);
  renderer.setColor(Color.BLUE);
  renderer.rect(x,y,bounds.width,-bounds.height);
  renderer.end();
}
