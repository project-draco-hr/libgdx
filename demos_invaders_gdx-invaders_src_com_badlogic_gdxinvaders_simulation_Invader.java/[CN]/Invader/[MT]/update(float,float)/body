{
  movedDistance+=delta * INVADER_VELOCITY * speedMultiplier;
  if (state == STATE_MOVE_LEFT) {
    transform.trn(-delta * INVADER_VELOCITY * speedMultiplier,0,0);
    if (movedDistance > Simulation.PLAYFIELD_MAX_X) {
      state=STATE_MOVE_DOWN;
      movedDistance=0;
      wasLastStateLeft=true;
    }
  }
  if (state == STATE_MOVE_RIGHT) {
    transform.trn(delta * INVADER_VELOCITY * speedMultiplier,0,0);
    if (movedDistance > Simulation.PLAYFIELD_MAX_X) {
      state=STATE_MOVE_DOWN;
      movedDistance=0;
      wasLastStateLeft=false;
    }
  }
  if (state == STATE_MOVE_DOWN) {
    transform.trn(0,0,delta * INVADER_VELOCITY * speedMultiplier);
    if (movedDistance > 1) {
      if (wasLastStateLeft)       state=STATE_MOVE_RIGHT;
 else       state=STATE_MOVE_LEFT;
      movedDistance=0;
    }
  }
  transform.rotate(0,1,0,INVADER_ROTATION * delta);
}
