{
  Gdx.gl.glClearColor(0.55f,0.55f,0.55f,1f);
  Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
  camera.update();
  shapeRenderer.setProjectionMatrix(camera.combined);
  batch.setProjectionMatrix(camera.combined);
  shapeRenderer.setColor(Color.BLUE);
  Gdx.gl20.glLineWidth(2);
  MapLayer layer=map.getLayers().get("Objects");
  for (  MapObject mapObject : layer.getObjects()) {
    if (mapObject instanceof TextureMapObject) {
      TextureMapObject tmObject=(TextureMapObject)mapObject;
      batch.begin();
      batch.draw(tmObject.getTextureRegion(),tmObject.getX(),tmObject.getY(),tmObject.getOriginX(),tmObject.getOriginY(),tmObject.getTextureRegion().getRegionWidth(),tmObject.getTextureRegion().getRegionHeight(),tmObject.getScaleX(),tmObject.getScaleY(),tmObject.getOpacity());
      batch.end();
    }
 else     if (mapObject instanceof EllipseMapObject) {
      shapeRenderer.begin(ShapeRenderer.ShapeType.Filled);
      Ellipse ellipse=((EllipseMapObject)mapObject).getEllipse();
      shapeRenderer.ellipse(ellipse.x,ellipse.y,ellipse.width,ellipse.height);
      shapeRenderer.end();
    }
 else     if (mapObject instanceof RectangleMapObject) {
      shapeRenderer.begin(ShapeRenderer.ShapeType.Filled);
      Rectangle rectangle=((RectangleMapObject)mapObject).getRectangle();
      shapeRenderer.rect(rectangle.x,rectangle.y,rectangle.width,rectangle.height);
      shapeRenderer.end();
    }
 else     if (mapObject instanceof PolygonMapObject) {
      shapeRenderer.begin(ShapeRenderer.ShapeType.Line);
      Polygon polygon=((PolygonMapObject)mapObject).getPolygon();
      shapeRenderer.polygon(polygon.getTransformedVertices());
      shapeRenderer.end();
    }
  }
  batch.begin();
  font.draw(batch,"FPS: " + Gdx.graphics.getFramesPerSecond(),10,20);
  batch.end();
}
