{
  ArrayList<Vector3> tangents=new ArrayList<Vector3>();
  if (controlPoints.size() < 4)   return tangents;
  Vector3 T1=new Vector3();
  Vector3 T2=new Vector3();
  for (int i=1; i <= controlPoints.size() - 3; i++) {
    float increment=1.0f / (numPoints + 1);
    float t=increment;
    T1.set(controlPoints.get(i + 1)).sub(controlPoints.get(i - 1)).mul(0.5f);
    T2.set(controlPoints.get(i + 2)).sub(controlPoints.get(i)).mul(0.5f);
    Vector3 normal=new Vector3(T1).nor();
    float x=normal.x;
    normal.x=normal.y;
    normal.y=-x;
    tangents.add(normal);
    for (int j=0; j < numPoints; j++) {
      float h1=6 * t * t - 6 * t;
      float h2=-6 * t * t + 6 * t;
      float h3=3 * t * t - 4 * t + 1;
      float h4=3 * t * t - 2 * t;
      Vector3 point=new Vector3(controlPoints.get(i)).mul(h1);
      point.add(controlPoints.get(i + 1).tmp().mul(h2));
      point.add(T1.tmp().mul(h3));
      point.add(T2.tmp().mul(h4));
      point.nor();
      x=point.x;
      point.x=point.y;
      point.y=-x;
      tangents.add(point);
      t+=increment;
    }
  }
  return tangents;
}
