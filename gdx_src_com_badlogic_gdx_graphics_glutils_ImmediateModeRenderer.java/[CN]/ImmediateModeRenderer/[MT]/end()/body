{
  if (idxPos == 0)   return;
  GL10 gl=Gdx.gl10;
  gl.glEnableClientState(GL10.GL_VERTEX_ARRAY);
  positionsBuffer.clear();
  BufferUtils.copy(positions,positionsBuffer,idxPos,0);
  gl.glVertexPointer(3,GL10.GL_FLOAT,0,positionsBuffer);
  if (idxCols > 0) {
    gl.glEnableClientState(GL10.GL_COLOR_ARRAY);
    colorsBuffer.clear();
    BufferUtils.copy(colors,colorsBuffer,idxCols,0);
    gl.glColorPointer(4,GL10.GL_FLOAT,0,colorsBuffer);
  }
  if (idxNors > 0) {
    gl.glEnableClientState(GL10.GL_NORMAL_ARRAY);
    normalsBuffer.clear();
    BufferUtils.copy(normals,normalsBuffer,idxNors,0);
    gl.glNormalPointer(GL10.GL_FLOAT,0,normalsBuffer);
  }
  if (idxTexCoords > 0) {
    gl.glClientActiveTexture(GL10.GL_TEXTURE0);
    gl.glEnableClientState(GL10.GL_TEXTURE_COORD_ARRAY);
    texCoordsBuffer.clear();
    BufferUtils.copy(texCoords,texCoordsBuffer,idxTexCoords,0);
    gl.glTexCoordPointer(2,GL10.GL_FLOAT,0,texCoordsBuffer);
  }
  gl.glDrawArrays(primitiveType,0,idxPos / 3);
  if (idxCols > 0)   gl.glDisableClientState(GL10.GL_COLOR_ARRAY);
  if (idxNors > 0)   gl.glDisableClientState(GL10.GL_NORMAL_ARRAY);
  if (idxTexCoords > 0)   gl.glDisableClientState(GL10.GL_TEXTURE_COORD_ARRAY);
}
