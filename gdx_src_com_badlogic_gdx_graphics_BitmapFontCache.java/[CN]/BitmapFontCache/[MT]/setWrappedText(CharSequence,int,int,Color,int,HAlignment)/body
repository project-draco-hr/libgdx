{
  BitmapFont font=this.font;
  int length=str.length();
  reset(length);
  final float color=tint.toFloatBits();
  y+=font.yOffset;
  int down=font.down;
  int start=0;
  int numLines=0;
  while (start < length) {
    int lineEnd=start + font.computeVisibleGlpyhs(str,start,BitmapFont.indexOf(str,'\n',start),wrapWidth);
    if (lineEnd < length) {
      while (lineEnd > start) {
        char ch=str.charAt(lineEnd);
        if (ch == ' ' || ch == '\n')         break;
        lineEnd--;
      }
    }
    if (lineEnd == start)     lineEnd++;
    int xOffset=0;
    if (alignment != HAlignment.LEFT) {
      int lineWidth=font.computeTextWidth(str,start,lineEnd);
      xOffset=wrapWidth - lineWidth;
      if (alignment == HAlignment.CENTER)       xOffset/=2;
    }
    addToCache(str,x + xOffset,y,color,start,lineEnd);
    start=lineEnd + 1;
    y+=down;
    numLines++;
  }
  width=wrapWidth;
  height=start - y;
}
