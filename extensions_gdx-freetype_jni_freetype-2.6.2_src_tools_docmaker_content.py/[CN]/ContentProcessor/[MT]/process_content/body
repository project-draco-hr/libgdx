def process_content(self, content):
    'Process a block content and return a list of DocMarkup objects\n           corresponding to it.'
    markup = None
    markup_lines = []
    first = 1
    for line in content:
        found = None
        for t in re_markup_tags:
            m = t.match(line)
            if m:
                found = string.lower(m.group(1))
                prefix = len(m.group(0))
                line = ((' ' * prefix) + line[prefix:])
                break
        if found:
            first = 0
            self.add_markup()
            self.markup = found
            if (len(string.strip(line)) > 0):
                self.markup_lines.append(line)
        elif (first == 0):
            self.markup_lines.append(line)
    self.add_markup()
    return self.markups
