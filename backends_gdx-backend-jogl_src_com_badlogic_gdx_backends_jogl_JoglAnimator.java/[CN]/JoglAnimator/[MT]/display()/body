{
  Iterator iter=drawableIterator();
  if (!isContinuous) {
    boolean needToWait=true;
    while (needToWait) {
      try {
synchronized (contMonitor) {
          contMonitor.wait();
        }
        needToWait=false;
      }
 catch (      InterruptedException e) {
        needToWait=false;
      }
    }
  }
  while (iter.hasNext()) {
    GLAutoDrawable drawable=(GLAutoDrawable)iter.next();
    if (drawable instanceof JComponent) {
      lightweights.add(drawable);
    }
 else {
      try {
        drawable.display();
      }
 catch (      RuntimeException e) {
        if (ignoreExceptions) {
          if (printExceptions) {
            e.printStackTrace();
          }
        }
 else {
          throw (e);
        }
      }
    }
  }
  if (lightweights.size() > 0) {
    try {
      SwingUtilities.invokeAndWait(drawWithRepaintManagerRunnable);
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
    lightweights.clear();
  }
}
