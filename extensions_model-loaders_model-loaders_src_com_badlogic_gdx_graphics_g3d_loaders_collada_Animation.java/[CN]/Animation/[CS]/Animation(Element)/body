{
  Array<Element> animElements=libAnimElement.getChildrenByName("animation");
  for (int i=0; i < animElements.size; i++) {
    Element animElement=animElements.get(i);
    Array<Element> colladaSources=animElement.getChildrenByName("source");
    Map<String,Source> sources=new HashMap<String,Source>();
    for (int j=0; j < colladaSources.size; j++) {
      Element colladaSource=colladaSources.get(j);
      if (colladaSource.getChildrenByName("float_array").size != 0) {
        sources.put(colladaSource.getAttribute("id"),new Source(colladaSource));
      }
    }
    ObjectMap<String,String> mapping=new ObjectMap<String,String>();
    Element samplerElement=animElement.getChildByName("sampler");
    if (samplerElement == null)     throw new GdxRuntimeException("no sampler in animation element in scene");
    Array<Element> inputs=samplerElement.getChildrenByName("input");
    for (int k=0; k < inputs.size; k++) {
      mapping.put(inputs.get(k).getAttribute("semantic"),inputs.get(k).getAttribute("source").replaceFirst("#",""));
    }
    Element channelElement=animElement.getChildByName("channel");
    if (channelElement == null)     throw new GdxRuntimeException("no sampler in animation element in scene");
    String channelName=channelElement.getAttribute("target");
    channels.add(channelName);
    inputMap.put(channelName,sources.get(mapping.get("INPUT")).data);
    outputMap.put(channelName,sources.get(mapping.get("OUTPUT")).data);
  }
  keyFrames=new SkeletonKeyframe[channels.size][];
  for (int i=0; i < channels.size; i++) {
    String channel=channels.get(i);
    float[] input=inputMap.get(channel);
    float[] output=outputMap.get(channel);
    keyFrames[i]=new SkeletonKeyframe[input.length];
    for (int j=0; j < input.length; j++) {
      SkeletonKeyframe frame=new SkeletonKeyframe();
      keyFrames[i][j]=frame;
      Matrix4 m=getMatrix(output,j * 16);
      m.getTranslation(frame.position);
      m.getRotation(frame.rotation);
      frame.timeStamp=input[j];
    }
  }
}
