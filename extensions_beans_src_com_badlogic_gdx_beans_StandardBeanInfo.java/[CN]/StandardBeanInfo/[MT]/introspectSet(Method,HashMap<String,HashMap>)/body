{
  String methodName=theMethod.getName();
  if (methodName == null) {
    return;
  }
  String propertyName;
  Class returnType;
  Class[] paramTypes;
  returnType=theMethod.getReturnType();
  if (returnType != void.class) {
    return;
  }
  if (methodName == null || !methodName.startsWith(PREFIX_SET)) {
    return;
  }
  propertyName=decapitalize(methodName.substring(PREFIX_SET.length()));
  if (!isValidProperty(propertyName)) {
    return;
  }
  paramTypes=theMethod.getParameterTypes();
  if (paramTypes.length == 0 || paramTypes.length > 2 || (paramTypes.length == 2 && paramTypes[0] != int.class)) {
    return;
  }
  HashMap table=propertyTable.get(propertyName);
  if (table == null) {
    table=new HashMap();
    propertyTable.put(propertyName,table);
  }
  ArrayList<Method> setters=(ArrayList<Method>)table.get(STR_SETTERS);
  if (setters == null) {
    setters=new ArrayList<Method>();
    table.put(STR_SETTERS,setters);
  }
  Class[] exceptions=theMethod.getExceptionTypes();
  for (  Class e : exceptions) {
    if (e.equals(PropertyVetoException.class)) {
      table.put(STR_IS_CONSTRAINED,Boolean.TRUE);
    }
  }
  setters.add(theMethod);
}
