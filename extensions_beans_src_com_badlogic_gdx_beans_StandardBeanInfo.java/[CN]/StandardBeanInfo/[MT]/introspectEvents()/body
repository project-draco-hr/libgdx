{
  MethodDescriptor[] theMethods=introspectMethods();
  if (theMethods == null)   return null;
  HashMap<String,HashMap> eventTable=new HashMap<String,HashMap>(theMethods.length);
  for (int i=0; i < theMethods.length; i++) {
    introspectListenerMethods(PREFIX_ADD,theMethods[i].getMethod(),eventTable);
    introspectListenerMethods(PREFIX_REMOVE,theMethods[i].getMethod(),eventTable);
    introspectGetListenerMethods(theMethods[i].getMethod(),eventTable);
  }
  ArrayList<EventSetDescriptor> eventList=new ArrayList<EventSetDescriptor>();
  for (  Map.Entry<String,HashMap> entry : eventTable.entrySet()) {
    HashMap table=entry.getValue();
    Method add=(Method)table.get(PREFIX_ADD);
    Method remove=(Method)table.get(PREFIX_REMOVE);
    if ((add == null) || (remove == null)) {
      continue;
    }
    Method get=(Method)table.get(PREFIX_GET);
    Class<?> listenerType=(Class)table.get("listenerType");
    Method[] listenerMethods=(Method[])table.get("listenerMethods");
    EventSetDescriptor eventSetDescriptor=new EventSetDescriptor(decapitalize(entry.getKey()),listenerType,listenerMethods,add,remove,get);
    eventSetDescriptor.setUnicast(table.get("isUnicast") != null);
    eventList.add(eventSetDescriptor);
  }
  EventSetDescriptor[] theEvents=new EventSetDescriptor[eventList.size()];
  eventList.toArray(theEvents);
  return theEvents;
}
