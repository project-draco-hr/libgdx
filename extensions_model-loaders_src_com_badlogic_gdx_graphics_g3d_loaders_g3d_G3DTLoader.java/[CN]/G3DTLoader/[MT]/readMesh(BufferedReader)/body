{
  String name=readString(in);
  int[] indices=readFaces(in);
  int numVertices=readInt(in);
  int numAttributes=readInt(in);
  if (!readString(in).equals("position"))   throw new GdxRuntimeException("first attribute must be position.");
  Array<FloatArray> uvSets=new Array<FloatArray>();
  boolean hasNormals=false;
  for (int i=1; i < numAttributes; i++) {
    String attributeType=readString(in);
    if (!attributeType.equals("normal") && !attributeType.equals("uv"))     throw new GdxRuntimeException("attribute name must be normal or uv");
    if (attributeType.equals("normal")) {
      if (i != 1)       throw new GdxRuntimeException("attribute normal must be second attribute");
      hasNormals=true;
    }
    if (attributeType.equals("uv")) {
      uvSets.add(readUVSet(in,numVertices));
    }
  }
  int animatedComponents=hasNormals ? 6 : 3;
  int numAnimations=readInt(in);
  KeyframedAnimation[] animations=new KeyframedAnimation[numAnimations];
  for (int i=0; i < numAnimations; i++) {
    String animationName=readString(in);
    int numKeyframes=readInt(in);
    float frameDuration=readFloat(in);
    Keyframe[] keyframes=new Keyframe[numKeyframes];
    float time=0;
    FloatArray vertex=new FloatArray(animatedComponents);
    for (int frame=0; frame < numKeyframes; frame++) {
      float[] vertices=new float[numVertices * (animatedComponents)];
      int idx=0;
      for (int j=0; j < numVertices; j++) {
        idx=readFloatArray(in,vertices,idx);
      }
      Keyframe keyframe=new Keyframe();
      keyframe.timeStamp=time;
      keyframe.animatedComponents=animatedComponents;
      keyframe.vertices=vertices;
      keyframes[frame]=keyframe;
      time+=frameDuration;
      System.out.println("finished frame" + frame);
    }
    KeyframedAnimation animation=new KeyframedAnimation();
    animation.name=animationName;
    animation.frameDuration=frameDuration;
    animation.keyframes=keyframes;
    animations[i]=animation;
  }
  return null;
}
