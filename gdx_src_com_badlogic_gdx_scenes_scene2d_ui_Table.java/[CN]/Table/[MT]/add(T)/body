{
  Cell<T> cell=obtainCell();
  cell.actor=actor;
  if (implicitEndRow) {
    implicitEndRow=false;
    rows--;
    cells.peek().endRow=false;
  }
  Array<Cell> cells=this.cells;
  int cellCount=cells.size;
  if (cellCount > 0) {
    Cell lastCell=cells.peek();
    if (!lastCell.endRow) {
      cell.column=lastCell.column + lastCell.colspan;
      cell.row=lastCell.row;
    }
 else {
      cell.column=0;
      cell.row=lastCell.row + 1;
    }
    if (cell.row > 0) {
      outer:       for (int i=cellCount - 1; i >= 0; i--) {
        Cell other=cells.get(i);
        for (int column=other.column, nn=column + other.colspan; column < nn; column++) {
          if (column == cell.column) {
            cell.cellAboveIndex=i;
            break outer;
          }
        }
      }
    }
  }
 else {
    cell.column=0;
    cell.row=0;
  }
  cells.add(cell);
  cell.set(cellDefaults);
  if (cell.column < columnDefaults.size) {
    Cell columnCell=columnDefaults.get(cell.column);
    if (columnCell != null)     cell.merge(columnCell);
  }
  cell.merge(rowDefaults);
  if (actor != null)   addActor(actor);
  return cell;
}
