{
  try {
    DataInputStream din=new DataInputStream(new BufferedInputStream(in));
    int numAttributes=din.readInt();
    ArrayList<VertexAttribute> attributes=new ArrayList<VertexAttribute>();
    for (int i=0; i < numAttributes; i++) {
      int usage=din.readInt();
      int numComponents=din.readInt();
      int strlen=din.readInt();
      byte[] bytes=new byte[strlen];
      din.readFully(bytes);
      String alias=new String(bytes,"UTF8");
      VertexAttribute attribute=new VertexAttribute(usage,numComponents,alias);
      attributes.add(attribute);
    }
    boolean usesFixedPoint=din.readBoolean();
    int numVertices=din.readInt();
    int numElements=din.readInt();
    int numIndices=din.readInt();
    Mesh mesh=new Mesh(graphics,managed,true,usesFixedPoint,numVertices,numIndices,attributes.toArray(new VertexAttribute[0]));
    if (usesFixedPoint) {
      int[] vertices=new int[numElements];
      for (int i=0; i < numElements; i++)       vertices[i]=din.readInt();
      mesh.setVertices(vertices);
    }
 else {
      float[] vertices=new float[numElements];
      for (int i=0; i < numElements; i++)       vertices[i]=din.readInt();
      mesh.setVertices(vertices);
    }
    if (numIndices > 0) {
      short[] indices=new short[numIndices];
      for (int i=0; i < numIndices; i++)       indices[i]=din.readShort();
      mesh.setIndices(indices);
    }
    return mesh;
  }
 catch (  IOException ex) {
    ex.printStackTrace();
    return null;
  }
}
