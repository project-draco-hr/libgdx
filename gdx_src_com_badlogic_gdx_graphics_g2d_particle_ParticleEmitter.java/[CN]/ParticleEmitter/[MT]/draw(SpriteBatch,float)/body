{
  accumulator+=Math.min(delta * 1000,250);
  if (accumulator < 1) {
    draw(spriteBatch);
    return;
  }
  int deltaMillis=(int)accumulator;
  accumulator-=deltaMillis;
  if (additive) {
    spriteBatch.setBlendFunction(GL10.GL_SRC_ALPHA,GL10.GL_ONE);
  }
  for (int i=0, n=maxParticleCount; i < n; i++) {
    if (active.get(i)) {
      Particle particle=particles[i];
      if (updateParticle(particle,delta,deltaMillis)) {
        particle.draw(spriteBatch);
      }
 else {
        active.clear(i);
      }
    }
  }
  if (additive) {
    spriteBatch.setBlendFunction(GL10.GL_SRC_ALPHA,GL10.GL_ONE_MINUS_SRC_ALPHA);
  }
  if (delayTimer < delay) {
    delayTimer+=deltaMillis;
    return;
  }
  if (firstUpdate) {
    firstUpdate=false;
    addParticle();
  }
  if (durationTimer < duration) {
    durationTimer+=deltaMillis;
  }
 else {
    if (!continuous || allowCompletion) {
      return;
    }
    restart();
  }
  emissionDelta+=deltaMillis;
  float emissionTime=emission + emissionDiff * emissionValue.getScale(durationTimer / (float)duration);
  if (emissionTime > 0) {
    emissionTime=1000 / emissionTime;
    if (emissionDelta >= emissionTime) {
      int emitCount=(int)(emissionDelta / emissionTime);
      emitCount=Math.min(emitCount,maxParticleCount - getActiveCount());
      emissionDelta-=emitCount * emissionTime;
      emissionDelta%=emissionTime;
      addParticles(emitCount);
    }
  }
  if (getActiveCount() < minParticleCount) {
    addParticles(minParticleCount - getActiveCount());
  }
}
