{
  Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT | GL20.GL_DEPTH_BUFFER_BIT | (Gdx.graphics.getBufferFormat().coverageSampling ? GL20.GL_COVERAGE_BUFFER_BIT_NV : 0));
  Gdx.gl.glEnable(GL20.GL_DEPTH_TEST);
  if (currShader == flatShader) {
    currShader.begin();
    currShader.setUniformMatrix("u_projTrans",currCam.combined);
    currShader.setUniformf("u_color",1,0,0,1);
    plane.render(currShader,GL20.GL_TRIANGLE_FAN);
    currShader.setUniformf("u_color",0,1,0,1);
    cube.render(currShader);
    currShader.end();
  }
 else   if (currShader == shadowGenShader) {
    currShader.begin();
    currShader.setUniformMatrix("u_projTrans",currCam.combined);
    plane.render(currShader,GL20.GL_TRIANGLE_FAN);
    cube.render(currShader);
    currShader.end();
  }
 else   if (currShader == shadowMapShader) {
    shadowMap.begin();
    Gdx.gl.glClearColor(1,1,1,1);
    Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT | GL20.GL_DEPTH_BUFFER_BIT);
    Gdx.gl.glClearColor(0,0,0,0);
    Gdx.gl.glEnable(GL20.GL_CULL_FACE);
    Gdx.gl.glCullFace(GL20.GL_FRONT);
    shadowGenShader.begin();
    shadowGenShader.setUniformMatrix("u_projTrans",lightCam.combined);
    plane.render(shadowGenShader,GL20.GL_TRIANGLE_FAN);
    cube.render(shadowGenShader);
    shadowGenShader.end();
    shadowMap.end();
    Gdx.gl.glDisable(GL20.GL_CULL_FACE);
    shadowMapShader.begin();
    shadowMap.getColorBufferTexture().bind();
    shadowMapShader.setUniformi("s_shadowMap",0);
    shadowMapShader.setUniformMatrix("u_projTrans",cam.combined);
    shadowMapShader.setUniformMatrix("u_lightProjTrans",lightCam.combined);
    shadowMapShader.setUniformf("u_color",1,0,0,1);
    plane.render(shadowMapShader,GL20.GL_TRIANGLE_FAN);
    shadowMapShader.setUniformf("u_color",0,1,0,1);
    cube.render(shadowMapShader);
    shadowMapShader.end();
    ui.getSpriteBatch().begin();
    ui.getSpriteBatch().draw(shadowMap.getColorBufferTexture(),0,0,100,100);
    ui.getSpriteBatch().end();
  }
  fpsLabel.setText("fps: " + Gdx.graphics.getFramesPerSecond());
  ui.act();
  ui.draw();
  Table.drawDebug(ui);
}
