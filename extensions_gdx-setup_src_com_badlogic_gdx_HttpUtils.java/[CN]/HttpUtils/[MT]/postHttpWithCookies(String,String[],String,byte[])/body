{
  HttpURLConnection conn=null;
  StringBuilder response;
  try {
    URL commandURL=new URL(url);
    conn=(HttpURLConnection)commandURL.openConnection();
    conn.setDoInput(true);
    conn.setDoOutput(true);
    conn.setUseCaches(false);
    conn.setRequestProperty("Accept-Charset","utf-8");
    conn.setRequestProperty("user-agent","Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.56 Safari/535.11");
    conn.setRequestProperty("Content-Type",contentType);
    for (    String cookie : cookies) {
      conn.setRequestProperty("cookie",URLDecoder.decode(cookie,"UTF-8"));
    }
    conn.setRequestMethod("POST");
    conn.connect();
    if (data != null) {
      BufferedOutputStream bos=new BufferedOutputStream(conn.getOutputStream(),256);
      bos.write(data);
      bos.flush();
    }
    BufferedInputStream bis=new BufferedInputStream(conn.getInputStream(),256);
    InputStreamReader isr=new InputStreamReader(bis,"UTF-8");
    response=new StringBuilder();
    int ch=0;
    while ((ch=isr.read()) != -1) {
      response.append((char)ch);
    }
    HttpResponse resp=new HttpResponse();
    for (    String key : conn.getHeaderFields().keySet()) {
      if (key == null)       continue;
      if (key.equalsIgnoreCase("set-cookie")) {
        for (        String cookie : conn.getHeaderFields().get(key)) {
          resp.cookies.add(cookie);
        }
        break;
      }
    }
    resp.response=response.toString();
    return resp;
  }
 catch (  Exception e) {
    if (conn != null) {
      InputStream in=conn.getErrorStream();
      if (in != null) {
        int c=0;
        try {
          while ((c=in.read()) != -1) {
            System.out.print((char)c);
          }
        }
 catch (        Exception ex) {
        }
      }
    }
    e.printStackTrace();
    return null;
  }
}
