{
  IntArray vertexTypes=this.vertexTypes;
  if (vertexTypes.get(earTipIndex) == CONCAVE)   return false;
  int previousIndex=previousIndex(earTipIndex);
  int nextIndex=nextIndex(earTipIndex);
  float[] vertices=this.vertices;
  float p1x=vertices[previousIndex * 2];
  float p1y=vertices[previousIndex * 2 + 1];
  float p2x=vertices[earTipIndex * 2];
  float p2y=vertices[earTipIndex * 2 + 1];
  float p3x=vertices[nextIndex * 2];
  float p3y=vertices[nextIndex * 2 + 1];
  for (int i=nextIndex(nextIndex); i != previousIndex; i=nextIndex(i)) {
    if (vertexTypes.get(i) != CONVEX) {
      float vx=vertices[i * 2];
      float vy=vertices[i * 2 + 1];
      int areaSign1=computeSpannedAreaSign(p1x,p1y,p2x,p2y,vx,vy);
      if (areaSign1 >= 0) {
        int areaSign2=computeSpannedAreaSign(p2x,p2y,p3x,p3y,vx,vy);
        if (areaSign2 >= 0) {
          int areaSign3=computeSpannedAreaSign(p3x,p3y,p1x,p1y,vx,vy);
          if (areaSign3 >= 0)           return false;
        }
      }
    }
  }
  return true;
}
