{
  this.vertices=vertices;
  int vertexCount=this.vertexCount=count / 2;
  int vertexOffset=offset / 2;
  ShortArray indicesArray=this.indicesArray;
  indicesArray.clear();
  indicesArray.ensureCapacity(vertexCount);
  indicesArray.size=vertexCount;
  short[] indices=this.indices=indicesArray.items;
  if (areVerticesClockwise(vertices,offset,count)) {
    for (short i=0; i < vertexCount; i++)     indices[i]=(short)(vertexOffset + i);
  }
 else {
    for (int i=0, n=vertexCount - 1; i < vertexCount; i++)     indices[i]=(short)(vertexOffset + n - i);
  }
  IntArray vertexTypes=this.vertexTypes;
  vertexTypes.clear();
  vertexTypes.ensureCapacity(vertexCount);
  for (int i=0, n=vertexCount; i < n; ++i)   vertexTypes.add(classifyVertex(i));
  ShortArray triangles=this.triangles;
  triangles.clear();
  triangles.ensureCapacity(Math.max(0,vertexCount - 2) * 3);
  triangulate();
  return triangles;
}
