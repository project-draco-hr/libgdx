{
  final int vertexCount=pVertices.size();
  final int[] vertexTypes=new int[vertexCount];
  this.concaveVertexCount=0;
  if (!areVerticesClockwise(pVertices)) {
    Collections.reverse(pVertices);
  }
  for (int index=0; index < vertexCount; index++) {
    final int previousIndex=computePreviousIndex(pVertices,index);
    final int nextIndex=computeNextIndex(pVertices,index);
    final Vector2 previousVertex=pVertices.get(previousIndex);
    final Vector2 currentVertex=pVertices.get(index);
    final Vector2 nextVertex=pVertices.get(nextIndex);
    if (isTriangleConvex(previousVertex,currentVertex,nextVertex)) {
      vertexTypes[index]=CONVEX;
    }
 else {
      vertexTypes[index]=CONCAVE;
      this.concaveVertexCount++;
    }
  }
  return vertexTypes;
}
