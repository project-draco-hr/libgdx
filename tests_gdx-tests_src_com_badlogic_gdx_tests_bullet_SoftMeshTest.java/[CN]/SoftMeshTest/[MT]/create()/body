{
  super.create();
  world.maxSubSteps=20;
  world.add("ground",0f,0f,0f).setColor(0.25f + 0.5f * (float)Math.random(),0.25f + 0.5f * (float)Math.random(),0.25f + 0.5f * (float)Math.random(),1f);
  model=objLoader.loadModel(Gdx.files.internal("data/wheel.obj"));
  MeshPart meshPart=model.nodes.get(0).parts.get(0).meshPart;
  meshPart.mesh.scale(6,6,6);
  indexMap=BufferUtils.newShortBuffer(meshPart.numVertices);
  positionOffset=meshPart.mesh.getVertexAttribute(Usage.Position).offset;
  normalOffset=meshPart.mesh.getVertexAttribute(Usage.Normal).offset;
  softBody=new btSoftBody(worldInfo,meshPart.mesh.getVerticesBuffer(),meshPart.mesh.getVertexSize(),positionOffset,normalOffset,meshPart.mesh.getIndicesBuffer(),meshPart.indexOffset,meshPart.numVertices,indexMap,0);
  softBody.setMass(0,0);
  com.badlogic.gdx.physics.bullet.softbody.Material pm=softBody.appendMaterial();
  pm.setKLST(0.2f);
  pm.setFlags(0);
  softBody.generateBendingConstraints(2,pm);
  softBody.setConfig_piterations(7);
  softBody.setConfig_kDF(0.2f);
  softBody.randomizeConstraints();
  softBody.setTotalMass(1);
  softBody.translate(tmpV.set(1,5,1));
  ((btSoftRigidDynamicsWorld)(world.collisionWorld)).addSoftBody(softBody);
  world.add(entity=new BulletEntity(model,(btCollisionObject)null,1,5,1));
}
