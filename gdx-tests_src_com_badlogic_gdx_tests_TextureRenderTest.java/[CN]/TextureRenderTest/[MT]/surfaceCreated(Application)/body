{
  camera=new OrthographicCamera(app.getGraphics());
  camera.setViewport(480,320);
  camera.getPosition().set(app.getGraphics().getWidth() / 2,app.getGraphics().getHeight() / 2,0);
  Pixmap pixmap=app.getGraphics().newPixmap(app.getFiles().getFileHandle("data/badlogic.jpg",Files.FileType.Internal));
  texture=app.getGraphics().newTexture(pixmap,Texture.TextureFilter.Linear,Texture.TextureFilter.Linear,Texture.TextureWrap.ClampToEdge,Texture.TextureWrap.ClampToEdge,true);
  float invTexWidth=1.0f / texture.getWidth();
  float invTexHeight=1.0f / texture.getHeight();
  rects=createRects();
  this.mesh=new Mesh(app.getGraphics(),true,false,false,6 * 4 * rects.size(),0,new VertexAttribute(VertexAttributes.Usage.Position,2,"a_position"),new VertexAttribute(VertexAttributes.Usage.TextureCoordinates,2,"a_texCoord"));
  final float[] vertices=new float[rects.size() * 6 * 4];
  int idx=0;
  for (int i=0; i < rects.size(); i++) {
    SimpleRect rect=rects.get(i);
    float u=rect.x * invTexWidth;
    float v=rect.y * invTexHeight;
    float u2=(rect.x + rect.width) * invTexWidth;
    float v2=(rect.y + rect.height) * invTexHeight;
    float fx=rect.x;
    float fy=rect.y;
    float fx2=(rect.x + rect.width);
    float fy2=(rect.y - rect.height);
    vertices[idx++]=fx;
    vertices[idx++]=fy;
    vertices[idx++]=u;
    vertices[idx++]=v;
    vertices[idx++]=fx;
    vertices[idx++]=fy2;
    vertices[idx++]=u;
    vertices[idx++]=v2;
    vertices[idx++]=fx2;
    vertices[idx++]=fy2;
    vertices[idx++]=u2;
    vertices[idx++]=v2;
    vertices[idx++]=fx2;
    vertices[idx++]=fy2;
    vertices[idx++]=u2;
    vertices[idx++]=v2;
    vertices[idx++]=fx2;
    vertices[idx++]=fy;
    vertices[idx++]=u2;
    vertices[idx++]=v;
    vertices[idx++]=fx;
    vertices[idx++]=fy;
    vertices[idx++]=u;
    vertices[idx++]=v;
  }
  this.mesh.setVertices(vertices);
}
