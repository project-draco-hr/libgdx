{
  removedShots.clear();
  if (!ship.isExploding) {
    for (int i=0; i < shots.size(); i++) {
      Shot shot=shots.get(i);
      if (!shot.isInvaderShot)       continue;
      ship.transform.getTranslation(tmpV1);
      shot.transform.getTranslation(tmpV2);
      if (tmpV1.dst(tmpV2) < Ship.SHIP_RADIUS) {
        removedShots.add(shot);
        shot.hasLeftField=true;
        ship.lives--;
        ship.isExploding=true;
        explosions.add(new Explosion(explosionModel,tmpV1));
        if (listener != null)         listener.explosion();
        break;
      }
    }
    for (int i=0; i < removedShots.size(); i++)     shots.remove(removedShots.get(i));
  }
  for (int i=0; i < invaders.size(); i++) {
    Invader invader=invaders.get(i);
    invader.transform.getTranslation(tmpV1);
    ship.transform.getTranslation(tmpV2);
    if (tmpV1.dst(tmpV2) < Ship.SHIP_RADIUS) {
      ship.lives--;
      invaders.remove(invader);
      ship.isExploding=true;
      explosions.add(new Explosion(explosionModel,tmpV1));
      explosions.add(new Explosion(explosionModel,tmpV2));
      if (listener != null)       listener.explosion();
      break;
    }
  }
}
