{
  final Vec2 v=pool1;
  final Vec2 lower=aabb.lowerBound;
  final Vec2 upper=aabb.upperBound;
  final Vec2 v1=m_vertices[0];
  lower.x=(xf.q.c * v1.x - xf.q.s * v1.y) + xf.p.x;
  lower.y=(xf.q.s * v1.x + xf.q.c * v1.y) + xf.p.y;
  upper.set(lower);
  for (int i=1; i < m_count; ++i) {
    Vec2 v2=m_vertices[i];
    v.x=(xf.q.c * v2.x - xf.q.s * v2.y) + xf.p.x;
    v.y=(xf.q.s * v2.x + xf.q.c * v2.y) + xf.p.y;
    Vec2.minToOut(lower,v,lower);
    Vec2.maxToOut(upper,v,upper);
  }
  aabb.lowerBound.x-=m_radius;
  aabb.lowerBound.y-=m_radius;
  aabb.upperBound.x+=m_radius;
  aabb.upperBound.y+=m_radius;
}
