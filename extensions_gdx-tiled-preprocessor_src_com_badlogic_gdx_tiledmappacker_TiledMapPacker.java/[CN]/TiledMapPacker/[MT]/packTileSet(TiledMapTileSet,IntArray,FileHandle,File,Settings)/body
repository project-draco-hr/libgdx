{
  BufferedImage tile;
  Vector2 tileLocation;
  TileSetLayout packerTileSet;
  Graphics g;
  packer=new TexturePacker2(settings);
  int tileWidth=set.getProperties().get("tilewidth",Integer.class);
  int tileHeight=set.getProperties().get("tileheight",Integer.class);
  int firstgid=set.getProperties().get("firstgid",Integer.class);
  String imageName=set.getProperties().get("imagesource",String.class);
  TileSetLayout layout=new TileSetLayout(firstgid,set,inputDirHandle);
  for (int gid=layout.firstgid, i=0; i < layout.numTiles; gid++, i++) {
    if (usedIds != null && !usedIds.contains(gid)) {
      System.out.println("Stripped Id: " + gid);
      continue;
    }
    tileLocation=layout.getLocation(gid);
    tile=new BufferedImage(tileWidth,tileHeight,BufferedImage.TYPE_4BYTE_ABGR);
    g=tile.createGraphics();
    g.drawImage(layout.image,0,0,tileWidth,tileHeight,(int)tileLocation.x,(int)tileLocation.y,(int)tileLocation.x + tileWidth,(int)tileLocation.y + tileHeight,null);
    if (isBlended(tile))     setBlended(gid);
    packer.addImage(tile,removeExtension(removePath(imageName)) + "_" + i);
  }
  File outputFile=getRelativeFile(outputDir,removeExtension(imageName) + " packfile");
  outputFile.getParentFile().mkdirs();
  packer.pack(outputFile.getParentFile(),removeExtension(removePath(imageName)));
}
