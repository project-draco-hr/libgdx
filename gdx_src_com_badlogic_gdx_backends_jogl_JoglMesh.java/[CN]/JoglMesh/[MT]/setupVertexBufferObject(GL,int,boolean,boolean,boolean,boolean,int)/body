{
  vertices=new float[numVertices * 3];
  ByteBuffer byteBuffer=ByteBuffer.allocateDirect(numVertices * 4 * 3);
  byteBuffer.order(ByteOrder.nativeOrder());
  verticesBuffer=byteBuffer.asFloatBuffer();
  int[] buffer=new int[1];
  gl.glGenBuffers(1,buffer,0);
  vertexHandle=buffer[0];
  if (hasColors) {
    byteBuffer=ByteBuffer.allocateDirect(numVertices * 4 * 4);
    byteBuffer.order(ByteOrder.nativeOrder());
    colorsBuffer=byteBuffer.asFloatBuffer();
    colors=new float[numVertices * 4];
    gl.glGenBuffers(1,buffer,0);
    colorHandle=buffer[0];
  }
  if (hasNormals) {
    byteBuffer=ByteBuffer.allocateDirect(numVertices * 4 * 3);
    byteBuffer.order(ByteOrder.nativeOrder());
    normalsBuffer=byteBuffer.asFloatBuffer();
    normals=new float[numVertices * 3];
    gl.glGenBuffers(1,buffer,0);
    normalHandle=buffer[0];
  }
  if (hasUV) {
    byteBuffer=ByteBuffer.allocateDirect(numVertices * 4 * 2);
    byteBuffer.order(ByteOrder.nativeOrder());
    uvBuffer=byteBuffer.asFloatBuffer();
    uv=new float[numVertices * 2];
    gl.glGenBuffers(1,buffer,0);
    uvHandle=buffer[0];
  }
  if (hasIndices) {
    byteBuffer=ByteBuffer.allocateDirect(numIndices * 4);
    byteBuffer.order(ByteOrder.nativeOrder());
    indicesBuffer=byteBuffer.asShortBuffer();
    indices=new short[numIndices];
    gl.glGenBuffers(1,buffer,0);
    indexHandle=buffer[0];
  }
}
