{
  float[] verts=new float[getVertexSize() * numVertices];
  short[] indices=new short[numIndices];
  VertexAttribute[] attributes=getVertexAttributes();
  for (int i=0; i < numIndices; i++) {
    VertexIndices vertex=triangles.get(i);
    if (vertex.index > Short.MAX_VALUE || vertex.index < Short.MIN_VALUE)     throw new GdxRuntimeException("index to big for short: " + vertex.index);
    indices[i]=(short)vertex.index;
  }
  int idx=0;
  int destOffset=0;
  for (int i=0; i < vertices.size; i++) {
    VertexIndices vertex=vertices.get(i);
    for (int j=0; j < sources.length; j++) {
      Source source=sources[j];
      float[] data=source.data;
      int index=vertex.indices[j];
      int components=source.components;
      int sourceOffset=index * components;
      for (int k=0; k < components; k++) {
        verts[destOffset++]=data[sourceOffset++];
      }
    }
  }
  Mesh mesh=new Mesh(true,vertices.size,indices.length,attributes);
  mesh.setVertices(verts);
  mesh.setIndices(indices);
  return mesh;
}
