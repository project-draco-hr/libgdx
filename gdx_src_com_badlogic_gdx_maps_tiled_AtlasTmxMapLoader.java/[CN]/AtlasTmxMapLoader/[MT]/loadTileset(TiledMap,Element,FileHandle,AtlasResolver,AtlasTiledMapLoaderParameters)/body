{
  if (element.getName().equals("tileset")) {
    String name=element.get("name",null);
    int firstgid=element.getIntAttribute("firstgid",1);
    int tilewidth=element.getIntAttribute("tilewidth",0);
    int tileheight=element.getIntAttribute("tileheight",0);
    int spacing=element.getIntAttribute("spacing",0);
    int margin=element.getIntAttribute("margin",0);
    String source=element.getAttribute("source",null);
    String imageSource="";
    int imageWidth=0, imageHeight=0;
    FileHandle image=null;
    if (source != null) {
      FileHandle tsx=getRelativeFileHandle(tmxFile,source);
      try {
        element=xml.parse(tsx);
        name=element.get("name",null);
        tilewidth=element.getIntAttribute("tilewidth",0);
        tileheight=element.getIntAttribute("tileheight",0);
        spacing=element.getIntAttribute("spacing",0);
        margin=element.getIntAttribute("margin",0);
        Element imageElement=element.getChildByName("image");
        imageSource=imageElement.getAttribute("source");
        imageWidth=imageElement.getIntAttribute("width",0);
        imageHeight=imageElement.getIntAttribute("height",0);
      }
 catch (      IOException e) {
        throw new GdxRuntimeException("Error parsing external tileset.");
      }
    }
 else {
      Element imageElement=element.getChildByName("image");
      if (imageElement != null) {
        imageSource=imageElement.getAttribute("source");
        imageWidth=imageElement.getIntAttribute("width",0);
        imageHeight=imageElement.getIntAttribute("height",0);
      }
    }
    String atlasFilePath=map.getProperties().get("atlas",String.class);
    if (atlasFilePath == null) {
      FileHandle atlasFile=tmxFile.sibling(tmxFile.nameWithoutExtension() + ".atlas");
      if (atlasFile.exists())       atlasFilePath=atlasFile.name();
    }
    if (atlasFilePath == null) {
      throw new GdxRuntimeException("The map is missing the 'atlas' property");
    }
    FileHandle atlasHandle=getRelativeFileHandle(tmxFile,atlasFilePath);
    atlasHandle=resolve(atlasHandle.path());
    TextureAtlas atlas=resolver.getAtlas(atlasHandle.path());
    String regionsName=atlasHandle.nameWithoutExtension();
    if (parameter != null && parameter.forceTextureFilters) {
      for (      Texture texture : atlas.getTextures()) {
        trackedTextures.add(texture);
      }
    }
    TiledMapTileSet tileset=new TiledMapTileSet();
    MapProperties props=tileset.getProperties();
    tileset.setName(name);
    props.put("firstgid",firstgid);
    props.put("imagesource",imageSource);
    props.put("imagewidth",imageWidth);
    props.put("imageheight",imageHeight);
    props.put("tilewidth",tilewidth);
    props.put("tileheight",tileheight);
    props.put("margin",margin);
    props.put("spacing",spacing);
    for (    AtlasRegion region : atlas.findRegions(regionsName)) {
      if (region != null) {
        StaticTiledMapTile tile=new StaticTiledMapTile(region);
        if (!yUp) {
          region.flip(false,true);
        }
        int tileid=firstgid + region.index;
        tile.setId(tileid);
        tileset.putTile(tileid,tile);
      }
    }
    for (    Element tileElement : element.getChildrenByName("tile")) {
      int tileid=firstgid + tileElement.getIntAttribute("id",0);
      TiledMapTile tile=tileset.getTile(tileid);
      if (tile == null) {
        Element imageElement=tileElement.getChildByName("image");
        if (imageElement != null) {
          String regionName=imageElement.getAttribute("source");
          regionName=regionName.substring(0,regionName.lastIndexOf('.'));
          AtlasRegion region=atlas.findRegion(regionName);
          if (region == null)           throw new GdxRuntimeException("Tileset region not found: " + regionName);
          tile=new StaticTiledMapTile(region);
          if (!yUp)           region.flip(false,true);
          tile.setId(tileid);
          tileset.putTile(tileid,tile);
        }
      }
      if (tile != null) {
        String terrain=tileElement.getAttribute("terrain",null);
        if (terrain != null) {
          tile.getProperties().put("terrain",terrain);
        }
        String probability=tileElement.getAttribute("probability",null);
        if (probability != null) {
          tile.getProperties().put("probability",probability);
        }
        Element properties=tileElement.getChildByName("properties");
        if (properties != null) {
          loadProperties(tile.getProperties(),properties);
        }
      }
    }
    Element properties=element.getChildByName("properties");
    if (properties != null) {
      loadProperties(tileset.getProperties(),properties);
    }
    map.getTileSets().addTileSet(tileset);
  }
}
