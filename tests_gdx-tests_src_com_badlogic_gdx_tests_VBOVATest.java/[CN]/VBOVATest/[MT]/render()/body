{
  Gdx.gl11.glClear(GL11.GL_COLOR_BUFFER_BIT);
switch (mode) {
case 0:
    buffer=vbo;
  Gdx.gl11.glColor4f(1,0,0,1);
break;
case 1:
buffer=vbosd;
Gdx.gl11.glColor4f(0,1,0,1);
break;
case 2:
buffer=va;
Gdx.gl11.glColor4f(0,0,1,1);
break;
}
buffer.bind();
if (!isStatic) buffer.setVertices(vertices,0,vertices.length);
Gdx.gl11.glDrawArrays(GL11.GL_TRIANGLES,0,TRIANGLES * 3);
buffer.unbind();
long endTime=System.nanoTime();
if (endTime - startTime >= 4000000000l) {
double secs=(endTime - startTime) / 1000000000.0;
double fps=frames / secs;
Gdx.app.log("VBOVATest","mode " + buffer.getClass().getSimpleName() + ", static: "+ isStatic+ ", fps: "+ fps);
mode++;
if (mode > 2) {
mode=0;
isStatic=!isStatic;
}
startTime=System.nanoTime();
frames=0;
}
frames++;
}
