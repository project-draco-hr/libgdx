{
  if (stage == null) {
    Gdx.input.addInputListener(this);
    texture=Gdx.graphics.newTexture(Gdx.files.getFileHandle("data/badlogicsmall.jpg",FileType.Internal),TextureFilter.Linear,TextureFilter.Linear,TextureWrap.ClampToEdge,TextureWrap.ClampToEdge);
    stage=new Stage(480,320,true);
    float loc=(NUM_SPRITES * (32 + SPACING) - SPACING) / 2;
    for (int i=0; i < NUM_GROUPS; i++) {
      Group group=new Group("group" + i);
      group.x=(float)Math.random() * (stage.width() - NUM_SPRITES * (32 + SPACING));
      group.y=(float)Math.random() * (stage.height() - NUM_SPRITES * (32 + SPACING));
      group.originX=loc;
      group.originY=loc;
      fillGroup(group,texture);
      stage.addActor(group);
    }
    uiTexture=Gdx.graphics.newTexture(Gdx.files.getFileHandle("data/ui.png",FileType.Internal),TextureFilter.Linear,TextureFilter.Linear,TextureWrap.ClampToEdge,TextureWrap.ClampToEdge);
    ui=new Stage(480,320,false);
    Image blend=new Image("blend button",new TextureRegion(uiTexture,0,0,64,32));
    blend.y=ui.height() - 32;
    Image rotate=new Image("rotate button",new TextureRegion(uiTexture,64,0,64,32));
    rotate.y=blend.y;
    rotate.x=64;
    Image scale=new Image("scale button",new TextureRegion(uiTexture,64,32,64,32));
    scale.y=blend.y;
    scale.x=128;
    ui.addActor(blend);
    ui.addActor(rotate);
    ui.addActor(scale);
    Thread.currentThread().setPriority(Thread.MAX_PRIORITY);
    renderer=new ImmediateModeRenderer();
  }
}
