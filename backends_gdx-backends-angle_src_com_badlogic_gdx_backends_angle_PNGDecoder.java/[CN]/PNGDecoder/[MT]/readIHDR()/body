{
  checkChunkLength(13);
  readChunk(buffer,0,13);
  width=readInt(buffer,0);
  height=readInt(buffer,4);
  bitdepth=buffer[8] & 255;
  colorType=buffer[9] & 255;
switch (colorType) {
case COLOR_GREYSCALE:
    if (bitdepth != 8) {
      throw new IOException("Unsupported bit depth: " + bitdepth);
    }
  bytesPerPixel=1;
break;
case COLOR_GREYALPHA:
if (bitdepth != 8) {
throw new IOException("Unsupported bit depth: " + bitdepth);
}
bytesPerPixel=2;
break;
case COLOR_TRUECOLOR:
if (bitdepth != 8) {
throw new IOException("Unsupported bit depth: " + bitdepth);
}
bytesPerPixel=3;
break;
case COLOR_TRUEALPHA:
if (bitdepth != 8) {
throw new IOException("Unsupported bit depth: " + bitdepth);
}
bytesPerPixel=4;
break;
case COLOR_INDEXED:
switch (bitdepth) {
case 8:
case 4:
case 2:
case 1:
bytesPerPixel=1;
break;
default :
throw new IOException("Unsupported bit depth: " + bitdepth);
}
break;
default :
throw new IOException("unsupported color format: " + colorType);
}
if (buffer[10] != 0) {
throw new IOException("unsupported compression method");
}
if (buffer[11] != 0) {
throw new IOException("unsupported filtering method");
}
if (buffer[12] != 0) {
throw new IOException("unsupported interlace method");
}
}
