{
  int i;
  long startTime, endTime;
  font=new BitmapFont();
  font.setColor(Color.RED);
  spriteBatch=new SpriteBatch();
  final String path="data/tiledmap/";
  final String mapname="tilemap csv";
  FileHandle mapHandle=Gdx.files.internal(path + mapname + ".tmx");
  FileHandle baseDir=Gdx.files.internal(path);
  startTime=System.currentTimeMillis();
  map=TiledLoader.createMap(mapHandle);
  endTime=System.currentTimeMillis();
  System.out.println("Loaded map in " + (endTime - startTime) + "mS");
  atlas=new TileAtlas(map,baseDir);
  int blockWidth=10;
  int blockHeight=12;
  startTime=System.currentTimeMillis();
  tileMapRenderer=new TileMapRenderer(map,atlas,blockWidth,blockHeight);
  endTime=System.currentTimeMillis();
  System.out.println("Created cache in " + (endTime - startTime) + "mS");
  for (  TiledObjectGroup group : map.objectGroups) {
    for (    TiledObject object : group.objects) {
      System.out.println("Object " + object.name + " x,y = "+ object.x+ ","+ object.y+ " width,height = "+ object.width+ ","+ object.height);
    }
  }
  cam=new OrthographicCamera(SCREEN_WIDTH,SCREEN_HEIGHT);
  cam.position.set(map.width * map.tileWidth / 2,map.height * map.tileHeight / 2,0);
  camController=new OrthoCamController(cam);
  Gdx.input.setInputProcessor(camController);
  float maxX=map.width * map.tileWidth;
  float maxY=map.height * map.tileHeight;
  maxCamPosition.set(maxX,maxY);
}
