{
  int i;
  long startTime, endTime;
  font=new BitmapFont();
  font.setColor(Color.RED);
  spriteBatch=new SpriteBatch();
  final String path="data/tiledmap/flip_rotate/";
  final String mapname="flip_rotate";
  FileHandle mapHandle=Gdx.files.internal(path + mapname + ".tmx");
  FileHandle baseDir=Gdx.files.internal(path);
  startTime=System.currentTimeMillis();
  map=TiledLoader.createMap(mapHandle);
  endTime=System.currentTimeMillis();
  System.out.println("Loaded map in " + (endTime - startTime) + "mS");
  atlas=new TileAtlas(map,baseDir);
  int blockWidth=15;
  int blockHeight=10;
  startTime=System.currentTimeMillis();
  tileMapRenderer=new TileMapRenderer(map,atlas,blockWidth,blockHeight,16,16);
  endTime=System.currentTimeMillis();
  System.out.println("Created cache in " + (endTime - startTime) + "mS");
  for (  TiledObjectGroup group : map.objectGroups) {
    for (    TiledObject object : group.objects) {
      System.out.println("Object " + object.name + " x,y = "+ object.x+ ","+ object.y+ " width,height = "+ object.width+ ","+ object.height);
    }
  }
  float aspectRatio=(float)Gdx.graphics.getWidth() / (float)Gdx.graphics.getHeight();
  cam=new OrthographicCamera(100f * aspectRatio,100f);
  cam.position.set(tileMapRenderer.getMapWidthUnits() / 2,tileMapRenderer.getMapHeightUnits() / 2,0);
  camController=new OrthoCamController(cam);
  Gdx.input.setInputProcessor(camController);
  maxCamPosition.set(tileMapRenderer.getMapWidthUnits(),tileMapRenderer.getMapHeightUnits());
}
