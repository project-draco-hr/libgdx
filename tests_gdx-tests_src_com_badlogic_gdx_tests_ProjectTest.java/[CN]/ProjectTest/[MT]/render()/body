{
  GL10 gl=Gdx.gl10;
  gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);
  gl.glEnable(GL10.GL_DEPTH_TEST);
  cam.update();
  gl.glMatrixMode(GL10.GL_PROJECTION);
  gl.glLoadMatrixf(cam.projection.val,0);
  gl.glMatrixMode(GL10.GL_MODELVIEW);
  gl.glLoadMatrixf(cam.view.val,0);
  int visible=0;
  for (int i=0; i < positions.length; i++) {
    if (cam.frustum.sphereInFrustum(positions[i],1)) {
      gl.glColor4f(1,1,1,1);
      visible++;
    }
 else {
      gl.glColor4f(1,0,0,1);
    }
    gl.glPushMatrix();
    gl.glTranslatef(positions[i].x,positions[i].y,positions[i].z);
    sphere.render(GL10.GL_TRIANGLES);
    gl.glPopMatrix();
  }
  if (Gdx.input.isKeyPressed(Keys.KEYCODE_A))   cam.rotate(20 * Gdx.graphics.getDeltaTime(),0,1,0);
  if (Gdx.input.isKeyPressed(Keys.KEYCODE_D))   cam.rotate(-20 * Gdx.graphics.getDeltaTime(),0,1,0);
  gl.glDisable(GL10.GL_DEPTH_TEST);
  batch.begin();
  for (int i=0; i < positions.length; i++) {
    tmp.set(positions[i]);
    cam.project(tmp);
    if (tmp.z < 0)     continue;
    batch.draw(logo,tmp.x,tmp.y);
  }
  batch.end();
}
