{
  glfwDefaultWindowHints();
  glfwWindowHint(GLFW_VISIBLE,GLFW_FALSE);
  glfwWindowHint(GLFW_RESIZABLE,resizable ? GLFW_TRUE : GLFW_FALSE);
  glfwWindowHint(GLFW_RED_BITS,r);
  glfwWindowHint(GLFW_GREEN_BITS,g);
  glfwWindowHint(GLFW_BLUE_BITS,b);
  glfwWindowHint(GLFW_ALPHA_BITS,a);
  glfwWindowHint(GLFW_STENCIL_BITS,stencil);
  glfwWindowHint(GLFW_DEPTH_BITS,depth);
  glfwWindowHint(GLFW_SAMPLES,samples);
  long windowHandle=glfwCreateWindow(width,height,title,fullscreen ? glfwGetPrimaryMonitor() : 0,sharedContextWindow);
  if (windowHandle == 0) {
    throw new GdxRuntimeException("Couldn't create window");
  }
  if (x == -1 && y == -1) {
    GLFWVidMode vidMode=glfwGetVideoMode(glfwGetPrimaryMonitor());
    glfwSetWindowPos(windowHandle,vidMode.width() / 2 - width / 2,vidMode.height() / 2 - height / 2);
  }
 else {
    glfwSetWindowPos(windowHandle,x,y);
  }
  if (title != null) {
    glfwSetWindowTitle(windowHandle,title);
  }
  glfwSwapInterval(vSyncEnabled ? 1 : 0);
  glfwMakeContextCurrent(windowHandle);
  GL.createCapabilities();
  String version=GL11.glGetString(GL20.GL_VERSION);
  int glMajorVersion=Integer.parseInt("" + version.charAt(0));
  if (glMajorVersion <= 1)   throw new GdxRuntimeException("OpenGL 2.0 or higher with the FBO extension is required. OpenGL version: " + version);
  if (glMajorVersion == 2 || version.contains("2.1")) {
    if (glfwExtensionSupported("GL_EXT_framebuffer_object") == GLFW_FALSE && glfwExtensionSupported("GL_ARB_framebuffer_object") == GLFW_FALSE) {
      throw new GdxRuntimeException("OpenGL 2.0 or higher with the FBO extension is required. OpenGL version: " + version + ", FBO extension: false");
    }
  }
  for (int i=0; i < 2; i++) {
    GL11.glClearColor(initialBackgroundColor.r,initialBackgroundColor.g,initialBackgroundColor.b,initialBackgroundColor.a);
    GL11.glClear(GL11.GL_COLOR_BUFFER_BIT);
    glfwSwapBuffers(windowHandle);
  }
  return windowHandle;
}
