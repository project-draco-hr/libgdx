{
  Class<?> superClz;
  int superDist=INFINITY;
  if (!clz2.isAssignableFrom(clz1)) {
    return INFINITY;
  }
  if (clz1.getName().equals(clz2.getName())) {
    return 0;
  }
  superClz=clz1.getSuperclass();
  if (superClz != null) {
    superDist=getDistance(superClz,clz2);
  }
  if (clz2.isInterface()) {
    Class<?>[] interfaces=clz1.getInterfaces();
    int bestDist=INFINITY;
    for (    Class<?> element : interfaces) {
      int curDist=getDistance(element,clz2);
      if (curDist < bestDist) {
        bestDist=curDist;
      }
    }
    if (superDist < bestDist) {
      bestDist=superDist;
    }
    return (bestDist != INFINITY ? bestDist + 1 : INFINITY);
  }
  return (superDist != INFINITY ? superDist + 2 : INFINITY);
}
