{
  if (currentMaterial != renderable.material) {
    currentMaterial=renderable.material;
    if (!currentMaterial.has(BlendingAttribute.Type))     context.setBlending(false,GL10.GL_SRC_ALPHA,GL10.GL_ONE_MINUS_SRC_ALPHA);
    if (!currentMaterial.has(ColorAttribute.Diffuse))     Gdx.gl10.glColor4f(1,1,1,1);
    if (!currentMaterial.has(TextureAttribute.Diffuse))     Gdx.gl10.glDisable(GL10.GL_TEXTURE_2D);
    int cullFace=0;
    for (    final Material.Attribute attribute : currentMaterial) {
      if (attribute.type == BlendingAttribute.Type)       context.setBlending(true,((BlendingAttribute)attribute).sourceFunction,((BlendingAttribute)attribute).destFunction);
 else       if (attribute.type == ColorAttribute.Diffuse)       Gdx.gl10.glColor4f(((ColorAttribute)attribute).color.r,((ColorAttribute)attribute).color.g,((ColorAttribute)attribute).color.b,((ColorAttribute)attribute).color.a);
 else       if (attribute.type == TextureAttribute.Diffuse) {
        if (currentTexture0 != ((TextureAttribute)attribute).textureDescription.texture)         (currentTexture0=((TextureAttribute)attribute).textureDescription.texture).bind(0);
        Gdx.gl10.glEnable(GL10.GL_TEXTURE_2D);
      }
 else       if ((attribute.type & IntAttribute.CullFace) == IntAttribute.CullFace)       cullFace=((IntAttribute)attribute).value;
    }
    context.setCullFace(cullFace);
  }
  if (currentTransform != renderable.modelTransform) {
    if (currentTransform != null)     Gdx.gl10.glPopMatrix();
    currentTransform=renderable.modelTransform;
    Gdx.gl10.glPushMatrix();
    Gdx.gl10.glLoadMatrixf(currentTransform.val,0);
  }
  bindLights(renderable.lights);
  if (currentMesh != renderable.mesh) {
    if (currentMesh != null)     currentMesh.unbind();
    (currentMesh=renderable.mesh).bind();
  }
  renderable.mesh.render(renderable.primitiveType,renderable.meshPartOffset,renderable.meshPartSize);
}
